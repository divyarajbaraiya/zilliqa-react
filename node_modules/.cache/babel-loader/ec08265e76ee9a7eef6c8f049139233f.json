{"ast":null,"code":"var _jsxFileName = \"/home/webelight1/Documents/Zilliqa/dev-portal-examples/hello-world/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nconst {\n  BN,\n  Long,\n  bytes,\n  units\n} = require('@zilliqa-js/util');\n\nconst {\n  toBech32Address\n} = require('@zilliqa-js/crypto');\n\nconst {\n  Zilliqa\n} = require('@zilliqa-js/zilliqa');\n\nconst {\n  StatusType,\n  MessageType\n} = require('@zilliqa-js/subscriptions');\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contractAddress: '',\n      setHelloValue: '',\n      welcomeMsg: ''\n    };\n  }\n\n  handleAddressChange(event) {\n    this.setState({\n      contractAddress: event.target.value\n    });\n  }\n\n  handleSubmit() {\n    localStorage.setItem(\"contract_address\", this.state.contractAddress);\n  }\n\n  handleHelloChange(event) {\n    this.setState({\n      setHelloValue: event.target.value\n    });\n  }\n\n  async verifyWalletEnable(callback) {\n    if (window.zilPay.wallet.isEnable) {\n      callback();\n    } else {\n      const isConnect = await window.zilPay.wallet.connect();\n\n      if (isConnect) {\n        callback();\n      } else {\n        alert(\"Not able to call setHello as transaction is rejected\");\n      }\n    }\n  }\n\n  async updateWelcomeMsg() {\n    const zilliqa = window.zilPay;\n    let setHelloValue = this.state.setHelloValue;\n    let contractAddress = localStorage.getItem(\"contract_address\");\n    const CHAIN_ID = 333;\n    const MSG_VERSION = 1;\n    const VERSION = bytes.pack(CHAIN_ID, MSG_VERSION);\n    const myGasPrice = units.toQa('2000', units.Units.Li); // Gas Price that will be used by all transactions\n\n    contractAddress = contractAddress.substring(2);\n    const ftAddr = toBech32Address(contractAddress);\n\n    try {\n      const contract = zilliqa.contracts.at(ftAddr);\n      const callTx = await contract.call('setHello', [{\n        vname: 'msg',\n        type: 'String',\n        value: setHelloValue\n      }], {\n        // amount, gasPrice and gasLimit must be explicitly provided\n        version: VERSION,\n        amount: new BN(0),\n        gasPrice: myGasPrice,\n        gasLimit: Long.fromNumber(10000)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getWelcomeMsg() {\n    const zilliqa = window.zilPay;\n    let contractAddress = localStorage.getItem(\"contract_address\");\n    const CHAIN_ID = 333;\n    const MSG_VERSION = 1;\n    const VERSION = bytes.pack(CHAIN_ID, MSG_VERSION);\n    const myGasPrice = units.toQa('2000', units.Units.Li); // Gas Price that will be used by all transactions\n    // contractAddress = contractAddress.substring(2);\n\n    const ftAddr = toBech32Address(contractAddress);\n\n    try {\n      const contract = zilliqa.contracts.at(ftAddr);\n      const callTx = await contract.call('getHello', [], {\n        // amount, gasPrice and gasLimit must be explicitly provided\n        version: VERSION,\n        amount: new BN(0),\n        gasPrice: myGasPrice,\n        gasLimit: Long.fromNumber(10000)\n      });\n      console.log(callTx, \"callTx\");\n      console.log(JSON.stringify(callTx.TranID));\n      this.eventLogSubscription();\n    } catch (err) {\n      console.log(err);\n    }\n  } // Code that listens to websocket and updates welcome message when getHello() gets called.\n\n\n  async eventLogSubscription() {\n    const zilliqa = new Zilliqa('https://dev-api.zilliqa.com');\n    const subscriber = zilliqa.subscriptionBuilder.buildEventLogSubscriptions('wss://dev-ws.zilliqa.com', {\n      // smart contract address you want to listen on  \n      addresses: [localStorage.getItem(\"contract_address\")]\n    });\n    subscriber.emitter.on(StatusType.SUBSCRIBE_EVENT_LOG, event => {\n      // if subscribe success, it will echo the subscription info\n      console.log('get SubscribeEventLog echo : ', event);\n    });\n    subscriber.emitter.on(MessageType.EVENT_LOG, event => {\n      console.log('get new event log: ', JSON.stringify(event)); // updating the welcome msg when a new event log is received related to getHello() transition\n\n      if (event.hasOwnProperty(\"value\")) {\n        if (event.value[0].event_logs[0]._eventname == \"getHello()\") {\n          let welcomeMsg = event.value[0].event_logs[0].params[0].value;\n          this.setState({\n            welcomeMsg: welcomeMsg\n          });\n          console.log(\"welcomeMsg\", welcomeMsg);\n        }\n      }\n    });\n    await subscriber.start();\n  }\n\n  async connectZilpay() {\n    try {\n      await window.zilPay.wallet.connect();\n\n      if (window.zilPay.wallet.isConnect) {\n        localStorage.setItem(\"zilpay_connect\", true);\n        window.location.reload(false);\n      } else {\n        alert(\"Zilpay connection failed, try again...\");\n      }\n    } catch (error) {}\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \" \", `Current Contract Address : ${localStorage.getItem(\"contract_address\")}`, \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"Update Contract Address\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"New Address \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleAddressChange,\n      size: \"70\",\n      placeholder: \"Format: 0x47d9CEea9a2DA23dc6b2D96A16F7Fbf884580665\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \" Lists of Transitions\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"Set Public Key\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleHelloChange,\n      size: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.verifyWalletEnable(this.updateWelcomeMsg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, \"Set Hello\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 98\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, \"Get Public Key\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.verifyWalletEnable(this.getWelcomeMsg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, \"Get Hello\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 95\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, \" \", `Current Welcome Msg : ${this.state.welcomeMsg}`, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), !localStorage.getItem(\"zilpay_connect\") && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.connectZilpay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 53\n      }\n    }, \"Connect Zilpay\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/webelight1/Documents/Zilliqa/dev-portal-examples/hello-world/src/App.js"],"names":["React","BN","Long","bytes","units","require","toBech32Address","Zilliqa","StatusType","MessageType","App","Component","constructor","props","state","contractAddress","setHelloValue","welcomeMsg","handleAddressChange","event","setState","target","value","handleSubmit","localStorage","setItem","handleHelloChange","verifyWalletEnable","callback","window","zilPay","wallet","isEnable","isConnect","connect","alert","updateWelcomeMsg","zilliqa","getItem","CHAIN_ID","MSG_VERSION","VERSION","pack","myGasPrice","toQa","Units","Li","substring","ftAddr","contract","contracts","at","callTx","call","vname","type","version","amount","gasPrice","gasLimit","fromNumber","err","console","log","getWelcomeMsg","JSON","stringify","TranID","eventLogSubscription","subscriber","subscriptionBuilder","buildEventLogSubscriptions","addresses","emitter","on","SUBSCRIBE_EVENT_LOG","EVENT_LOG","hasOwnProperty","event_logs","_eventname","params","start","connectZilpay","location","reload","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nconst { BN, Long, bytes, units } = require('@zilliqa-js/util');\nconst { toBech32Address } = require('@zilliqa-js/crypto');\nconst { Zilliqa } = require('@zilliqa-js/zilliqa');\nconst { StatusType, MessageType } = require('@zilliqa-js/subscriptions');\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contractAddress: '',\n      setHelloValue: '',\n      welcomeMsg: ''\n    };\n  }\n\n  handleAddressChange(event) {\n    this.setState({ contractAddress: event.target.value });\n  }\n\n  handleSubmit() {\n    localStorage.setItem(\"contract_address\", this.state.contractAddress);\n  }\n\n  handleHelloChange(event) {\n    this.setState({ setHelloValue: event.target.value });\n  }\n\n  async verifyWalletEnable(callback) {\n    if (window.zilPay.wallet.isEnable) {\n      callback();\n    }\n    else {\n      const isConnect = await window.zilPay.wallet.connect();\n      if (isConnect) {\n        callback();\n      } else {\n        alert(\"Not able to call setHello as transaction is rejected\");\n      }\n    }\n  }\n\n  async updateWelcomeMsg() {\n    const zilliqa = window.zilPay;\n    let setHelloValue = this.state.setHelloValue;\n    let contractAddress = localStorage.getItem(\"contract_address\");\n    const CHAIN_ID = 333;\n    const MSG_VERSION = 1;\n    const VERSION = bytes.pack(CHAIN_ID, MSG_VERSION);\n    const myGasPrice = units.toQa('2000', units.Units.Li); // Gas Price that will be used by all transactions\n    contractAddress = contractAddress.substring(2);\n    const ftAddr = toBech32Address(contractAddress);\n    try {\n      const contract = zilliqa.contracts.at(ftAddr);\n      const callTx = await contract.call(\n        'setHello',\n        [\n          {\n            vname: 'msg',\n            type: 'String',\n            value: setHelloValue\n          }\n        ],\n        {\n          // amount, gasPrice and gasLimit must be explicitly provided\n          version: VERSION,\n          amount: new BN(0),\n          gasPrice: myGasPrice,\n          gasLimit: Long.fromNumber(10000),\n        }\n      );\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getWelcomeMsg() {\n\n    const zilliqa = window.zilPay;\n    let contractAddress = localStorage.getItem(\"contract_address\");\n    const CHAIN_ID = 333;\n    const MSG_VERSION = 1;\n    const VERSION = bytes.pack(CHAIN_ID, MSG_VERSION);\n    const myGasPrice = units.toQa('2000', units.Units.Li); // Gas Price that will be used by all transactions\n    // contractAddress = contractAddress.substring(2);\n    const ftAddr = toBech32Address(contractAddress);\n    try {\n      const contract = zilliqa.contracts.at(ftAddr);\n      const callTx = await contract.call(\n        'getHello',\n        [\n        ],\n        {\n          // amount, gasPrice and gasLimit must be explicitly provided\n          version: VERSION,\n          amount: new BN(0),\n          gasPrice: myGasPrice,\n          gasLimit: Long.fromNumber(10000),\n        }\n      );\n      console.log(callTx, \"callTx\");\n      console.log(JSON.stringify(callTx.TranID));\n      this.eventLogSubscription();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Code that listens to websocket and updates welcome message when getHello() gets called.\n  async eventLogSubscription() {\n    const zilliqa = new Zilliqa('https://dev-api.zilliqa.com');\n    const subscriber = zilliqa.subscriptionBuilder.buildEventLogSubscriptions(\n      'wss://dev-ws.zilliqa.com',\n      {\n        // smart contract address you want to listen on  \n        addresses: [localStorage.getItem(\"contract_address\")],\n      },\n    );\n\n    subscriber.emitter.on(StatusType.SUBSCRIBE_EVENT_LOG, (event) => {\n      // if subscribe success, it will echo the subscription info\n      console.log('get SubscribeEventLog echo : ', event);\n    });\n\n    subscriber.emitter.on(MessageType.EVENT_LOG, (event) => {\n      console.log('get new event log: ', JSON.stringify(event));\n      // updating the welcome msg when a new event log is received related to getHello() transition\n      if (event.hasOwnProperty(\"value\")) {\n        if (event.value[0].event_logs[0]._eventname == \"getHello()\") {\n          let welcomeMsg = event.value[0].event_logs[0].params[0].value;\n          this.setState({ welcomeMsg: welcomeMsg });\n          console.log(\"welcomeMsg\", welcomeMsg);\n        }\n      }\n    });\n    await subscriber.start();\n  }\n\n  async connectZilpay() {\n    try {\n      await window.zilPay.wallet.connect();\n      if (window.zilPay.wallet.isConnect) {\n        localStorage.setItem(\"zilpay_connect\", true);\n        window.location.reload(false);\n      } else {\n        alert(\"Zilpay connection failed, try again...\")\n      }\n    } catch (error) { }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div> {`Current Contract Address : ${localStorage.getItem(\"contract_address\")}`} </div>\n        <h3>Update Contract Address</h3>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            New Address <br />\n            <input type=\"text\" onChange={this.handleAddressChange} size=\"70\" placeholder=\"Format: 0x47d9CEea9a2DA23dc6b2D96A16F7Fbf884580665\" />\n          </label><br />\n          <input type=\"submit\" value=\"Submit\" />\n          <hr></hr>\n        </form>\n\n\n        <div> Lists of Transitions</div>\n        <br />\n\n        <label>\n          Set Public Key\n        </label>\n        <br />\n        <input type=\"text\" onChange={this.handleHelloChange} size=\"30\" />\n        <br />\n        <button onClick={() => this.verifyWalletEnable(this.updateWelcomeMsg)}>Set Hello</button><br /><br />\n\n        <label>\n          Get Public Key\n        </label>\n        <br />\n        <button onClick={() => this.verifyWalletEnable(this.getWelcomeMsg)}>Get Hello</button><br />\n        <br />\n\n        <div> {`Current Welcome Msg : ${this.state.welcomeMsg}`} </div>\n        <hr></hr>\n\n        {!localStorage.getItem(\"zilpay_connect\") && <button onClick={this.connectZilpay}>Connect Zilpay</button>}\n        <br /><br />\n        \n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}