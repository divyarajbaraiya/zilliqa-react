{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('bn.js'), require('long')) : typeof define === 'function' && define.amd ? define(['exports', 'bn.js', 'long'], factory) : factory(global.zjsUtil = {}, global.bn.js, global.long);\n})(this, function (exports, BN, Long) {\n  'use strict';\n\n  BN = BN && BN.hasOwnProperty('default') ? BN['default'] : BN;\n  Long = Long && Long.hasOwnProperty('default') ? Long['default'] : Long; //  This file is part of Zilliqa-Javascript-Library.\n  //\n  //  This program is free software: you can redistribute it and/or modify\n  //  it under the terms of the GNU General Public License as published by\n  //  the Free Software Foundation, either version 3 of the License, or\n  //  (at your option) any later version.\n  //\n  //   This program is distributed in the hope that it will be useful,\n  //   but WITHOUT ANY WARRANTY; without even the implied warranty of\n  //   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  //   GNU General Public License for more details.\n  //\n  //   You should have received a copy of the GNU General Public License\n  //   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n  /**\r\n   * intToHexArray\r\n   *\r\n   * @param {number} int - the number to be converted to hex\r\n   * @param {number)} size - the desired width of the hex value. will pad.\r\n   *\r\n   * @returns {string[]}\r\n   */\n\n  var intToHexArray = function (int, size) {\n    var hex = [];\n    var hexRep = [];\n    var hexVal = int.toString(16); // TODO: this really needs to be refactored.\n\n    for (var i = 0; i < hexVal.length; i++) {\n      hexRep[i] = hexVal[i].toString();\n    }\n\n    for (var i = 0; i < size - hexVal.length; i++) {\n      hex.push('0');\n    }\n\n    for (var i = 0; i < hexVal.length; i++) {\n      hex.push(hexRep[i]);\n    }\n\n    return hex;\n  };\n  /**\r\n   * intToByteArray\r\n   *\r\n   * Converts a number to Uint8Array\r\n   *\r\n   * @param {number} num\r\n   * @param {number} size\r\n   *\r\n   * @returns {Uint8Array}\r\n   */\n\n\n  var intToByteArray = function (num, size) {\n    var x = num;\n    var res = [];\n\n    while (x > 0) {\n      res.push(x & 255);\n      x = x >> 8;\n    }\n\n    var pad = size - res.length;\n\n    for (var i = 0; i < pad; i++) {\n      res.unshift(0);\n    }\n\n    return Uint8Array.from(res);\n  };\n  /**\r\n   * hexToByteArray\r\n   *\r\n   * Convers a hex string to a Uint8Array\r\n   *\r\n   * @param {string} hex\r\n   * @returns {Uint8Array}\r\n   */\n\n\n  var hexToByteArray = function (hex) {\n    var res = new Uint8Array(hex.length / 2);\n\n    for (var i = 0; i < hex.length; i += 2) {\n      res[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n    }\n\n    return res;\n  };\n  /**\r\n   * hexToIntArray\r\n   *\r\n   * @param {string} hex\r\n   * @returns {number[]}\r\n   */\n\n\n  var hexToIntArray = function (hex) {\n    if (!hex || !isHex(hex)) {\n      return [];\n    }\n\n    var res = [];\n\n    for (var i = 0; i < hex.length; i++) {\n      var c = hex.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      hi ? res.push(hi, lo) : res.push(lo);\n    }\n\n    return res;\n  };\n  /**\r\n   * pack\r\n   *\r\n   * Takes two 16-bit integers and combines them. Used to compute version.\r\n   *\r\n   * @param {number} a\r\n   * @param {number} b\r\n   *\r\n   * @returns {number} - a 32-bit number\r\n   */\n\n\n  var pack = function (a, b) {\n    if (a >> 16 > 0 || b >> 16 > 0) {\n      throw new Error('Both a and b must be 16 bits or less');\n    }\n\n    return (a << 16) + b;\n  };\n  /**\r\n   * compareBytes\r\n   *\r\n   * A constant time HMAC comparison function.\r\n   *\r\n   * @param {string} a\r\n   * @param {string} b\r\n   * @returns {boolean}\r\n   */\n\n\n  var isEqual = function (a, b) {\n    var bzA = hexToIntArray(a);\n    var bzB = hexToIntArray(b);\n\n    if (bzA.length !== bzB.length) {\n      return false;\n    }\n\n    var result = 0;\n\n    for (var i = 0; i < bzA.length; i++) {\n      result |= bzA[i] ^ bzB[i];\n    }\n\n    return result === 0;\n  };\n  /**\r\n   * isHex\r\n   *\r\n   * @param {string} str - string to be tested\r\n   * @returns {boolean}\r\n   */\n\n\n  var isHex = function (str) {\n    var plain = str.replace('0x', '');\n    return /[0-9a-f]*$/i.test(plain);\n  };\n\n  var bytes = /*#__PURE__*/Object.freeze({\n    intToHexArray: intToHexArray,\n    intToByteArray: intToByteArray,\n    hexToByteArray: hexToByteArray,\n    hexToIntArray: hexToIntArray,\n    pack: pack,\n    isEqual: isEqual,\n    isHex: isHex\n  });\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  function __values(o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n        i = 0;\n    if (m) return m.call(o);\n    return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  } //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var isAddress = function (address) {\n    return isByteString(address, 40);\n  };\n\n  var isBech32 = function (raw) {\n    return !!raw.match(/^zil1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$/);\n  };\n\n  var isBase58 = function (raw) {\n    return !!raw.match(/^[1-9ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/);\n  };\n\n  var isPrivateKey = function (privateKey) {\n    return isByteString(privateKey, 64);\n  };\n\n  var isPubKey = function (pubKey) {\n    return isByteString(pubKey, 66);\n  };\n\n  var isSignature = function (sig) {\n    return isByteString(sig, 128);\n  };\n\n  var isByteString = function (str, len) {\n    return !!str.replace('0x', '').match(\"^[0-9a-fA-F]{\" + len + \"}$\");\n  };\n\n  var isNumber = function (x) {\n    return typeof x === 'number';\n  };\n\n  var isBN = function (x) {\n    return BN.isBN(x);\n  };\n\n  var isLong = function (x) {\n    return Long.isLong(x);\n  };\n\n  var isString = function (x) {\n    return typeof x === 'string';\n  };\n\n  var isPlainObject = function (x) {\n    if (typeof x === 'object' && x !== null) {\n      var proto = Object.getPrototypeOf(x);\n      return proto === Object.prototype || proto === null;\n    }\n\n    return false;\n  };\n\n  var PRAGMA_REQUIRED = '@@ZJS_REQUIRED@@';\n\n  var required = function (fn) {\n    if (typeof fn === 'function') {\n      return Object.defineProperty(fn, 'required', {\n        value: PRAGMA_REQUIRED\n      });\n    }\n\n    throw new Error('fn is not a function');\n  };\n\n  var matchesObject = function (x, test) {\n    var e_1, _a;\n\n    if (isPlainObject(x)) {\n      for (var key in test) {\n        if (test.hasOwnProperty(key)) {\n          try {\n            for (var _b = (e_1 = void 0, __values(test[key])), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var tester = _c.value;\n              var value = x[key];\n\n              if (typeof value === 'undefined' && tester.required) {\n                throw new Error('Key not found: ' + key);\n              } else {\n                continue;\n              }\n\n              if (typeof tester !== 'function') {\n                throw new Error('Validator is not a function');\n              }\n\n              if (!tester(value)) {\n                throw new Error('Validation failed for ' + key);\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  var validation = /*#__PURE__*/Object.freeze({\n    isAddress: isAddress,\n    isBech32: isBech32,\n    isBase58: isBase58,\n    isPrivateKey: isPrivateKey,\n    isPubKey: isPubKey,\n    isSignature: isSignature,\n    isByteString: isByteString,\n    isNumber: isNumber,\n    isBN: isBN,\n    isLong: isLong,\n    isString: isString,\n    isPlainObject: isPlainObject,\n    required: required,\n    matchesObject: matchesObject\n  }); //  This file is part of Zilliqa-Javascript-Library.\n\n  var Units;\n\n  (function (Units) {\n    Units[\"Zil\"] = \"zil\";\n    Units[\"Li\"] = \"li\";\n    Units[\"Qa\"] = \"qa\";\n  })(Units || (Units = {}));\n\n  var DEFAULT_OPTIONS = {\n    pad: false\n  };\n  var unitMap = new Map([[\"qa\"\n  /* Qa */\n  , '1'], [\"li\"\n  /* Li */\n  , '1000000'], [\"zil\"\n  /* Zil */\n  , '1000000000000']]);\n\n  var numToStr = function (input) {\n    if (typeof input === 'string') {\n      if (!input.match(/^-?[0-9.]+$/)) {\n        throw new Error(\"while converting number to string, invalid number value '\" + input + \"', should be a number matching (^-?[0-9.]+).\");\n      }\n\n      return input;\n    } else if (typeof input === 'number') {\n      return String(input);\n    } else if (BN.isBN(input)) {\n      return input.toString(10);\n    }\n\n    throw new Error(\"while converting number to string, invalid number value '\" + input + \"' type \" + typeof input + \".\");\n  };\n\n  var fromQa = function (qa, unit, options) {\n    if (options === void 0) {\n      options = DEFAULT_OPTIONS;\n    }\n\n    if (unit === 'qa') {\n      return qa.toString(10);\n    }\n\n    var baseStr = unitMap.get(unit);\n\n    if (!baseStr) {\n      throw new Error(\"No unit of type \" + unit + \" exists.\");\n    }\n\n    var base = new BN(baseStr, 10);\n    var baseNumDecimals = baseStr.length - 1;\n    var fraction = qa.abs().mod(base).toString(10); // prepend 0s to the fraction half\n\n    while (fraction.length < baseNumDecimals) {\n      fraction = \"0\" + fraction;\n    }\n\n    if (!options.pad) {\n      fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    }\n\n    var whole = qa.div(base).toString(10);\n    return fraction === '0' ? \"\" + whole : whole + \".\" + fraction;\n  };\n\n  var toQa = function (input, unit) {\n    var inputStr = numToStr(input);\n    var baseStr = unitMap.get(unit);\n\n    if (!baseStr) {\n      throw new Error(\"No unit of type \" + unit + \" exists.\");\n    }\n\n    var baseNumDecimals = baseStr.length - 1;\n    var base = new BN(baseStr, 10); // Is it negative?\n\n    var isNegative = inputStr.substring(0, 1) === '-';\n\n    if (isNegative) {\n      inputStr = inputStr.substring(1);\n    }\n\n    if (inputStr === '.') {\n      throw new Error(\"Cannot convert \" + inputStr + \" to Qa.\");\n    } // Split it into a whole and fractional part\n\n\n    var comps = inputStr.split('.'); // eslint-disable-line\n\n    if (comps.length > 2) {\n      throw new Error(\"Cannot convert \" + inputStr + \" to Qa.\");\n    }\n\n    var _a = __read(comps, 2),\n        whole = _a[0],\n        fraction = _a[1];\n\n    if (!whole) {\n      whole = '0';\n    }\n\n    if (!fraction) {\n      fraction = '0';\n    }\n\n    if (fraction.length > baseNumDecimals) {\n      throw new Error(\"Cannot convert \" + inputStr + \" to Qa.\");\n    }\n\n    while (fraction.length < baseNumDecimals) {\n      fraction += '0';\n    }\n\n    var wholeBN = new BN(whole);\n    var fractionBN = new BN(fraction);\n    var wei = wholeBN.mul(base).add(fractionBN); // eslint-disable-line\n\n    if (isNegative) {\n      wei = wei.neg();\n    }\n\n    return new BN(wei.toString(10), 10);\n  };\n\n  var unit = /*#__PURE__*/Object.freeze({\n    get Units() {\n      return Units;\n    },\n\n    fromQa: fromQa,\n    toQa: toQa\n  }); //  This file is part of Zilliqa-Javascript-Library.\n\n  exports.BN = BN;\n  exports.Long = Long;\n  exports.bytes = bytes;\n  exports.units = unit;\n  exports.validation = validation;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../src/bytes.ts","../../../node_modules/tslib/tslib.es6.js","../src/validation.ts","../src/unit.ts","../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * intToHexArray\n *\n * @param {number} int - the number to be converted to hex\n * @param {number)} size - the desired width of the hex value. will pad.\n *\n * @returns {string[]}\n */\nexport const intToHexArray = (int: number, size: number): string[] => {\n  const hex: string[] = [];\n  const hexRep: string[] = [];\n  const hexVal = int.toString(16);\n\n  // TODO: this really needs to be refactored.\n  for (let i = 0; i < hexVal.length; i++) {\n    hexRep[i] = hexVal[i].toString();\n  }\n\n  for (let i = 0; i < size - hexVal.length; i++) {\n    hex.push('0');\n  }\n\n  for (let i = 0; i < hexVal.length; i++) {\n    hex.push(hexRep[i]);\n  }\n\n  return hex;\n};\n\n/**\n * intToByteArray\n *\n * Converts a number to Uint8Array\n *\n * @param {number} num\n * @param {number} size\n *\n * @returns {Uint8Array}\n */\nexport const intToByteArray = (num: number, size: number): Uint8Array => {\n  let x = num;\n  const res: number[] = [];\n\n  while (x > 0) {\n    res.push(x & 255);\n    x = x >> 8;\n  }\n\n  const pad = size - res.length;\n\n  for (let i = 0; i < pad; i++) {\n    res.unshift(0);\n  }\n\n  return Uint8Array.from(res);\n};\n\n/**\n * hexToByteArray\n *\n * Convers a hex string to a Uint8Array\n *\n * @param {string} hex\n * @returns {Uint8Array}\n */\nexport const hexToByteArray = (hex: string): Uint8Array => {\n  const res = new Uint8Array(hex.length / 2);\n\n  for (let i = 0; i < hex.length; i += 2) {\n    res[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n\n  return res;\n};\n\n/**\n * hexToIntArray\n *\n * @param {string} hex\n * @returns {number[]}\n */\nexport const hexToIntArray = (hex: string): number[] => {\n  if (!hex || !isHex(hex)) {\n    return [];\n  }\n\n  const res = [];\n\n  for (let i = 0; i < hex.length; i++) {\n    const c = hex.charCodeAt(i);\n    const hi = c >> 8;\n    const lo = c & 0xff;\n\n    hi ? res.push(hi, lo) : res.push(lo);\n  }\n\n  return res;\n};\n\n/**\n * pack\n *\n * Takes two 16-bit integers and combines them. Used to compute version.\n *\n * @param {number} a\n * @param {number} b\n *\n * @returns {number} - a 32-bit number\n */\nexport const pack = (a: number, b: number): number => {\n  if (a >> 16 > 0 || b >> 16 > 0) {\n    throw new Error('Both a and b must be 16 bits or less');\n  }\n\n  return (a << 16) + b;\n};\n\n/**\n * compareBytes\n *\n * A constant time HMAC comparison function.\n *\n * @param {string} a\n * @param {string} b\n * @returns {boolean}\n */\nexport const isEqual = (a: string, b: string): boolean => {\n  const bzA = hexToIntArray(a);\n  const bzB = hexToIntArray(b);\n\n  if (bzA.length !== bzB.length) {\n    return false;\n  }\n\n  let result = 0;\n  for (let i = 0; i < bzA.length; i++) {\n    result |= bzA[i] ^ bzB[i];\n  }\n\n  return result === 0;\n};\n\n/**\n * isHex\n *\n * @param {string} str - string to be tested\n * @returns {boolean}\n */\nexport const isHex = (str: string): boolean => {\n  const plain = str.replace('0x', '');\n  return /[0-9a-f]*$/i.test(plain);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport BN from 'bn.js';\nimport Long from 'long';\n\nexport const isAddress = (address: string) => {\n  return isByteString(address, 40);\n};\n\nexport const isBech32 = (raw: string) => {\n  return !!raw.match(/^zil1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$/);\n};\n\nexport const isBase58 = (raw: string) => {\n  return !!raw.match(\n    /^[1-9ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/,\n  );\n};\n\nexport const isPrivateKey = (privateKey: string) => {\n  return isByteString(privateKey, 64);\n};\n\nexport const isPubKey = (pubKey: string) => {\n  return isByteString(pubKey, 66);\n};\n\nexport const isSignature = (sig: string) => {\n  return isByteString(sig, 128);\n};\n\nexport const isByteString = (str: string, len: number) => {\n  return !!str.replace('0x', '').match(`^[0-9a-fA-F]{${len}}$`);\n};\n\nexport const isNumber = (x: unknown): x is number => {\n  return typeof x === 'number';\n};\n\nexport const isBN = (x: unknown): x is BN => {\n  return BN.isBN(x);\n};\n\nexport const isLong = (x: unknown): x is Long => {\n  return Long.isLong(x);\n};\n\nexport const isString = (x: unknown): x is string => {\n  return typeof x === 'string';\n};\n\nexport const isPlainObject = (x: unknown): x is { [key: string]: any } => {\n  if (typeof x === 'object' && x !== null) {\n    const proto = Object.getPrototypeOf(x);\n    return proto === Object.prototype || proto === null;\n  }\n\n  return false;\n};\n\nconst PRAGMA_REQUIRED = '@@ZJS_REQUIRED@@';\n\nexport interface Validator extends Function {\n  required?: typeof PRAGMA_REQUIRED;\n}\n\nexport const required = <T extends Function>(fn: T): Validator => {\n  if (typeof fn === 'function') {\n    return Object.defineProperty(fn, 'required', {\n      value: PRAGMA_REQUIRED,\n    });\n  }\n\n  throw new Error('fn is not a function');\n};\n\nexport const matchesObject = <T extends object>(\n  x: unknown,\n  test: { [key: string]: Validator[] },\n): x is T => {\n  if (isPlainObject(x)) {\n    for (const key in test) {\n      if (test.hasOwnProperty(key)) {\n        for (const tester of test[key]) {\n          const value = x[key];\n\n          if (typeof value === 'undefined' && tester.required) {\n            throw new Error('Key not found: ' + key);\n          } else {\n            continue;\n          }\n\n          if (typeof tester !== 'function') {\n            throw new Error('Validator is not a function');\n          }\n\n          if (!tester(value)) {\n            throw new Error('Validation failed for ' + key);\n          }\n        }\n      }\n    }\n  }\n\n  return true;\n};\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Adapted from https://github.com/ethjs/ethjs-unit/blob/master/src/index.js\n */\nimport BN from 'bn.js';\n\nexport const enum Units {\n  Zil = 'zil',\n  Li = 'li',\n  Qa = 'qa',\n}\n\ninterface Options {\n  pad: boolean;\n}\n\nconst DEFAULT_OPTIONS = {\n  pad: false,\n};\n\nconst unitMap = new Map<Units, string>([\n  [Units.Qa, '1'],\n  [Units.Li, '1000000'], // 1e6 qa\n  [Units.Zil, '1000000000000'], // 1e12 qa\n]);\n\nconst numToStr = (input: string | number | BN) => {\n  if (typeof input === 'string') {\n    if (!input.match(/^-?[0-9.]+$/)) {\n      throw new Error(\n        `while converting number to string, invalid number value '${input}', should be a number matching (^-?[0-9.]+).`,\n      );\n    }\n    return input;\n  } else if (typeof input === 'number') {\n    return String(input);\n  } else if (BN.isBN(input)) {\n    return input.toString(10);\n  }\n\n  throw new Error(\n    `while converting number to string, invalid number value '${input}' type ${typeof input}.`,\n  );\n};\n\nexport const fromQa = (\n  qa: BN,\n  unit: Units,\n  options: Options = DEFAULT_OPTIONS,\n): string => {\n  if (unit === 'qa') {\n    return qa.toString(10);\n  }\n\n  const baseStr = unitMap.get(unit);\n\n  if (!baseStr) {\n    throw new Error(`No unit of type ${unit} exists.`);\n  }\n\n  const base = new BN(baseStr, 10);\n  const baseNumDecimals = baseStr.length - 1;\n\n  let fraction = qa\n    .abs()\n    .mod(base)\n    .toString(10);\n\n  // prepend 0s to the fraction half\n  while (fraction.length < baseNumDecimals) {\n    fraction = `0${fraction}`;\n  }\n\n  if (!options.pad) {\n    fraction = <string>(\n      (<RegExpMatchArray>fraction.match(/^([0-9]*[1-9]|0)(0*)/))[1]\n    );\n  }\n\n  const whole = qa.div(base).toString(10);\n\n  return fraction === '0' ? `${whole}` : `${whole}.${fraction}`;\n};\n\nexport const toQa = (input: string | number | BN, unit: Units) => {\n  let inputStr = numToStr(input);\n  const baseStr = unitMap.get(unit);\n\n  if (!baseStr) {\n    throw new Error(`No unit of type ${unit} exists.`);\n  }\n\n  const baseNumDecimals = baseStr.length - 1;\n  const base = new BN(baseStr, 10);\n\n  // Is it negative?\n  const isNegative = inputStr.substring(0, 1) === '-';\n  if (isNegative) {\n    inputStr = inputStr.substring(1);\n  }\n\n  if (inputStr === '.') {\n    throw new Error(`Cannot convert ${inputStr} to Qa.`);\n  }\n\n  // Split it into a whole and fractional part\n  const comps = inputStr.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error(`Cannot convert ${inputStr} to Qa.`);\n  }\n\n  let [whole, fraction] = comps;\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseNumDecimals) {\n    throw new Error(`Cannot convert ${inputStr} to Qa.`);\n  }\n\n  while (fraction.length < baseNumDecimals) {\n    fraction += '0';\n  }\n\n  const wholeBN = new BN(whole);\n  const fractionBN = new BN(fraction);\n  let wei = wholeBN.mul(base).add(fractionBN); // eslint-disable-line\n\n  if (isNegative) {\n    wei = wei.neg();\n  }\n\n  return new BN(wei.toString(10), 10);\n};\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as bytes from './bytes';\nimport * as validation from './validation';\nimport * as units from './unit';\nimport BN from 'bn.js';\nimport Long from 'long';\n\nexport { BN, bytes, Long, units, validation };\n"]},"metadata":{},"sourceType":"script"}