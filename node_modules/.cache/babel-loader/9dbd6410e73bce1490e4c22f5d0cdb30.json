{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('websocket')) : typeof define === 'function' && define.amd ? define(['exports', 'websocket'], factory) : factory(global.zjsSubscriptions = {}, global.websocket);\n})(this, function (exports, websocket) {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function step(result) {\n        result.done ? resolve(result.value) : new P(function (resolve) {\n          resolve(result.value);\n        }).then(fulfilled, rejected);\n      }\n\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n        f,\n        y,\n        t,\n        g;\n    return g = {\n      next: verb(0),\n      \"throw\": verb(1),\n      \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n      return this;\n    }), g;\n\n    function verb(n) {\n      return function (v) {\n        return step([n, v]);\n      };\n    }\n\n    function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n\n      while (_) try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n\n      if (op[0] & 5) throw op[1];\n      return {\n        value: op[0] ? op[1] : void 0,\n        done: true\n      };\n    }\n  }\n\n  function __values(o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n        i = 0;\n    if (m) return m.call(o);\n    return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n  } //      \n  // An event handler can take an optional event argument\n  // and should not return a value\n  // An array of all currently registered event handlers for a type\n  // A map of event types and their corresponding event handlers.\n\n  /** Mitt: Tiny (~200b) functional event emitter / pubsub.\n   *  @name mitt\n   *  @returns {Mitt}\n   */\n\n\n  function mitt(all) {\n    all = all || Object.create(null);\n    return {\n      /**\n       * Register an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n       * @param  {Function} handler Function to call in response to given event\n       * @memberOf mitt\n       */\n      on: function on(type, handler) {\n        (all[type] || (all[type] = [])).push(handler);\n      },\n\n      /**\n       * Remove an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n       * @param  {Function} handler Handler function to remove\n       * @memberOf mitt\n       */\n      off: function off(type, handler) {\n        if (all[type]) {\n          all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n        }\n      },\n\n      /**\n       * Invoke all handlers for the given type.\n       * If present, `\"*\"` handlers are invoked after type-matched handlers.\n       *\n       * @param {String} type  The event type to invoke\n       * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n       * @memberOf mitt\n       */\n      emit: function emit(type, evt) {\n        (all[type] || []).slice().map(function (handler) {\n          handler(evt);\n        });\n        (all['*'] || []).slice().map(function (handler) {\n          handler(type, evt);\n        });\n      }\n    };\n  } //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var WebSocketProvider = function () {\n    // basically, options is a collection of metadata things like protocol or headers\n    function WebSocketProvider(url, options) {\n      this.handlers = {};\n      this.url = url;\n      this.options = options;\n      this.emitter = new mitt(this.handlers);\n      this.websocket = WebSocketProvider.NewWebSocket(url, options);\n      this.subscriptions = {};\n      this.registerEventListeners();\n    }\n\n    WebSocketProvider.NewWebSocket = function (url, options) {\n      // tslint:disable-next-line: no-string-literal\n      if (typeof window !== 'undefined' && window.WebSocket) {\n        // tslint:disable-next-line: no-string-literal\n        return new WebSocket(url, options !== undefined ? options.protocol : []);\n      } else {\n        var headers = options !== undefined ? options.headers || {} : undefined;\n        var urlObject = new URL(url);\n\n        if (headers !== undefined && !headers.authorization && urlObject.username && urlObject.password) {\n          var authToken = Buffer.from(urlObject.username + \":\" + urlObject.password).toString('base64');\n          headers.authorization = \"Basic \" + authToken;\n        }\n\n        return new websocket.w3cwebsocket(url, options !== undefined ? options.protocol : undefined, undefined, headers, undefined, options !== undefined ? options.clientConfig : undefined);\n      }\n    };\n\n    WebSocketProvider.prototype.registerEventListeners = function () {\n      this.websocket.onopen = this.onConnect.bind(this);\n      this.websocket.onclose = this.onClose.bind(this);\n      this.websocket.onmessage = this.onMessage.bind(this);\n      this.websocket.onerror = this.onError.bind(this);\n    };\n\n    WebSocketProvider.prototype.removeAllSocketListeners = function () {\n      this.removeEventListener(\"socket_message\"\n      /* SOCKET_MESSAGE */\n      );\n      this.removeEventListener(\"socket_ready\"\n      /* SOCKET_READY */\n      );\n      this.removeEventListener(\"socket_close\"\n      /* SOCKET_CLOSE */\n      );\n      this.removeEventListener(\"socket_error\"\n      /* SOCKET_ERROR */\n      );\n      this.removeEventListener(\"socket_connect\"\n      /* SOCKET_CONNECT */\n      );\n    };\n\n    WebSocketProvider.prototype.removeEventListener = function (type, handler) {\n      if (!type) {\n        this.handlers = {};\n        return;\n      }\n\n      if (!handler) {\n        delete this.handlers[type];\n      } else {\n        return this.emitter.off(type, handler);\n      }\n    };\n\n    WebSocketProvider.prototype.reconnect = function () {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.removeAllSocketListeners();\n\n        _this.websocket = WebSocketProvider.NewWebSocket(_this.url, _this.options);\n\n        _this.registerEventListeners();\n      }, 5000);\n    };\n\n    WebSocketProvider.prototype.onClose = function (event) {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          // reconnect\n          if (this.subscriptions !== null && !event.wasClean) {\n            this.emitter.emit(\"reconnect\"\n            /* RECONNECT */\n            , event);\n            this.reconnect();\n            return [2\n            /*return*/\n            ];\n          } // normal close\n\n\n          if (this.websocket.CONNECTING) {\n            this.emitter.emit(\"close\"\n            /* CLOSE */\n            , event);\n            this.websocket.close();\n            return [2\n            /*return*/\n            ];\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    WebSocketProvider.prototype.onError = function (event) {\n      this.emitter.emit(\"error\"\n      /* ERROR */\n      , event);\n\n      if (this.websocket.CONNECTING) {\n        this.websocket.close();\n      }\n\n      return;\n    };\n\n    WebSocketProvider.prototype.onConnect = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        var subscriptionKeys, subscriptionKeys_1, subscriptionKeys_1_1, key, id, parameters, e_1_1;\n\n        var e_1, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!this.subscriptions) {\n                this.subscriptions = {};\n              }\n\n              subscriptionKeys = Object.keys(this.subscriptions);\n              if (!(subscriptionKeys.length > 0)) return [3\n              /*break*/\n              , 8];\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 6, 7, 8]);\n\n              subscriptionKeys_1 = __values(subscriptionKeys), subscriptionKeys_1_1 = subscriptionKeys_1.next();\n              _b.label = 2;\n\n            case 2:\n              if (!!subscriptionKeys_1_1.done) return [3\n              /*break*/\n              , 5];\n              key = subscriptionKeys_1_1.value;\n              id = key;\n              parameters = this.subscriptions[key].parameters;\n              delete this.subscriptions[id];\n              return [4\n              /*yield*/\n              , this.subscribe(parameters)];\n\n            case 3:\n              _b.sent();\n\n              _b.label = 4;\n\n            case 4:\n              subscriptionKeys_1_1 = subscriptionKeys_1.next();\n              return [3\n              /*break*/\n              , 2];\n\n            case 5:\n              return [3\n              /*break*/\n              , 8];\n\n            case 6:\n              e_1_1 = _b.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              try {\n                if (subscriptionKeys_1_1 && !subscriptionKeys_1_1.done && (_a = subscriptionKeys_1.return)) _a.call(subscriptionKeys_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7\n              /*endfinally*/\n              ];\n\n            case 8:\n              this.emitter.emit(\"socket_connect\"\n              /* SOCKET_CONNECT */\n              );\n              this.emitter.emit(\"connect\"\n              /* CONNECT */\n              );\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    WebSocketProvider.prototype.onMessage = function (msg) {\n      var e_2, _a;\n\n      if (msg.data) {\n        var dataObj = JSON.parse(msg.data);\n\n        if (dataObj.type === \"Notification\"\n        /* NOTIFICATION */\n        ) {\n          this.emitter.emit(\"socket_message\"\n          /* SOCKET_MESSAGE */\n          , dataObj);\n\n          try {\n            for (var _b = __values(dataObj.values), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var value = _c.value;\n\n              if (value.query === \"NewBlock\"\n              /* NEW_BLOCK */\n              ) {\n                this.emitter.emit(\"NewBlock\"\n                /* NEW_BLOCK */\n                , value);\n              } else if (value.query === \"EventLog\"\n              /* EVENT_LOG */\n              ) {\n                this.emitter.emit(\"EventLog\"\n                /* EVENT_LOG */\n                , value);\n              } else if (value.query === \"Unsubscribe\"\n              /* UNSUBSCRIBE */\n              ) {\n                this.emitter.emit(\"Unsubscribe\"\n                /* UNSUBSCRIBE */\n                , value);\n              } else {\n                throw new Error('unsupported value type');\n              }\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        } else if (dataObj.query === \"NewBlock\"\n        /* NEW_BLOCK */\n        ) {\n          // subscribe NewBlock succeed\n          this.subscriptions[dataObj.query] = {\n            id: dataObj.query,\n            parameters: dataObj\n          };\n          this.emitter.emit(\"SubscribeNewBlock\"\n          /* SUBSCRIBE_NEW_BLOCK */\n          , dataObj);\n          this.emitter.emit(\"reconnect\"\n          /* RECONNECT */\n          );\n        } else if (dataObj.query === \"EventLog\"\n        /* EVENT_LOG */\n        ) {\n          // subscribe EventLog succeed\n          this.subscriptions[dataObj.query] = {\n            id: dataObj.query,\n            parameters: dataObj\n          };\n          this.emitter.emit(\"SubscribeEventLog\"\n          /* SUBSCRIBE_EVENT_LOG */\n          , dataObj);\n          this.emitter.emit(\"reconnect\"\n          /* RECONNECT */\n          );\n        } else if (dataObj.query === \"Unsubscribe\"\n        /* UNSUBSCRIBE */\n        ) {\n          this.emitter.emit(\"Unsubscribe\"\n          /* UNSUBSCRIBE */\n          , dataObj);\n        } else {\n          throw new Error('unsupported message type');\n        }\n      } else {\n        throw new Error('message data is empty');\n      }\n    };\n\n    WebSocketProvider.prototype.addEventListener = function (type, handler) {\n      this.emitter.on(type, handler);\n    };\n\n    WebSocketProvider.prototype.connecting = function () {\n      return this.websocket.readyState === this.websocket.CONNECTING;\n    };\n\n    WebSocketProvider.prototype.send = function (query) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this.connecting()) {\n          try {\n            _this.websocket.send(JSON.stringify(query));\n          } catch (error) {\n            throw error;\n          }\n\n          var queryParam = void 0;\n\n          if (query.query === \"NewBlock\"\n          /* NEW_BLOCK */\n          ) {\n            queryParam = \"SubscribeNewBlock\"\n            /* SUBSCRIBE_NEW_BLOCK */\n            ;\n          } else if (query.query === \"EventLog\"\n          /* EVENT_LOG */\n          ) {\n            queryParam = \"SubscribeEventLog\"\n            /* SUBSCRIBE_EVENT_LOG */\n            ;\n          } else {\n            queryParam = query.query;\n          }\n\n          _this.emitter.on(queryParam, function (data) {\n            resolve(data);\n          });\n\n          _this.emitter.on(\"error\"\n          /* ERROR */\n          , reject);\n        }\n\n        var connectHandler = function () {\n          _this.send(query).then(resolve).catch(reject);\n        };\n\n        var offConnectHandler = function () {\n          _this.emitter.off(\"connect\"\n          /* CONNECT */\n          , connectHandler);\n        };\n\n        _this.emitter.on(\"connect\"\n        /* CONNECT */\n        , connectHandler);\n\n        _this.emitter.on(\"reconnect\"\n        /* RECONNECT */\n        , offConnectHandler);\n      });\n    };\n\n    WebSocketProvider.prototype.subscribe = function (payload) {\n      return __awaiter(this, void 0, void 0, function () {\n        var result;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.send(payload)];\n\n            case 1:\n              result = _a.sent();\n              return [2\n              /*return*/\n              , result.query === payload.query];\n          }\n        });\n      });\n    };\n\n    WebSocketProvider.prototype.unsubscribe = function (payload) {\n      return __awaiter(this, void 0, void 0, function () {\n        var result, succeed;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.send(payload)];\n\n            case 1:\n              result = _a.sent();\n              succeed = result.query === payload.query;\n\n              if (succeed) {\n                this.subscriptions[payload.query] = null;\n              }\n\n              return [2\n              /*return*/\n              , succeed];\n          }\n        });\n      });\n    };\n\n    return WebSocketProvider;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var Subscription = function (_super) {\n    __extends(Subscription, _super);\n\n    function Subscription(subject, url, options) {\n      var _this = _super.call(this, url, options) || this;\n\n      _this.subject = subject;\n      return _this;\n    }\n\n    Subscription.prototype.start = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , _super.prototype.subscribe.call(this, this.subject)];\n        });\n      });\n    };\n\n    Subscription.prototype.stop = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        var event;\n        return __generator(this, function (_a) {\n          event = this.subject.query === \"NewBlock\"\n          /* NEW_BLOCK */\n          ? {\n            query: \"Unsubscribe\"\n            /* UNSUBSCRIBE */\n            ,\n            type: \"NewBlock\"\n            /* NEW_BLOCK */\n\n          } : {\n            query: \"Unsubscribe\"\n            /* UNSUBSCRIBE */\n            ,\n            type: \"EventLog\"\n            /* EVENT_LOG */\n\n          };\n          return [2\n          /*return*/\n          , _super.prototype.unsubscribe.call(this, event)];\n        });\n      });\n    };\n\n    return Subscription;\n  }(WebSocketProvider); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var NewTxBlockSubscription = function (_super) {\n    __extends(NewTxBlockSubscription, _super);\n\n    function NewTxBlockSubscription(url, options) {\n      return _super.call(this, {\n        query: \"NewBlock\"\n        /* NEW_BLOCK */\n\n      }, url, options) || this;\n    }\n\n    return NewTxBlockSubscription;\n  }(Subscription); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  (function (SocketConnect) {\n    SocketConnect[\"READY\"] = \"ready\";\n    SocketConnect[\"CONNECT\"] = \"connect\";\n    SocketConnect[\"ERROR\"] = \"error\";\n    SocketConnect[\"CLOSE\"] = \"close\";\n    SocketConnect[\"RECONNECT\"] = \"reconnect\";\n  })(exports.SocketConnect || (exports.SocketConnect = {}));\n\n  (function (SocketState) {\n    SocketState[\"SOCKET_CONNECT\"] = \"socket_connect\";\n    SocketState[\"SOCKET_MESSAGE\"] = \"socket_message\";\n    SocketState[\"SOCKET_READY\"] = \"socket_ready\";\n    SocketState[\"SOCKET_CLOSE\"] = \"socket_close\";\n    SocketState[\"SOCKET_ERROR\"] = \"socket_error\";\n  })(exports.SocketState || (exports.SocketState = {}));\n\n  (function (MessageType) {\n    MessageType[\"NEW_BLOCK\"] = \"NewBlock\";\n    MessageType[\"EVENT_LOG\"] = \"EventLog\";\n    MessageType[\"NOTIFICATION\"] = \"Notification\";\n    MessageType[\"UNSUBSCRIBE\"] = \"Unsubscribe\";\n  })(exports.MessageType || (exports.MessageType = {}));\n\n  (function (QueryParam) {\n    QueryParam[\"NEW_BLOCK\"] = \"NewBlock\";\n    QueryParam[\"EVENT_LOG\"] = \"EventLog\";\n    QueryParam[\"UNSUBSCRIBE\"] = \"Unsubscribe\";\n  })(exports.QueryParam || (exports.QueryParam = {}));\n\n  (function (StatusType) {\n    StatusType[\"SUBSCRIBE_NEW_BLOCK\"] = \"SubscribeNewBlock\";\n    StatusType[\"SUBSCRIBE_EVENT_LOG\"] = \"SubscribeEventLog\";\n  })(exports.StatusType || (exports.StatusType = {})); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var NewEventSubscription = function (_super) {\n    __extends(NewEventSubscription, _super);\n\n    function NewEventSubscription(url, options) {\n      var _this = _super.call(this, {\n        query: \"EventLog\"\n        /* EVENT_LOG */\n\n      }, url, options) || this;\n\n      _this.subject = {\n        query: 'EventLog',\n        addresses: options !== undefined ? options.addresses : []\n      };\n      return _this;\n    }\n\n    return NewEventSubscription;\n  }(Subscription); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var SubscriptionBuilder = function () {\n    function SubscriptionBuilder() {}\n\n    SubscriptionBuilder.prototype.buildNewBlockSubscriptions = function (url, options) {\n      return new NewTxBlockSubscription(url, options);\n    };\n\n    SubscriptionBuilder.prototype.buildEventLogSubscriptions = function (url, options) {\n      return new NewEventSubscription(url, options);\n    };\n\n    return SubscriptionBuilder;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  exports.NewTxBlockSubscription = NewTxBlockSubscription;\n  exports.Subscription = Subscription;\n  exports.WebSocketProvider = WebSocketProvider;\n  exports.NewEventSubscription = NewEventSubscription;\n  exports.SubscriptionBuilder = SubscriptionBuilder;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../node_modules/mitt/dist/mitt.es.js","../src/ws.ts","../src/subscription.ts","../src/newblock.ts","../src/types.ts","../src/newevent.ts","../src/builder.ts","../src/index.ts"],"names":["W3CWebsocket","SocketConnect","SocketState","MessageType","QueryParam","StatusType"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport mitt from 'mitt';\nimport { w3cwebsocket as W3CWebsocket } from 'websocket';\nimport {\n  MessageType,\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SocketConnect,\n  SocketState,\n  StatusType,\n  SubscriptionOption,\n  Unsubscribe,\n} from './types';\n\nexport class WebSocketProvider {\n  public static NewWebSocket(\n    url: string,\n    options?: SubscriptionOption,\n  ): WebSocket | W3CWebsocket {\n    // tslint:disable-next-line: no-string-literal\n    if (typeof window !== 'undefined' && (<any>window).WebSocket) {\n      // tslint:disable-next-line: no-string-literal\n      return new WebSocket(url, options !== undefined ? options.protocol : []);\n    } else {\n      const headers = options !== undefined ? options.headers || {} : undefined;\n      const urlObject = new URL(url);\n      if (\n        headers !== undefined &&\n        !headers.authorization &&\n        urlObject.username &&\n        urlObject.password\n      ) {\n        const authToken = Buffer.from(\n          `${urlObject.username}:${urlObject.password}`,\n        ).toString('base64');\n        headers.authorization = `Basic ${authToken}`;\n      }\n\n      return new W3CWebsocket(\n        url,\n        options !== undefined ? options.protocol : undefined,\n        undefined,\n        headers,\n        undefined,\n        options !== undefined ? options.clientConfig : undefined,\n      );\n    }\n  }\n\n  url: string;\n  options?: SubscriptionOption;\n  emitter: mitt.Emitter;\n  handlers: any = {};\n  websocket: WebSocket | W3CWebsocket;\n\n  subscriptions: any;\n\n  // basically, options is a collection of metadata things like protocol or headers\n  constructor(url: string, options?: SubscriptionOption) {\n    this.url = url;\n    this.options = options;\n    this.emitter = new mitt(this.handlers);\n    this.websocket = WebSocketProvider.NewWebSocket(url, options);\n    this.subscriptions = {};\n    this.registerEventListeners();\n  }\n\n  registerEventListeners() {\n    this.websocket.onopen = this.onConnect.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n\n  removeAllSocketListeners() {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n\n  reconnect() {\n    setTimeout(() => {\n      this.removeAllSocketListeners();\n      this.websocket = WebSocketProvider.NewWebSocket(this.url, this.options);\n      this.registerEventListeners();\n    }, 5000);\n  }\n\n  async onClose(event: CloseEvent) {\n    // reconnect\n    if (this.subscriptions !== null && !event.wasClean) {\n      this.emitter.emit(SocketConnect.RECONNECT, event);\n      this.reconnect();\n      return;\n    }\n\n    // normal close\n    if (this.websocket.CONNECTING) {\n      this.emitter.emit(SocketConnect.CLOSE, event);\n      this.websocket.close();\n      return;\n    }\n  }\n\n  onError(event: Event) {\n    this.emitter.emit(SocketConnect.ERROR, event);\n    if (this.websocket.CONNECTING) {\n      this.websocket.close();\n    }\n    return;\n  }\n\n  async onConnect() {\n    if (!this.subscriptions) {\n      this.subscriptions = {};\n    }\n    // retry logic\n    const subscriptionKeys = Object.keys(this.subscriptions);\n    if (subscriptionKeys.length > 0) {\n      for (const key of subscriptionKeys) {\n        const id = key;\n        const parameters = this.subscriptions[key].parameters;\n        delete this.subscriptions[id];\n        await this.subscribe(parameters);\n      }\n    }\n\n    this.emitter.emit(SocketState.SOCKET_CONNECT);\n    this.emitter.emit(SocketConnect.CONNECT);\n  }\n\n  onMessage(msg: MessageEvent) {\n    if (msg.data) {\n      const dataObj = JSON.parse(msg.data);\n      if (dataObj.type === MessageType.NOTIFICATION) {\n        this.emitter.emit(SocketState.SOCKET_MESSAGE, dataObj);\n        for (const value of dataObj.values) {\n          if (value.query === MessageType.NEW_BLOCK) {\n            this.emitter.emit(MessageType.NEW_BLOCK, value);\n          } else if (value.query === MessageType.EVENT_LOG) {\n            this.emitter.emit(MessageType.EVENT_LOG, value);\n          } else if (value.query === MessageType.UNSUBSCRIBE) {\n            this.emitter.emit(MessageType.UNSUBSCRIBE, value);\n          } else {\n            throw new Error('unsupported value type');\n          }\n        }\n      } else if (dataObj.query === QueryParam.NEW_BLOCK) {\n        // subscribe NewBlock succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_NEW_BLOCK, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.EVENT_LOG) {\n        // subscribe EventLog succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_EVENT_LOG, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.UNSUBSCRIBE) {\n        this.emitter.emit(MessageType.UNSUBSCRIBE, dataObj);\n      } else {\n        throw new Error('unsupported message type');\n      }\n    } else {\n      throw new Error('message data is empty');\n    }\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  connecting() {\n    return this.websocket.readyState === this.websocket.CONNECTING;\n  }\n\n  send(query: NewBlockQuery | NewEventQuery): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.connecting()) {\n        try {\n          this.websocket.send(JSON.stringify(query));\n        } catch (error) {\n          throw error;\n        }\n        let queryParam;\n        if (query.query === QueryParam.NEW_BLOCK) {\n          queryParam = StatusType.SUBSCRIBE_NEW_BLOCK;\n        } else if (query.query === QueryParam.EVENT_LOG) {\n          queryParam = StatusType.SUBSCRIBE_EVENT_LOG;\n        } else {\n          queryParam = query.query;\n        }\n        this.emitter.on(queryParam, (data) => {\n          resolve(data);\n        });\n        this.emitter.on(SocketConnect.ERROR, reject);\n      }\n\n      const connectHandler = () => {\n        this.send(query)\n          .then(resolve)\n          .catch(reject);\n      };\n\n      const offConnectHandler = () => {\n        this.emitter.off(SocketConnect.CONNECT, connectHandler);\n      };\n      this.emitter.on(SocketConnect.CONNECT, connectHandler);\n      this.emitter.on(SocketConnect.RECONNECT, offConnectHandler);\n    });\n  }\n\n  async subscribe(payload: NewBlockQuery | NewEventQuery): Promise<boolean> {\n    const result = await this.send(payload);\n    return result.query === payload.query;\n  }\n\n  async unsubscribe(payload: Unsubscribe): Promise<boolean> {\n    const result = await this.send(payload);\n    // todo handle separately\n    const succeed = result.query === payload.query;\n    if (succeed) {\n      this.subscriptions[payload.query] = null;\n    }\n    return succeed;\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { WebSocketProvider } from './ws';\nimport {\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SubscriptionOption,\n} from './types';\n\nexport class Subscription extends WebSocketProvider {\n  subject: NewBlockQuery | NewEventQuery;\n\n  constructor(\n    subject: NewBlockQuery | NewEventQuery,\n    url: string,\n    options?: SubscriptionOption,\n  ) {\n    super(url, options);\n    this.subject = subject;\n  }\n\n  async start(): Promise<boolean> {\n    return super.subscribe(this.subject);\n  }\n\n  async stop() {\n    const event =\n      this.subject.query === QueryParam.NEW_BLOCK\n        ? {\n            query: QueryParam.UNSUBSCRIBE,\n            type: QueryParam.NEW_BLOCK,\n          }\n        : { query: QueryParam.UNSUBSCRIBE, type: QueryParam.EVENT_LOG };\n    return super.unsubscribe(event);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewTxBlockSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.NEW_BLOCK }, url, options);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { IClientConfig } from 'websocket';\n\nexport const enum SocketConnect {\n  READY = 'ready',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  CLOSE = 'close',\n  RECONNECT = 'reconnect',\n}\n\nexport const enum SocketState {\n  SOCKET_CONNECT = 'socket_connect',\n  SOCKET_MESSAGE = 'socket_message',\n  SOCKET_READY = 'socket_ready',\n  SOCKET_CLOSE = 'socket_close',\n  SOCKET_ERROR = 'socket_error',\n}\n\n// message type pushed by server side\nexport const enum MessageType {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  NOTIFICATION = 'Notification',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// message type that we can query with to server\nexport const enum QueryParam {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// indicate that whether we subscribe successfully\nexport const enum StatusType {\n  SUBSCRIBE_NEW_BLOCK = 'SubscribeNewBlock',\n  SUBSCRIBE_EVENT_LOG = 'SubscribeEventLog',\n}\n\nexport interface NewBlockQuery {\n  query: string;\n}\n\nexport interface NewEventQuery {\n  query: string;\n  addresses: string[];\n}\n\nexport interface Unsubscribe {\n  query: string;\n  type: string;\n}\n\nexport interface SubscriptionOption {\n  addresses?: string[];\n  clientConfig?: IClientConfig;\n  headers?: {\n    authorization?: string;\n  };\n  protocol?: string;\n  protocols?: string | string[];\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewEventSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.EVENT_LOG }, url, options);\n    this.subject = {\n      query: 'EventLog',\n      addresses: options !== undefined ? options.addresses : [],\n    };\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { NewTxBlockSubscription } from './newblock';\nimport { NewEventSubscription } from './newevent';\nimport { SubscriptionOption } from './types';\n\nexport class SubscriptionBuilder {\n  buildNewBlockSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewTxBlockSubscription(url, options);\n  }\n\n  buildEventLogSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewEventSubscription(url, options);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './newblock';\nexport * from './subscription';\nexport * from './ws';\nexport * from './types';\nexport * from './newevent';\nexport * from './builder';\n"]},"metadata":{},"sourceType":"script"}