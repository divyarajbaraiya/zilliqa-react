{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@zilliqa-js/util'), require('@zilliqa-js/proto'), require('@zilliqa-js/crypto'), require('bip39'), require('hdkey'), require('@zilliqa-js/core')) : typeof define === 'function' && define.amd ? define(['exports', '@zilliqa-js/util', '@zilliqa-js/proto', '@zilliqa-js/crypto', 'bip39', 'hdkey', '@zilliqa-js/core'], factory) : factory(global.zjsAccount = {}, global['@zilliqa-js/util'], global['@zilliqa-js/proto'], global['@zilliqa-js/crypto'], global.bip39, global.hdkey, global['@zilliqa-js/core']);\n})(this, function (exports, util, proto, zcrypto, bip39, hdkey, core) {\n  'use strict';\n\n  bip39 = bip39 && bip39.hasOwnProperty('default') ? bip39['default'] : bip39;\n  hdkey = hdkey && hdkey.hasOwnProperty('default') ? hdkey['default'] : hdkey;\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  function __rest(s, e) {\n    var t = {};\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function step(result) {\n        result.done ? resolve(result.value) : new P(function (resolve) {\n          resolve(result.value);\n        }).then(fulfilled, rejected);\n      }\n\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n        f,\n        y,\n        t,\n        g;\n    return g = {\n      next: verb(0),\n      \"throw\": verb(1),\n      \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n      return this;\n    }), g;\n\n    function verb(n) {\n      return function (v) {\n        return step([n, v]);\n      };\n    }\n\n    function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n\n      while (_) try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n\n      if (op[0] & 5) throw op[1];\n      return {\n        value: op[0] ? op[1] : void 0,\n        done: true\n      };\n    }\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  }\n\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n    return ar;\n  } //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var encodeTransactionProto = function (tx) {\n    var msg = {\n      version: tx.version,\n      nonce: tx.nonce || 0,\n      // core protocol Schnorr expects lowercase, non-prefixed address.\n      toaddr: util.bytes.hexToByteArray(tx.toAddr.replace('0x', '').toLowerCase()),\n      senderpubkey: proto.ZilliqaMessage.ByteArray.create({\n        data: util.bytes.hexToByteArray(tx.pubKey || '00')\n      }),\n      amount: proto.ZilliqaMessage.ByteArray.create({\n        data: Uint8Array.from(tx.amount.toArrayLike(Buffer, undefined, 16))\n      }),\n      gasprice: proto.ZilliqaMessage.ByteArray.create({\n        data: Uint8Array.from(tx.gasPrice.toArrayLike(Buffer, undefined, 16))\n      }),\n      gaslimit: tx.gasLimit,\n      code: tx.code && tx.code.length ? Uint8Array.from(__spread(tx.code).map(function (c) {\n        return c.charCodeAt(0);\n      })) : null,\n      data: tx.data && tx.data.length ? Uint8Array.from(__spread(tx.data).map(function (c) {\n        return c.charCodeAt(0);\n      })) : null\n    };\n    var serialised = proto.ZilliqaMessage.ProtoTransactionCoreInfo.create(msg);\n    return Buffer.from(proto.ZilliqaMessage.ProtoTransactionCoreInfo.encode(serialised).finish());\n  };\n\n  var isTxReceipt = function (x) {\n    return util.validation.isPlainObject(x) && util.validation.matchesObject(x, {});\n  };\n\n  var isTxParams = function (obj) {\n    var validator = {\n      version: [util.validation.required(util.validation.isNumber)],\n      toAddr: [util.validation.required(util.validation.isAddress)],\n      amount: [util.validation.required(util.validation.isBN)],\n      gasPrice: [util.validation.required(util.validation.isBN)],\n      gasLimit: [util.validation.required(util.validation.isLong)],\n      code: [util.validation.isString],\n      data: [util.validation.isString],\n      receipt: [isTxReceipt],\n      nonce: [util.validation.required(util.validation.isNumber)],\n      signature: [util.validation.required(util.validation.isSignature)]\n    };\n    return util.validation.matchesObject(obj, validator);\n  };\n\n  var formatOutgoingTx = function (req) {\n    if (req.payload.method === \"CreateTransaction\"\n    /* CreateTransaction */\n    && isTxParams(req.payload.params[0])) {\n      var txConfig = req.payload.params[0];\n\n      var ret = __assign(__assign({}, req), {\n        payload: __assign(__assign({}, req.payload), {\n          params: [__assign(__assign({}, txConfig), {\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString()\n          })]\n        })\n      });\n\n      return ret;\n    }\n\n    return req;\n  };\n\n  function sleep(ms) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve) {\n          setTimeout(function () {\n            return resolve();\n          }, ms);\n        })];\n      });\n    });\n  }\n\n  var util$1 = /*#__PURE__*/Object.freeze({\n    encodeTransactionProto: encodeTransactionProto,\n    isTxReceipt: isTxReceipt,\n    isTxParams: isTxParams,\n    formatOutgoingTx: formatOutgoingTx,\n    sleep: sleep\n  }); //  This file is part of Zilliqa-Javascript-Library.\n\n  var Account = function () {\n    function Account(privateKey) {\n      this.privateKey = this.normalizePrivateKey(privateKey);\n      this.publicKey = zcrypto.getPubKeyFromPrivateKey(this.privateKey);\n      this.address = zcrypto.getAddressFromPublicKey(this.publicKey);\n      this.bech32Address = zcrypto.toBech32Address(this.address);\n    }\n    /**\r\n     * fromFile\r\n     *\r\n     * Takes a JSON-encoded keystore and passphrase, returning a fully\r\n     * instantiated Account instance.\r\n     *\r\n     * @param {string} file\r\n     * @param {string} passphrase\r\n     * @returns {Promise<Account>}\r\n     */\n\n\n    Account.fromFile = function (file, passphrase) {\n      return __awaiter(this, void 0, void 0, function () {\n        var keystore, privateKey, err_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              keystore = JSON.parse(file);\n              return [4\n              /*yield*/\n              , zcrypto.decryptPrivateKey(passphrase, keystore)];\n\n            case 1:\n              privateKey = _a.sent();\n              return [2\n              /*return*/\n              , new Account(privateKey)];\n\n            case 2:\n              err_1 = _a.sent();\n              throw new Error(\"Could not decrypt keystore file.\");\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n    /**\r\n     * toFile\r\n     *\r\n     * @param {string} passphrase\r\n     * @param {kdf} 'pbkdf2' | 'scrypt'\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Account.prototype.toFile = function (passphrase, kdf) {\n      if (kdf === void 0) {\n        kdf = 'scrypt';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var keystore;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!passphrase || !passphrase.length) {\n                throw new Error('Passphrase cannot have a length of 0');\n              }\n\n              return [4\n              /*yield*/\n              , zcrypto.encryptPrivateKey(kdf, this.privateKey, passphrase)];\n\n            case 1:\n              keystore = _a.sent();\n              return [2\n              /*return*/\n              , keystore];\n          }\n        });\n      });\n    };\n    /**\r\n     * signTransaction\r\n     *\r\n     * @param {Buffer} bytes - the data to be signed\r\n     *\r\n     * @returns {string} - the hex encoded signature. it is a concatenation of\r\n     * the r and s values in hex, each padded to a length of 64.\r\n     */\n\n\n    Account.prototype.signTransaction = function (bytes) {\n      return zcrypto.sign(bytes, this.privateKey, this.publicKey);\n    };\n\n    Account.prototype.normalizePrivateKey = function (privateKey) {\n      return zcrypto.normalizePrivateKey(privateKey);\n    };\n\n    return Account;\n  }();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var require$$0 = {};\n  var bn = createCommonjsModule(function (module) {\n    (function (module, exports) {\n      // Utils\n      function assert(val, msg) {\n        if (!val) throw new Error(msg || 'Assertion failed');\n      } // Could use `inherits` module, but don't want to move from single file\n      // architecture yet.\n\n\n      function inherits(ctor, superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      } // BN\n\n\n      function BN(number, base, endian) {\n        if (BN.isBN(number)) {\n          return number;\n        }\n\n        this.negative = 0;\n        this.words = null;\n        this.length = 0; // Reduction context\n\n        this.red = null;\n\n        if (number !== null) {\n          if (base === 'le' || base === 'be') {\n            endian = base;\n            base = 10;\n          }\n\n          this._init(number || 0, base || 10, endian || 'be');\n        }\n      }\n\n      if (typeof module === 'object') {\n        module.exports = BN;\n      } else {\n        exports.BN = BN;\n      }\n\n      BN.BN = BN;\n      BN.wordSize = 26;\n      var Buffer;\n\n      try {\n        Buffer = require$$0.Buffer;\n      } catch (e) {}\n\n      BN.isBN = function isBN(num) {\n        if (num instanceof BN) {\n          return true;\n        }\n\n        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n      };\n\n      BN.max = function max(left, right) {\n        if (left.cmp(right) > 0) return left;\n        return right;\n      };\n\n      BN.min = function min(left, right) {\n        if (left.cmp(right) < 0) return left;\n        return right;\n      };\n\n      BN.prototype._init = function init(number, base, endian) {\n        if (typeof number === 'number') {\n          return this._initNumber(number, base, endian);\n        }\n\n        if (typeof number === 'object') {\n          return this._initArray(number, base, endian);\n        }\n\n        if (base === 'hex') {\n          base = 16;\n        }\n\n        assert(base === (base | 0) && base >= 2 && base <= 36);\n        number = number.toString().replace(/\\s+/g, '');\n        var start = 0;\n\n        if (number[0] === '-') {\n          start++;\n        }\n\n        if (base === 16) {\n          this._parseHex(number, start);\n        } else {\n          this._parseBase(number, base, start);\n        }\n\n        if (number[0] === '-') {\n          this.negative = 1;\n        }\n\n        this.strip();\n        if (endian !== 'le') return;\n\n        this._initArray(this.toArray(), base, endian);\n      };\n\n      BN.prototype._initNumber = function _initNumber(number, base, endian) {\n        if (number < 0) {\n          this.negative = 1;\n          number = -number;\n        }\n\n        if (number < 0x4000000) {\n          this.words = [number & 0x3ffffff];\n          this.length = 1;\n        } else if (number < 0x10000000000000) {\n          this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n          this.length = 2;\n        } else {\n          assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n          this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n          this.length = 3;\n        }\n\n        if (endian !== 'le') return; // Reverse the bytes\n\n        this._initArray(this.toArray(), base, endian);\n      };\n\n      BN.prototype._initArray = function _initArray(number, base, endian) {\n        // Perhaps a Uint8Array\n        assert(typeof number.length === 'number');\n\n        if (number.length <= 0) {\n          this.words = [0];\n          this.length = 1;\n          return this;\n        }\n\n        this.length = Math.ceil(number.length / 3);\n        this.words = new Array(this.length);\n\n        for (var i = 0; i < this.length; i++) {\n          this.words[i] = 0;\n        }\n\n        var j, w;\n        var off = 0;\n\n        if (endian === 'be') {\n          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n            this.words[j] |= w << off & 0x3ffffff;\n            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n            off += 24;\n\n            if (off >= 26) {\n              off -= 26;\n              j++;\n            }\n          }\n        } else if (endian === 'le') {\n          for (i = 0, j = 0; i < number.length; i += 3) {\n            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n            this.words[j] |= w << off & 0x3ffffff;\n            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n            off += 24;\n\n            if (off >= 26) {\n              off -= 26;\n              j++;\n            }\n          }\n        }\n\n        return this.strip();\n      };\n\n      function parseHex(str, start, end) {\n        var r = 0;\n        var len = Math.min(str.length, end);\n\n        for (var i = start; i < len; i++) {\n          var c = str.charCodeAt(i) - 48;\n          r <<= 4; // 'a' - 'f'\n\n          if (c >= 49 && c <= 54) {\n            r |= c - 49 + 0xa; // 'A' - 'F'\n          } else if (c >= 17 && c <= 22) {\n            r |= c - 17 + 0xa; // '0' - '9'\n          } else {\n            r |= c & 0xf;\n          }\n        }\n\n        return r;\n      }\n\n      BN.prototype._parseHex = function _parseHex(number, start) {\n        // Create possibly bigger array to ensure that it fits the number\n        this.length = Math.ceil((number.length - start) / 6);\n        this.words = new Array(this.length);\n\n        for (var i = 0; i < this.length; i++) {\n          this.words[i] = 0;\n        }\n\n        var j, w; // Scan 24-bit chunks and add them to the number\n\n        var off = 0;\n\n        for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n          w = parseHex(number, i, i + 6);\n          this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n          this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n\n        if (i + 6 !== start) {\n          w = parseHex(number, start, i + 6);\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        }\n\n        this.strip();\n      };\n\n      function parseBase(str, start, end, mul) {\n        var r = 0;\n        var len = Math.min(str.length, end);\n\n        for (var i = start; i < len; i++) {\n          var c = str.charCodeAt(i) - 48;\n          r *= mul; // 'a'\n\n          if (c >= 49) {\n            r += c - 49 + 0xa; // 'A'\n          } else if (c >= 17) {\n            r += c - 17 + 0xa; // '0' - '9'\n          } else {\n            r += c;\n          }\n        }\n\n        return r;\n      }\n\n      BN.prototype._parseBase = function _parseBase(number, base, start) {\n        // Initialize as zero\n        this.words = [0];\n        this.length = 1; // Find length of limb in base\n\n        for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n          limbLen++;\n        }\n\n        limbLen--;\n        limbPow = limbPow / base | 0;\n        var total = number.length - start;\n        var mod = total % limbLen;\n        var end = Math.min(total, total - mod) + start;\n        var word = 0;\n\n        for (var i = start; i < end; i += limbLen) {\n          word = parseBase(number, i, i + limbLen, base);\n          this.imuln(limbPow);\n\n          if (this.words[0] + word < 0x4000000) {\n            this.words[0] += word;\n          } else {\n            this._iaddn(word);\n          }\n        }\n\n        if (mod !== 0) {\n          var pow = 1;\n          word = parseBase(number, i, number.length, base);\n\n          for (i = 0; i < mod; i++) {\n            pow *= base;\n          }\n\n          this.imuln(pow);\n\n          if (this.words[0] + word < 0x4000000) {\n            this.words[0] += word;\n          } else {\n            this._iaddn(word);\n          }\n        }\n      };\n\n      BN.prototype.copy = function copy(dest) {\n        dest.words = new Array(this.length);\n\n        for (var i = 0; i < this.length; i++) {\n          dest.words[i] = this.words[i];\n        }\n\n        dest.length = this.length;\n        dest.negative = this.negative;\n        dest.red = this.red;\n      };\n\n      BN.prototype.clone = function clone() {\n        var r = new BN(null);\n        this.copy(r);\n        return r;\n      };\n\n      BN.prototype._expand = function _expand(size) {\n        while (this.length < size) {\n          this.words[this.length++] = 0;\n        }\n\n        return this;\n      }; // Remove leading `0` from `this`\n\n\n      BN.prototype.strip = function strip() {\n        while (this.length > 1 && this.words[this.length - 1] === 0) {\n          this.length--;\n        }\n\n        return this._normSign();\n      };\n\n      BN.prototype._normSign = function _normSign() {\n        // -0 = 0\n        if (this.length === 1 && this.words[0] === 0) {\n          this.negative = 0;\n        }\n\n        return this;\n      };\n\n      BN.prototype.inspect = function inspect() {\n        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n      };\n      /*\n       var zeros = [];\n      var groupSizes = [];\n      var groupBases = [];\n       var s = '';\n      var i = -1;\n      while (++i < BN.wordSize) {\n        zeros[i] = s;\n        s += '0';\n      }\n      groupSizes[0] = 0;\n      groupSizes[1] = 0;\n      groupBases[0] = 0;\n      groupBases[1] = 0;\n      var base = 2 - 1;\n      while (++base < 36 + 1) {\n        var groupSize = 0;\n        var groupBase = 1;\n        while (groupBase < (1 << BN.wordSize) / base) {\n          groupBase *= base;\n          groupSize += 1;\n        }\n        groupSizes[base] = groupSize;\n        groupBases[base] = groupBase;\n      }\n       */\n\n\n      var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n      var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n      var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n      BN.prototype.toString = function toString(base, padding) {\n        base = base || 10;\n        padding = padding | 0 || 1;\n        var out;\n\n        if (base === 16 || base === 'hex') {\n          out = '';\n          var off = 0;\n          var carry = 0;\n\n          for (var i = 0; i < this.length; i++) {\n            var w = this.words[i];\n            var word = ((w << off | carry) & 0xffffff).toString(16);\n            carry = w >>> 24 - off & 0xffffff;\n\n            if (carry !== 0 || i !== this.length - 1) {\n              out = zeros[6 - word.length] + word + out;\n            } else {\n              out = word + out;\n            }\n\n            off += 2;\n\n            if (off >= 26) {\n              off -= 26;\n              i--;\n            }\n          }\n\n          if (carry !== 0) {\n            out = carry.toString(16) + out;\n          }\n\n          while (out.length % padding !== 0) {\n            out = '0' + out;\n          }\n\n          if (this.negative !== 0) {\n            out = '-' + out;\n          }\n\n          return out;\n        }\n\n        if (base === (base | 0) && base >= 2 && base <= 36) {\n          // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n          var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n          var groupBase = groupBases[base];\n          out = '';\n          var c = this.clone();\n          c.negative = 0;\n\n          while (!c.isZero()) {\n            var r = c.modn(groupBase).toString(base);\n            c = c.idivn(groupBase);\n\n            if (!c.isZero()) {\n              out = zeros[groupSize - r.length] + r + out;\n            } else {\n              out = r + out;\n            }\n          }\n\n          if (this.isZero()) {\n            out = '0' + out;\n          }\n\n          while (out.length % padding !== 0) {\n            out = '0' + out;\n          }\n\n          if (this.negative !== 0) {\n            out = '-' + out;\n          }\n\n          return out;\n        }\n\n        assert(false, 'Base should be between 2 and 36');\n      };\n\n      BN.prototype.toNumber = function toNumber() {\n        var ret = this.words[0];\n\n        if (this.length === 2) {\n          ret += this.words[1] * 0x4000000;\n        } else if (this.length === 3 && this.words[2] === 0x01) {\n          // NOTE: at this stage it is known that the top bit is set\n          ret += 0x10000000000000 + this.words[1] * 0x4000000;\n        } else if (this.length > 2) {\n          assert(false, 'Number can only safely store up to 53 bits');\n        }\n\n        return this.negative !== 0 ? -ret : ret;\n      };\n\n      BN.prototype.toJSON = function toJSON() {\n        return this.toString(16);\n      };\n\n      BN.prototype.toBuffer = function toBuffer(endian, length) {\n        assert(typeof Buffer !== 'undefined');\n        return this.toArrayLike(Buffer, endian, length);\n      };\n\n      BN.prototype.toArray = function toArray(endian, length) {\n        return this.toArrayLike(Array, endian, length);\n      };\n\n      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n        var byteLength = this.byteLength();\n        var reqLength = length || Math.max(1, byteLength);\n        assert(byteLength <= reqLength, 'byte array longer than desired length');\n        assert(reqLength > 0, 'Requested array length <= 0');\n        this.strip();\n        var littleEndian = endian === 'le';\n        var res = new ArrayType(reqLength);\n        var b, i;\n        var q = this.clone();\n\n        if (!littleEndian) {\n          // Assume big-endian\n          for (i = 0; i < reqLength - byteLength; i++) {\n            res[i] = 0;\n          }\n\n          for (i = 0; !q.isZero(); i++) {\n            b = q.andln(0xff);\n            q.iushrn(8);\n            res[reqLength - i - 1] = b;\n          }\n        } else {\n          for (i = 0; !q.isZero(); i++) {\n            b = q.andln(0xff);\n            q.iushrn(8);\n            res[i] = b;\n          }\n\n          for (; i < reqLength; i++) {\n            res[i] = 0;\n          }\n        }\n\n        return res;\n      };\n\n      if (Math.clz32) {\n        BN.prototype._countBits = function _countBits(w) {\n          return 32 - Math.clz32(w);\n        };\n      } else {\n        BN.prototype._countBits = function _countBits(w) {\n          var t = w;\n          var r = 0;\n\n          if (t >= 0x1000) {\n            r += 13;\n            t >>>= 13;\n          }\n\n          if (t >= 0x40) {\n            r += 7;\n            t >>>= 7;\n          }\n\n          if (t >= 0x8) {\n            r += 4;\n            t >>>= 4;\n          }\n\n          if (t >= 0x02) {\n            r += 2;\n            t >>>= 2;\n          }\n\n          return r + t;\n        };\n      }\n\n      BN.prototype._zeroBits = function _zeroBits(w) {\n        // Short-cut\n        if (w === 0) return 26;\n        var t = w;\n        var r = 0;\n\n        if ((t & 0x1fff) === 0) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if ((t & 0x7f) === 0) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if ((t & 0xf) === 0) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if ((t & 0x3) === 0) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        if ((t & 0x1) === 0) {\n          r++;\n        }\n\n        return r;\n      }; // Return number of used bits in a BN\n\n\n      BN.prototype.bitLength = function bitLength() {\n        var w = this.words[this.length - 1];\n\n        var hi = this._countBits(w);\n\n        return (this.length - 1) * 26 + hi;\n      };\n\n      function toBitArray(num) {\n        var w = new Array(num.bitLength());\n\n        for (var bit = 0; bit < w.length; bit++) {\n          var off = bit / 26 | 0;\n          var wbit = bit % 26;\n          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n        }\n\n        return w;\n      } // Number of trailing zero bits\n\n\n      BN.prototype.zeroBits = function zeroBits() {\n        if (this.isZero()) return 0;\n        var r = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var b = this._zeroBits(this.words[i]);\n\n          r += b;\n          if (b !== 26) break;\n        }\n\n        return r;\n      };\n\n      BN.prototype.byteLength = function byteLength() {\n        return Math.ceil(this.bitLength() / 8);\n      };\n\n      BN.prototype.toTwos = function toTwos(width) {\n        if (this.negative !== 0) {\n          return this.abs().inotn(width).iaddn(1);\n        }\n\n        return this.clone();\n      };\n\n      BN.prototype.fromTwos = function fromTwos(width) {\n        if (this.testn(width - 1)) {\n          return this.notn(width).iaddn(1).ineg();\n        }\n\n        return this.clone();\n      };\n\n      BN.prototype.isNeg = function isNeg() {\n        return this.negative !== 0;\n      }; // Return negative clone of `this`\n\n\n      BN.prototype.neg = function neg() {\n        return this.clone().ineg();\n      };\n\n      BN.prototype.ineg = function ineg() {\n        if (!this.isZero()) {\n          this.negative ^= 1;\n        }\n\n        return this;\n      }; // Or `num` with `this` in-place\n\n\n      BN.prototype.iuor = function iuor(num) {\n        while (this.length < num.length) {\n          this.words[this.length++] = 0;\n        }\n\n        for (var i = 0; i < num.length; i++) {\n          this.words[i] = this.words[i] | num.words[i];\n        }\n\n        return this.strip();\n      };\n\n      BN.prototype.ior = function ior(num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuor(num);\n      }; // Or `num` with `this`\n\n\n      BN.prototype.or = function or(num) {\n        if (this.length > num.length) return this.clone().ior(num);\n        return num.clone().ior(this);\n      };\n\n      BN.prototype.uor = function uor(num) {\n        if (this.length > num.length) return this.clone().iuor(num);\n        return num.clone().iuor(this);\n      }; // And `num` with `this` in-place\n\n\n      BN.prototype.iuand = function iuand(num) {\n        // b = min-length(num, this)\n        var b;\n\n        if (this.length > num.length) {\n          b = num;\n        } else {\n          b = this;\n        }\n\n        for (var i = 0; i < b.length; i++) {\n          this.words[i] = this.words[i] & num.words[i];\n        }\n\n        this.length = b.length;\n        return this.strip();\n      };\n\n      BN.prototype.iand = function iand(num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuand(num);\n      }; // And `num` with `this`\n\n\n      BN.prototype.and = function and(num) {\n        if (this.length > num.length) return this.clone().iand(num);\n        return num.clone().iand(this);\n      };\n\n      BN.prototype.uand = function uand(num) {\n        if (this.length > num.length) return this.clone().iuand(num);\n        return num.clone().iuand(this);\n      }; // Xor `num` with `this` in-place\n\n\n      BN.prototype.iuxor = function iuxor(num) {\n        // a.length > b.length\n        var a;\n        var b;\n\n        if (this.length > num.length) {\n          a = this;\n          b = num;\n        } else {\n          a = num;\n          b = this;\n        }\n\n        for (var i = 0; i < b.length; i++) {\n          this.words[i] = a.words[i] ^ b.words[i];\n        }\n\n        if (this !== a) {\n          for (; i < a.length; i++) {\n            this.words[i] = a.words[i];\n          }\n        }\n\n        this.length = a.length;\n        return this.strip();\n      };\n\n      BN.prototype.ixor = function ixor(num) {\n        assert((this.negative | num.negative) === 0);\n        return this.iuxor(num);\n      }; // Xor `num` with `this`\n\n\n      BN.prototype.xor = function xor(num) {\n        if (this.length > num.length) return this.clone().ixor(num);\n        return num.clone().ixor(this);\n      };\n\n      BN.prototype.uxor = function uxor(num) {\n        if (this.length > num.length) return this.clone().iuxor(num);\n        return num.clone().iuxor(this);\n      }; // Not ``this`` with ``width`` bitwidth\n\n\n      BN.prototype.inotn = function inotn(width) {\n        assert(typeof width === 'number' && width >= 0);\n        var bytesNeeded = Math.ceil(width / 26) | 0;\n        var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n        this._expand(bytesNeeded);\n\n        if (bitsLeft > 0) {\n          bytesNeeded--;\n        } // Handle complete words\n\n\n        for (var i = 0; i < bytesNeeded; i++) {\n          this.words[i] = ~this.words[i] & 0x3ffffff;\n        } // Handle the residue\n\n\n        if (bitsLeft > 0) {\n          this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n        } // And remove leading zeroes\n\n\n        return this.strip();\n      };\n\n      BN.prototype.notn = function notn(width) {\n        return this.clone().inotn(width);\n      }; // Set `bit` of `this`\n\n\n      BN.prototype.setn = function setn(bit, val) {\n        assert(typeof bit === 'number' && bit >= 0);\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n\n        this._expand(off + 1);\n\n        if (val) {\n          this.words[off] = this.words[off] | 1 << wbit;\n        } else {\n          this.words[off] = this.words[off] & ~(1 << wbit);\n        }\n\n        return this.strip();\n      }; // Add `num` to `this` in-place\n\n\n      BN.prototype.iadd = function iadd(num) {\n        var r; // negative + positive\n\n        if (this.negative !== 0 && num.negative === 0) {\n          this.negative = 0;\n          r = this.isub(num);\n          this.negative ^= 1;\n          return this._normSign(); // positive + negative\n        } else if (this.negative === 0 && num.negative !== 0) {\n          num.negative = 0;\n          r = this.isub(num);\n          num.negative = 1;\n          return r._normSign();\n        } // a.length > b.length\n\n\n        var a, b;\n\n        if (this.length > num.length) {\n          a = this;\n          b = num;\n        } else {\n          a = num;\n          b = this;\n        }\n\n        var carry = 0;\n\n        for (var i = 0; i < b.length; i++) {\n          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n          this.words[i] = r & 0x3ffffff;\n          carry = r >>> 26;\n        }\n\n        for (; carry !== 0 && i < a.length; i++) {\n          r = (a.words[i] | 0) + carry;\n          this.words[i] = r & 0x3ffffff;\n          carry = r >>> 26;\n        }\n\n        this.length = a.length;\n\n        if (carry !== 0) {\n          this.words[this.length] = carry;\n          this.length++; // Copy the rest of the words\n        } else if (a !== this) {\n          for (; i < a.length; i++) {\n            this.words[i] = a.words[i];\n          }\n        }\n\n        return this;\n      }; // Add `num` to `this`\n\n\n      BN.prototype.add = function add(num) {\n        var res;\n\n        if (num.negative !== 0 && this.negative === 0) {\n          num.negative = 0;\n          res = this.sub(num);\n          num.negative ^= 1;\n          return res;\n        } else if (num.negative === 0 && this.negative !== 0) {\n          this.negative = 0;\n          res = num.sub(this);\n          this.negative = 1;\n          return res;\n        }\n\n        if (this.length > num.length) return this.clone().iadd(num);\n        return num.clone().iadd(this);\n      }; // Subtract `num` from `this` in-place\n\n\n      BN.prototype.isub = function isub(num) {\n        // this - (-num) = this + num\n        if (num.negative !== 0) {\n          num.negative = 0;\n          var r = this.iadd(num);\n          num.negative = 1;\n          return r._normSign(); // -this - num = -(this + num)\n        } else if (this.negative !== 0) {\n          this.negative = 0;\n          this.iadd(num);\n          this.negative = 1;\n          return this._normSign();\n        } // At this point both numbers are positive\n\n\n        var cmp = this.cmp(num); // Optimization - zeroify\n\n        if (cmp === 0) {\n          this.negative = 0;\n          this.length = 1;\n          this.words[0] = 0;\n          return this;\n        } // a > b\n\n\n        var a, b;\n\n        if (cmp > 0) {\n          a = this;\n          b = num;\n        } else {\n          a = num;\n          b = this;\n        }\n\n        var carry = 0;\n\n        for (var i = 0; i < b.length; i++) {\n          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n          carry = r >> 26;\n          this.words[i] = r & 0x3ffffff;\n        }\n\n        for (; carry !== 0 && i < a.length; i++) {\n          r = (a.words[i] | 0) + carry;\n          carry = r >> 26;\n          this.words[i] = r & 0x3ffffff;\n        } // Copy rest of the words\n\n\n        if (carry === 0 && i < a.length && a !== this) {\n          for (; i < a.length; i++) {\n            this.words[i] = a.words[i];\n          }\n        }\n\n        this.length = Math.max(this.length, i);\n\n        if (a !== this) {\n          this.negative = 1;\n        }\n\n        return this.strip();\n      }; // Subtract `num` from `this`\n\n\n      BN.prototype.sub = function sub(num) {\n        return this.clone().isub(num);\n      };\n\n      function smallMulTo(self, num, out) {\n        out.negative = num.negative ^ self.negative;\n        var len = self.length + num.length | 0;\n        out.length = len;\n        len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n        var a = self.words[0] | 0;\n        var b = num.words[0] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        var carry = r / 0x4000000 | 0;\n        out.words[0] = lo;\n\n        for (var k = 1; k < len; k++) {\n          // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n          // note that ncarry could be >= 0x3ffffff\n          var ncarry = carry >>> 26;\n          var rword = carry & 0x3ffffff;\n          var maxJ = Math.min(k, num.length - 1);\n\n          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n            var i = k - j | 0;\n            a = self.words[i] | 0;\n            b = num.words[j] | 0;\n            r = a * b + rword;\n            ncarry += r / 0x4000000 | 0;\n            rword = r & 0x3ffffff;\n          }\n\n          out.words[k] = rword | 0;\n          carry = ncarry | 0;\n        }\n\n        if (carry !== 0) {\n          out.words[k] = carry | 0;\n        } else {\n          out.length--;\n        }\n\n        return out.strip();\n      } // TODO(indutny): it may be reasonable to omit it for users who don't need\n      // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n      // multiplication (like elliptic secp256k1).\n\n\n      var comb10MulTo = function comb10MulTo(self, num, out) {\n        var a = self.words;\n        var b = num.words;\n        var o = out.words;\n        var c = 0;\n        var lo;\n        var mid;\n        var hi;\n        var a0 = a[0] | 0;\n        var al0 = a0 & 0x1fff;\n        var ah0 = a0 >>> 13;\n        var a1 = a[1] | 0;\n        var al1 = a1 & 0x1fff;\n        var ah1 = a1 >>> 13;\n        var a2 = a[2] | 0;\n        var al2 = a2 & 0x1fff;\n        var ah2 = a2 >>> 13;\n        var a3 = a[3] | 0;\n        var al3 = a3 & 0x1fff;\n        var ah3 = a3 >>> 13;\n        var a4 = a[4] | 0;\n        var al4 = a4 & 0x1fff;\n        var ah4 = a4 >>> 13;\n        var a5 = a[5] | 0;\n        var al5 = a5 & 0x1fff;\n        var ah5 = a5 >>> 13;\n        var a6 = a[6] | 0;\n        var al6 = a6 & 0x1fff;\n        var ah6 = a6 >>> 13;\n        var a7 = a[7] | 0;\n        var al7 = a7 & 0x1fff;\n        var ah7 = a7 >>> 13;\n        var a8 = a[8] | 0;\n        var al8 = a8 & 0x1fff;\n        var ah8 = a8 >>> 13;\n        var a9 = a[9] | 0;\n        var al9 = a9 & 0x1fff;\n        var ah9 = a9 >>> 13;\n        var b0 = b[0] | 0;\n        var bl0 = b0 & 0x1fff;\n        var bh0 = b0 >>> 13;\n        var b1 = b[1] | 0;\n        var bl1 = b1 & 0x1fff;\n        var bh1 = b1 >>> 13;\n        var b2 = b[2] | 0;\n        var bl2 = b2 & 0x1fff;\n        var bh2 = b2 >>> 13;\n        var b3 = b[3] | 0;\n        var bl3 = b3 & 0x1fff;\n        var bh3 = b3 >>> 13;\n        var b4 = b[4] | 0;\n        var bl4 = b4 & 0x1fff;\n        var bh4 = b4 >>> 13;\n        var b5 = b[5] | 0;\n        var bl5 = b5 & 0x1fff;\n        var bh5 = b5 >>> 13;\n        var b6 = b[6] | 0;\n        var bl6 = b6 & 0x1fff;\n        var bh6 = b6 >>> 13;\n        var b7 = b[7] | 0;\n        var bl7 = b7 & 0x1fff;\n        var bh7 = b7 >>> 13;\n        var b8 = b[8] | 0;\n        var bl8 = b8 & 0x1fff;\n        var bh8 = b8 >>> 13;\n        var b9 = b[9] | 0;\n        var bl9 = b9 & 0x1fff;\n        var bh9 = b9 >>> 13;\n        out.negative = self.negative ^ num.negative;\n        out.length = 19;\n        /* k = 0 */\n\n        lo = Math.imul(al0, bl0);\n        mid = Math.imul(al0, bh0);\n        mid = mid + Math.imul(ah0, bl0) | 0;\n        hi = Math.imul(ah0, bh0);\n        var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n        w0 &= 0x3ffffff;\n        /* k = 1 */\n\n        lo = Math.imul(al1, bl0);\n        mid = Math.imul(al1, bh0);\n        mid = mid + Math.imul(ah1, bl0) | 0;\n        hi = Math.imul(ah1, bh0);\n        lo = lo + Math.imul(al0, bl1) | 0;\n        mid = mid + Math.imul(al0, bh1) | 0;\n        mid = mid + Math.imul(ah0, bl1) | 0;\n        hi = hi + Math.imul(ah0, bh1) | 0;\n        var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n        w1 &= 0x3ffffff;\n        /* k = 2 */\n\n        lo = Math.imul(al2, bl0);\n        mid = Math.imul(al2, bh0);\n        mid = mid + Math.imul(ah2, bl0) | 0;\n        hi = Math.imul(ah2, bh0);\n        lo = lo + Math.imul(al1, bl1) | 0;\n        mid = mid + Math.imul(al1, bh1) | 0;\n        mid = mid + Math.imul(ah1, bl1) | 0;\n        hi = hi + Math.imul(ah1, bh1) | 0;\n        lo = lo + Math.imul(al0, bl2) | 0;\n        mid = mid + Math.imul(al0, bh2) | 0;\n        mid = mid + Math.imul(ah0, bl2) | 0;\n        hi = hi + Math.imul(ah0, bh2) | 0;\n        var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n        w2 &= 0x3ffffff;\n        /* k = 3 */\n\n        lo = Math.imul(al3, bl0);\n        mid = Math.imul(al3, bh0);\n        mid = mid + Math.imul(ah3, bl0) | 0;\n        hi = Math.imul(ah3, bh0);\n        lo = lo + Math.imul(al2, bl1) | 0;\n        mid = mid + Math.imul(al2, bh1) | 0;\n        mid = mid + Math.imul(ah2, bl1) | 0;\n        hi = hi + Math.imul(ah2, bh1) | 0;\n        lo = lo + Math.imul(al1, bl2) | 0;\n        mid = mid + Math.imul(al1, bh2) | 0;\n        mid = mid + Math.imul(ah1, bl2) | 0;\n        hi = hi + Math.imul(ah1, bh2) | 0;\n        lo = lo + Math.imul(al0, bl3) | 0;\n        mid = mid + Math.imul(al0, bh3) | 0;\n        mid = mid + Math.imul(ah0, bl3) | 0;\n        hi = hi + Math.imul(ah0, bh3) | 0;\n        var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n        w3 &= 0x3ffffff;\n        /* k = 4 */\n\n        lo = Math.imul(al4, bl0);\n        mid = Math.imul(al4, bh0);\n        mid = mid + Math.imul(ah4, bl0) | 0;\n        hi = Math.imul(ah4, bh0);\n        lo = lo + Math.imul(al3, bl1) | 0;\n        mid = mid + Math.imul(al3, bh1) | 0;\n        mid = mid + Math.imul(ah3, bl1) | 0;\n        hi = hi + Math.imul(ah3, bh1) | 0;\n        lo = lo + Math.imul(al2, bl2) | 0;\n        mid = mid + Math.imul(al2, bh2) | 0;\n        mid = mid + Math.imul(ah2, bl2) | 0;\n        hi = hi + Math.imul(ah2, bh2) | 0;\n        lo = lo + Math.imul(al1, bl3) | 0;\n        mid = mid + Math.imul(al1, bh3) | 0;\n        mid = mid + Math.imul(ah1, bl3) | 0;\n        hi = hi + Math.imul(ah1, bh3) | 0;\n        lo = lo + Math.imul(al0, bl4) | 0;\n        mid = mid + Math.imul(al0, bh4) | 0;\n        mid = mid + Math.imul(ah0, bl4) | 0;\n        hi = hi + Math.imul(ah0, bh4) | 0;\n        var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n        w4 &= 0x3ffffff;\n        /* k = 5 */\n\n        lo = Math.imul(al5, bl0);\n        mid = Math.imul(al5, bh0);\n        mid = mid + Math.imul(ah5, bl0) | 0;\n        hi = Math.imul(ah5, bh0);\n        lo = lo + Math.imul(al4, bl1) | 0;\n        mid = mid + Math.imul(al4, bh1) | 0;\n        mid = mid + Math.imul(ah4, bl1) | 0;\n        hi = hi + Math.imul(ah4, bh1) | 0;\n        lo = lo + Math.imul(al3, bl2) | 0;\n        mid = mid + Math.imul(al3, bh2) | 0;\n        mid = mid + Math.imul(ah3, bl2) | 0;\n        hi = hi + Math.imul(ah3, bh2) | 0;\n        lo = lo + Math.imul(al2, bl3) | 0;\n        mid = mid + Math.imul(al2, bh3) | 0;\n        mid = mid + Math.imul(ah2, bl3) | 0;\n        hi = hi + Math.imul(ah2, bh3) | 0;\n        lo = lo + Math.imul(al1, bl4) | 0;\n        mid = mid + Math.imul(al1, bh4) | 0;\n        mid = mid + Math.imul(ah1, bl4) | 0;\n        hi = hi + Math.imul(ah1, bh4) | 0;\n        lo = lo + Math.imul(al0, bl5) | 0;\n        mid = mid + Math.imul(al0, bh5) | 0;\n        mid = mid + Math.imul(ah0, bl5) | 0;\n        hi = hi + Math.imul(ah0, bh5) | 0;\n        var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n        w5 &= 0x3ffffff;\n        /* k = 6 */\n\n        lo = Math.imul(al6, bl0);\n        mid = Math.imul(al6, bh0);\n        mid = mid + Math.imul(ah6, bl0) | 0;\n        hi = Math.imul(ah6, bh0);\n        lo = lo + Math.imul(al5, bl1) | 0;\n        mid = mid + Math.imul(al5, bh1) | 0;\n        mid = mid + Math.imul(ah5, bl1) | 0;\n        hi = hi + Math.imul(ah5, bh1) | 0;\n        lo = lo + Math.imul(al4, bl2) | 0;\n        mid = mid + Math.imul(al4, bh2) | 0;\n        mid = mid + Math.imul(ah4, bl2) | 0;\n        hi = hi + Math.imul(ah4, bh2) | 0;\n        lo = lo + Math.imul(al3, bl3) | 0;\n        mid = mid + Math.imul(al3, bh3) | 0;\n        mid = mid + Math.imul(ah3, bl3) | 0;\n        hi = hi + Math.imul(ah3, bh3) | 0;\n        lo = lo + Math.imul(al2, bl4) | 0;\n        mid = mid + Math.imul(al2, bh4) | 0;\n        mid = mid + Math.imul(ah2, bl4) | 0;\n        hi = hi + Math.imul(ah2, bh4) | 0;\n        lo = lo + Math.imul(al1, bl5) | 0;\n        mid = mid + Math.imul(al1, bh5) | 0;\n        mid = mid + Math.imul(ah1, bl5) | 0;\n        hi = hi + Math.imul(ah1, bh5) | 0;\n        lo = lo + Math.imul(al0, bl6) | 0;\n        mid = mid + Math.imul(al0, bh6) | 0;\n        mid = mid + Math.imul(ah0, bl6) | 0;\n        hi = hi + Math.imul(ah0, bh6) | 0;\n        var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n        w6 &= 0x3ffffff;\n        /* k = 7 */\n\n        lo = Math.imul(al7, bl0);\n        mid = Math.imul(al7, bh0);\n        mid = mid + Math.imul(ah7, bl0) | 0;\n        hi = Math.imul(ah7, bh0);\n        lo = lo + Math.imul(al6, bl1) | 0;\n        mid = mid + Math.imul(al6, bh1) | 0;\n        mid = mid + Math.imul(ah6, bl1) | 0;\n        hi = hi + Math.imul(ah6, bh1) | 0;\n        lo = lo + Math.imul(al5, bl2) | 0;\n        mid = mid + Math.imul(al5, bh2) | 0;\n        mid = mid + Math.imul(ah5, bl2) | 0;\n        hi = hi + Math.imul(ah5, bh2) | 0;\n        lo = lo + Math.imul(al4, bl3) | 0;\n        mid = mid + Math.imul(al4, bh3) | 0;\n        mid = mid + Math.imul(ah4, bl3) | 0;\n        hi = hi + Math.imul(ah4, bh3) | 0;\n        lo = lo + Math.imul(al3, bl4) | 0;\n        mid = mid + Math.imul(al3, bh4) | 0;\n        mid = mid + Math.imul(ah3, bl4) | 0;\n        hi = hi + Math.imul(ah3, bh4) | 0;\n        lo = lo + Math.imul(al2, bl5) | 0;\n        mid = mid + Math.imul(al2, bh5) | 0;\n        mid = mid + Math.imul(ah2, bl5) | 0;\n        hi = hi + Math.imul(ah2, bh5) | 0;\n        lo = lo + Math.imul(al1, bl6) | 0;\n        mid = mid + Math.imul(al1, bh6) | 0;\n        mid = mid + Math.imul(ah1, bl6) | 0;\n        hi = hi + Math.imul(ah1, bh6) | 0;\n        lo = lo + Math.imul(al0, bl7) | 0;\n        mid = mid + Math.imul(al0, bh7) | 0;\n        mid = mid + Math.imul(ah0, bl7) | 0;\n        hi = hi + Math.imul(ah0, bh7) | 0;\n        var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n        w7 &= 0x3ffffff;\n        /* k = 8 */\n\n        lo = Math.imul(al8, bl0);\n        mid = Math.imul(al8, bh0);\n        mid = mid + Math.imul(ah8, bl0) | 0;\n        hi = Math.imul(ah8, bh0);\n        lo = lo + Math.imul(al7, bl1) | 0;\n        mid = mid + Math.imul(al7, bh1) | 0;\n        mid = mid + Math.imul(ah7, bl1) | 0;\n        hi = hi + Math.imul(ah7, bh1) | 0;\n        lo = lo + Math.imul(al6, bl2) | 0;\n        mid = mid + Math.imul(al6, bh2) | 0;\n        mid = mid + Math.imul(ah6, bl2) | 0;\n        hi = hi + Math.imul(ah6, bh2) | 0;\n        lo = lo + Math.imul(al5, bl3) | 0;\n        mid = mid + Math.imul(al5, bh3) | 0;\n        mid = mid + Math.imul(ah5, bl3) | 0;\n        hi = hi + Math.imul(ah5, bh3) | 0;\n        lo = lo + Math.imul(al4, bl4) | 0;\n        mid = mid + Math.imul(al4, bh4) | 0;\n        mid = mid + Math.imul(ah4, bl4) | 0;\n        hi = hi + Math.imul(ah4, bh4) | 0;\n        lo = lo + Math.imul(al3, bl5) | 0;\n        mid = mid + Math.imul(al3, bh5) | 0;\n        mid = mid + Math.imul(ah3, bl5) | 0;\n        hi = hi + Math.imul(ah3, bh5) | 0;\n        lo = lo + Math.imul(al2, bl6) | 0;\n        mid = mid + Math.imul(al2, bh6) | 0;\n        mid = mid + Math.imul(ah2, bl6) | 0;\n        hi = hi + Math.imul(ah2, bh6) | 0;\n        lo = lo + Math.imul(al1, bl7) | 0;\n        mid = mid + Math.imul(al1, bh7) | 0;\n        mid = mid + Math.imul(ah1, bl7) | 0;\n        hi = hi + Math.imul(ah1, bh7) | 0;\n        lo = lo + Math.imul(al0, bl8) | 0;\n        mid = mid + Math.imul(al0, bh8) | 0;\n        mid = mid + Math.imul(ah0, bl8) | 0;\n        hi = hi + Math.imul(ah0, bh8) | 0;\n        var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n        w8 &= 0x3ffffff;\n        /* k = 9 */\n\n        lo = Math.imul(al9, bl0);\n        mid = Math.imul(al9, bh0);\n        mid = mid + Math.imul(ah9, bl0) | 0;\n        hi = Math.imul(ah9, bh0);\n        lo = lo + Math.imul(al8, bl1) | 0;\n        mid = mid + Math.imul(al8, bh1) | 0;\n        mid = mid + Math.imul(ah8, bl1) | 0;\n        hi = hi + Math.imul(ah8, bh1) | 0;\n        lo = lo + Math.imul(al7, bl2) | 0;\n        mid = mid + Math.imul(al7, bh2) | 0;\n        mid = mid + Math.imul(ah7, bl2) | 0;\n        hi = hi + Math.imul(ah7, bh2) | 0;\n        lo = lo + Math.imul(al6, bl3) | 0;\n        mid = mid + Math.imul(al6, bh3) | 0;\n        mid = mid + Math.imul(ah6, bl3) | 0;\n        hi = hi + Math.imul(ah6, bh3) | 0;\n        lo = lo + Math.imul(al5, bl4) | 0;\n        mid = mid + Math.imul(al5, bh4) | 0;\n        mid = mid + Math.imul(ah5, bl4) | 0;\n        hi = hi + Math.imul(ah5, bh4) | 0;\n        lo = lo + Math.imul(al4, bl5) | 0;\n        mid = mid + Math.imul(al4, bh5) | 0;\n        mid = mid + Math.imul(ah4, bl5) | 0;\n        hi = hi + Math.imul(ah4, bh5) | 0;\n        lo = lo + Math.imul(al3, bl6) | 0;\n        mid = mid + Math.imul(al3, bh6) | 0;\n        mid = mid + Math.imul(ah3, bl6) | 0;\n        hi = hi + Math.imul(ah3, bh6) | 0;\n        lo = lo + Math.imul(al2, bl7) | 0;\n        mid = mid + Math.imul(al2, bh7) | 0;\n        mid = mid + Math.imul(ah2, bl7) | 0;\n        hi = hi + Math.imul(ah2, bh7) | 0;\n        lo = lo + Math.imul(al1, bl8) | 0;\n        mid = mid + Math.imul(al1, bh8) | 0;\n        mid = mid + Math.imul(ah1, bl8) | 0;\n        hi = hi + Math.imul(ah1, bh8) | 0;\n        lo = lo + Math.imul(al0, bl9) | 0;\n        mid = mid + Math.imul(al0, bh9) | 0;\n        mid = mid + Math.imul(ah0, bl9) | 0;\n        hi = hi + Math.imul(ah0, bh9) | 0;\n        var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n        w9 &= 0x3ffffff;\n        /* k = 10 */\n\n        lo = Math.imul(al9, bl1);\n        mid = Math.imul(al9, bh1);\n        mid = mid + Math.imul(ah9, bl1) | 0;\n        hi = Math.imul(ah9, bh1);\n        lo = lo + Math.imul(al8, bl2) | 0;\n        mid = mid + Math.imul(al8, bh2) | 0;\n        mid = mid + Math.imul(ah8, bl2) | 0;\n        hi = hi + Math.imul(ah8, bh2) | 0;\n        lo = lo + Math.imul(al7, bl3) | 0;\n        mid = mid + Math.imul(al7, bh3) | 0;\n        mid = mid + Math.imul(ah7, bl3) | 0;\n        hi = hi + Math.imul(ah7, bh3) | 0;\n        lo = lo + Math.imul(al6, bl4) | 0;\n        mid = mid + Math.imul(al6, bh4) | 0;\n        mid = mid + Math.imul(ah6, bl4) | 0;\n        hi = hi + Math.imul(ah6, bh4) | 0;\n        lo = lo + Math.imul(al5, bl5) | 0;\n        mid = mid + Math.imul(al5, bh5) | 0;\n        mid = mid + Math.imul(ah5, bl5) | 0;\n        hi = hi + Math.imul(ah5, bh5) | 0;\n        lo = lo + Math.imul(al4, bl6) | 0;\n        mid = mid + Math.imul(al4, bh6) | 0;\n        mid = mid + Math.imul(ah4, bl6) | 0;\n        hi = hi + Math.imul(ah4, bh6) | 0;\n        lo = lo + Math.imul(al3, bl7) | 0;\n        mid = mid + Math.imul(al3, bh7) | 0;\n        mid = mid + Math.imul(ah3, bl7) | 0;\n        hi = hi + Math.imul(ah3, bh7) | 0;\n        lo = lo + Math.imul(al2, bl8) | 0;\n        mid = mid + Math.imul(al2, bh8) | 0;\n        mid = mid + Math.imul(ah2, bl8) | 0;\n        hi = hi + Math.imul(ah2, bh8) | 0;\n        lo = lo + Math.imul(al1, bl9) | 0;\n        mid = mid + Math.imul(al1, bh9) | 0;\n        mid = mid + Math.imul(ah1, bl9) | 0;\n        hi = hi + Math.imul(ah1, bh9) | 0;\n        var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n        w10 &= 0x3ffffff;\n        /* k = 11 */\n\n        lo = Math.imul(al9, bl2);\n        mid = Math.imul(al9, bh2);\n        mid = mid + Math.imul(ah9, bl2) | 0;\n        hi = Math.imul(ah9, bh2);\n        lo = lo + Math.imul(al8, bl3) | 0;\n        mid = mid + Math.imul(al8, bh3) | 0;\n        mid = mid + Math.imul(ah8, bl3) | 0;\n        hi = hi + Math.imul(ah8, bh3) | 0;\n        lo = lo + Math.imul(al7, bl4) | 0;\n        mid = mid + Math.imul(al7, bh4) | 0;\n        mid = mid + Math.imul(ah7, bl4) | 0;\n        hi = hi + Math.imul(ah7, bh4) | 0;\n        lo = lo + Math.imul(al6, bl5) | 0;\n        mid = mid + Math.imul(al6, bh5) | 0;\n        mid = mid + Math.imul(ah6, bl5) | 0;\n        hi = hi + Math.imul(ah6, bh5) | 0;\n        lo = lo + Math.imul(al5, bl6) | 0;\n        mid = mid + Math.imul(al5, bh6) | 0;\n        mid = mid + Math.imul(ah5, bl6) | 0;\n        hi = hi + Math.imul(ah5, bh6) | 0;\n        lo = lo + Math.imul(al4, bl7) | 0;\n        mid = mid + Math.imul(al4, bh7) | 0;\n        mid = mid + Math.imul(ah4, bl7) | 0;\n        hi = hi + Math.imul(ah4, bh7) | 0;\n        lo = lo + Math.imul(al3, bl8) | 0;\n        mid = mid + Math.imul(al3, bh8) | 0;\n        mid = mid + Math.imul(ah3, bl8) | 0;\n        hi = hi + Math.imul(ah3, bh8) | 0;\n        lo = lo + Math.imul(al2, bl9) | 0;\n        mid = mid + Math.imul(al2, bh9) | 0;\n        mid = mid + Math.imul(ah2, bl9) | 0;\n        hi = hi + Math.imul(ah2, bh9) | 0;\n        var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n        w11 &= 0x3ffffff;\n        /* k = 12 */\n\n        lo = Math.imul(al9, bl3);\n        mid = Math.imul(al9, bh3);\n        mid = mid + Math.imul(ah9, bl3) | 0;\n        hi = Math.imul(ah9, bh3);\n        lo = lo + Math.imul(al8, bl4) | 0;\n        mid = mid + Math.imul(al8, bh4) | 0;\n        mid = mid + Math.imul(ah8, bl4) | 0;\n        hi = hi + Math.imul(ah8, bh4) | 0;\n        lo = lo + Math.imul(al7, bl5) | 0;\n        mid = mid + Math.imul(al7, bh5) | 0;\n        mid = mid + Math.imul(ah7, bl5) | 0;\n        hi = hi + Math.imul(ah7, bh5) | 0;\n        lo = lo + Math.imul(al6, bl6) | 0;\n        mid = mid + Math.imul(al6, bh6) | 0;\n        mid = mid + Math.imul(ah6, bl6) | 0;\n        hi = hi + Math.imul(ah6, bh6) | 0;\n        lo = lo + Math.imul(al5, bl7) | 0;\n        mid = mid + Math.imul(al5, bh7) | 0;\n        mid = mid + Math.imul(ah5, bl7) | 0;\n        hi = hi + Math.imul(ah5, bh7) | 0;\n        lo = lo + Math.imul(al4, bl8) | 0;\n        mid = mid + Math.imul(al4, bh8) | 0;\n        mid = mid + Math.imul(ah4, bl8) | 0;\n        hi = hi + Math.imul(ah4, bh8) | 0;\n        lo = lo + Math.imul(al3, bl9) | 0;\n        mid = mid + Math.imul(al3, bh9) | 0;\n        mid = mid + Math.imul(ah3, bl9) | 0;\n        hi = hi + Math.imul(ah3, bh9) | 0;\n        var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n        w12 &= 0x3ffffff;\n        /* k = 13 */\n\n        lo = Math.imul(al9, bl4);\n        mid = Math.imul(al9, bh4);\n        mid = mid + Math.imul(ah9, bl4) | 0;\n        hi = Math.imul(ah9, bh4);\n        lo = lo + Math.imul(al8, bl5) | 0;\n        mid = mid + Math.imul(al8, bh5) | 0;\n        mid = mid + Math.imul(ah8, bl5) | 0;\n        hi = hi + Math.imul(ah8, bh5) | 0;\n        lo = lo + Math.imul(al7, bl6) | 0;\n        mid = mid + Math.imul(al7, bh6) | 0;\n        mid = mid + Math.imul(ah7, bl6) | 0;\n        hi = hi + Math.imul(ah7, bh6) | 0;\n        lo = lo + Math.imul(al6, bl7) | 0;\n        mid = mid + Math.imul(al6, bh7) | 0;\n        mid = mid + Math.imul(ah6, bl7) | 0;\n        hi = hi + Math.imul(ah6, bh7) | 0;\n        lo = lo + Math.imul(al5, bl8) | 0;\n        mid = mid + Math.imul(al5, bh8) | 0;\n        mid = mid + Math.imul(ah5, bl8) | 0;\n        hi = hi + Math.imul(ah5, bh8) | 0;\n        lo = lo + Math.imul(al4, bl9) | 0;\n        mid = mid + Math.imul(al4, bh9) | 0;\n        mid = mid + Math.imul(ah4, bl9) | 0;\n        hi = hi + Math.imul(ah4, bh9) | 0;\n        var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n        w13 &= 0x3ffffff;\n        /* k = 14 */\n\n        lo = Math.imul(al9, bl5);\n        mid = Math.imul(al9, bh5);\n        mid = mid + Math.imul(ah9, bl5) | 0;\n        hi = Math.imul(ah9, bh5);\n        lo = lo + Math.imul(al8, bl6) | 0;\n        mid = mid + Math.imul(al8, bh6) | 0;\n        mid = mid + Math.imul(ah8, bl6) | 0;\n        hi = hi + Math.imul(ah8, bh6) | 0;\n        lo = lo + Math.imul(al7, bl7) | 0;\n        mid = mid + Math.imul(al7, bh7) | 0;\n        mid = mid + Math.imul(ah7, bl7) | 0;\n        hi = hi + Math.imul(ah7, bh7) | 0;\n        lo = lo + Math.imul(al6, bl8) | 0;\n        mid = mid + Math.imul(al6, bh8) | 0;\n        mid = mid + Math.imul(ah6, bl8) | 0;\n        hi = hi + Math.imul(ah6, bh8) | 0;\n        lo = lo + Math.imul(al5, bl9) | 0;\n        mid = mid + Math.imul(al5, bh9) | 0;\n        mid = mid + Math.imul(ah5, bl9) | 0;\n        hi = hi + Math.imul(ah5, bh9) | 0;\n        var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n        w14 &= 0x3ffffff;\n        /* k = 15 */\n\n        lo = Math.imul(al9, bl6);\n        mid = Math.imul(al9, bh6);\n        mid = mid + Math.imul(ah9, bl6) | 0;\n        hi = Math.imul(ah9, bh6);\n        lo = lo + Math.imul(al8, bl7) | 0;\n        mid = mid + Math.imul(al8, bh7) | 0;\n        mid = mid + Math.imul(ah8, bl7) | 0;\n        hi = hi + Math.imul(ah8, bh7) | 0;\n        lo = lo + Math.imul(al7, bl8) | 0;\n        mid = mid + Math.imul(al7, bh8) | 0;\n        mid = mid + Math.imul(ah7, bl8) | 0;\n        hi = hi + Math.imul(ah7, bh8) | 0;\n        lo = lo + Math.imul(al6, bl9) | 0;\n        mid = mid + Math.imul(al6, bh9) | 0;\n        mid = mid + Math.imul(ah6, bl9) | 0;\n        hi = hi + Math.imul(ah6, bh9) | 0;\n        var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n        w15 &= 0x3ffffff;\n        /* k = 16 */\n\n        lo = Math.imul(al9, bl7);\n        mid = Math.imul(al9, bh7);\n        mid = mid + Math.imul(ah9, bl7) | 0;\n        hi = Math.imul(ah9, bh7);\n        lo = lo + Math.imul(al8, bl8) | 0;\n        mid = mid + Math.imul(al8, bh8) | 0;\n        mid = mid + Math.imul(ah8, bl8) | 0;\n        hi = hi + Math.imul(ah8, bh8) | 0;\n        lo = lo + Math.imul(al7, bl9) | 0;\n        mid = mid + Math.imul(al7, bh9) | 0;\n        mid = mid + Math.imul(ah7, bl9) | 0;\n        hi = hi + Math.imul(ah7, bh9) | 0;\n        var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n        w16 &= 0x3ffffff;\n        /* k = 17 */\n\n        lo = Math.imul(al9, bl8);\n        mid = Math.imul(al9, bh8);\n        mid = mid + Math.imul(ah9, bl8) | 0;\n        hi = Math.imul(ah9, bh8);\n        lo = lo + Math.imul(al8, bl9) | 0;\n        mid = mid + Math.imul(al8, bh9) | 0;\n        mid = mid + Math.imul(ah8, bl9) | 0;\n        hi = hi + Math.imul(ah8, bh9) | 0;\n        var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n        w17 &= 0x3ffffff;\n        /* k = 18 */\n\n        lo = Math.imul(al9, bl9);\n        mid = Math.imul(al9, bh9);\n        mid = mid + Math.imul(ah9, bl9) | 0;\n        hi = Math.imul(ah9, bh9);\n        var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n        w18 &= 0x3ffffff;\n        o[0] = w0;\n        o[1] = w1;\n        o[2] = w2;\n        o[3] = w3;\n        o[4] = w4;\n        o[5] = w5;\n        o[6] = w6;\n        o[7] = w7;\n        o[8] = w8;\n        o[9] = w9;\n        o[10] = w10;\n        o[11] = w11;\n        o[12] = w12;\n        o[13] = w13;\n        o[14] = w14;\n        o[15] = w15;\n        o[16] = w16;\n        o[17] = w17;\n        o[18] = w18;\n\n        if (c !== 0) {\n          o[19] = c;\n          out.length++;\n        }\n\n        return out;\n      }; // Polyfill comb\n\n\n      if (!Math.imul) {\n        comb10MulTo = smallMulTo;\n      }\n\n      function bigMulTo(self, num, out) {\n        out.negative = num.negative ^ self.negative;\n        out.length = self.length + num.length;\n        var carry = 0;\n        var hncarry = 0;\n\n        for (var k = 0; k < out.length - 1; k++) {\n          // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n          // note that ncarry could be >= 0x3ffffff\n          var ncarry = hncarry;\n          hncarry = 0;\n          var rword = carry & 0x3ffffff;\n          var maxJ = Math.min(k, num.length - 1);\n\n          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n            var i = k - j;\n            var a = self.words[i] | 0;\n            var b = num.words[j] | 0;\n            var r = a * b;\n            var lo = r & 0x3ffffff;\n            ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n            lo = lo + rword | 0;\n            rword = lo & 0x3ffffff;\n            ncarry = ncarry + (lo >>> 26) | 0;\n            hncarry += ncarry >>> 26;\n            ncarry &= 0x3ffffff;\n          }\n\n          out.words[k] = rword;\n          carry = ncarry;\n          ncarry = hncarry;\n        }\n\n        if (carry !== 0) {\n          out.words[k] = carry;\n        } else {\n          out.length--;\n        }\n\n        return out.strip();\n      }\n\n      function jumboMulTo(self, num, out) {\n        var fftm = new FFTM();\n        return fftm.mulp(self, num, out);\n      }\n\n      BN.prototype.mulTo = function mulTo(num, out) {\n        var res;\n        var len = this.length + num.length;\n\n        if (this.length === 10 && num.length === 10) {\n          res = comb10MulTo(this, num, out);\n        } else if (len < 63) {\n          res = smallMulTo(this, num, out);\n        } else if (len < 1024) {\n          res = bigMulTo(this, num, out);\n        } else {\n          res = jumboMulTo(this, num, out);\n        }\n\n        return res;\n      }; // Cooley-Tukey algorithm for FFT\n      // slightly revisited to rely on looping instead of recursion\n\n\n      function FFTM(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n\n      FFTM.prototype.makeRBT = function makeRBT(N) {\n        var t = new Array(N);\n        var l = BN.prototype._countBits(N) - 1;\n\n        for (var i = 0; i < N; i++) {\n          t[i] = this.revBin(i, l, N);\n        }\n\n        return t;\n      }; // Returns binary-reversed representation of `x`\n\n\n      FFTM.prototype.revBin = function revBin(x, l, N) {\n        if (x === 0 || x === N - 1) return x;\n        var rb = 0;\n\n        for (var i = 0; i < l; i++) {\n          rb |= (x & 1) << l - i - 1;\n          x >>= 1;\n        }\n\n        return rb;\n      }; // Performs \"tweedling\" phase, therefore 'emulating'\n      // behaviour of the recursive algorithm\n\n\n      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n        for (var i = 0; i < N; i++) {\n          rtws[i] = rws[rbt[i]];\n          itws[i] = iws[rbt[i]];\n        }\n      };\n\n      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n        this.permute(rbt, rws, iws, rtws, itws, N);\n\n        for (var s = 1; s < N; s <<= 1) {\n          var l = s << 1;\n          var rtwdf = Math.cos(2 * Math.PI / l);\n          var itwdf = Math.sin(2 * Math.PI / l);\n\n          for (var p = 0; p < N; p += l) {\n            var rtwdf_ = rtwdf;\n            var itwdf_ = itwdf;\n\n            for (var j = 0; j < s; j++) {\n              var re = rtws[p + j];\n              var ie = itws[p + j];\n              var ro = rtws[p + j + s];\n              var io = itws[p + j + s];\n              var rx = rtwdf_ * ro - itwdf_ * io;\n              io = rtwdf_ * io + itwdf_ * ro;\n              ro = rx;\n              rtws[p + j] = re + ro;\n              itws[p + j] = ie + io;\n              rtws[p + j + s] = re - ro;\n              itws[p + j + s] = ie - io;\n              /* jshint maxdepth : false */\n\n              if (j !== l) {\n                rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n                rtwdf_ = rx;\n              }\n            }\n          }\n        }\n      };\n\n      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n        var N = Math.max(m, n) | 1;\n        var odd = N & 1;\n        var i = 0;\n\n        for (N = N / 2 | 0; N; N = N >>> 1) {\n          i++;\n        }\n\n        return 1 << i + 1 + odd;\n      };\n\n      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n        if (N <= 1) return;\n\n        for (var i = 0; i < N / 2; i++) {\n          var t = rws[i];\n          rws[i] = rws[N - i - 1];\n          rws[N - i - 1] = t;\n          t = iws[i];\n          iws[i] = -iws[N - i - 1];\n          iws[N - i - 1] = -t;\n        }\n      };\n\n      FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n        var carry = 0;\n\n        for (var i = 0; i < N / 2; i++) {\n          var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n          ws[i] = w & 0x3ffffff;\n\n          if (w < 0x4000000) {\n            carry = 0;\n          } else {\n            carry = w / 0x4000000 | 0;\n          }\n        }\n\n        return ws;\n      };\n\n      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n        var carry = 0;\n\n        for (var i = 0; i < len; i++) {\n          carry = carry + (ws[i] | 0);\n          rws[2 * i] = carry & 0x1fff;\n          carry = carry >>> 13;\n          rws[2 * i + 1] = carry & 0x1fff;\n          carry = carry >>> 13;\n        } // Pad with zeroes\n\n\n        for (i = 2 * len; i < N; ++i) {\n          rws[i] = 0;\n        }\n\n        assert(carry === 0);\n        assert((carry & ~0x1fff) === 0);\n      };\n\n      FFTM.prototype.stub = function stub(N) {\n        var ph = new Array(N);\n\n        for (var i = 0; i < N; i++) {\n          ph[i] = 0;\n        }\n\n        return ph;\n      };\n\n      FFTM.prototype.mulp = function mulp(x, y, out) {\n        var N = 2 * this.guessLen13b(x.length, y.length);\n        var rbt = this.makeRBT(N);\n\n        var _ = this.stub(N);\n\n        var rws = new Array(N);\n        var rwst = new Array(N);\n        var iwst = new Array(N);\n        var nrws = new Array(N);\n        var nrwst = new Array(N);\n        var niwst = new Array(N);\n        var rmws = out.words;\n        rmws.length = N;\n        this.convert13b(x.words, x.length, rws, N);\n        this.convert13b(y.words, y.length, nrws, N);\n        this.transform(rws, _, rwst, iwst, N, rbt);\n        this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n        for (var i = 0; i < N; i++) {\n          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n          rwst[i] = rx;\n        }\n\n        this.conjugate(rwst, iwst, N);\n        this.transform(rwst, iwst, rmws, _, N, rbt);\n        this.conjugate(rmws, _, N);\n        this.normalize13b(rmws, N);\n        out.negative = x.negative ^ y.negative;\n        out.length = x.length + y.length;\n        return out.strip();\n      }; // Multiply `this` by `num`\n\n\n      BN.prototype.mul = function mul(num) {\n        var out = new BN(null);\n        out.words = new Array(this.length + num.length);\n        return this.mulTo(num, out);\n      }; // Multiply employing FFT\n\n\n      BN.prototype.mulf = function mulf(num) {\n        var out = new BN(null);\n        out.words = new Array(this.length + num.length);\n        return jumboMulTo(this, num, out);\n      }; // In-place Multiplication\n\n\n      BN.prototype.imul = function imul(num) {\n        return this.clone().mulTo(num, this);\n      };\n\n      BN.prototype.imuln = function imuln(num) {\n        assert(typeof num === 'number');\n        assert(num < 0x4000000); // Carry\n\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = (this.words[i] | 0) * num;\n          var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n          carry >>= 26;\n          carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n          carry += lo >>> 26;\n          this.words[i] = lo & 0x3ffffff;\n        }\n\n        if (carry !== 0) {\n          this.words[i] = carry;\n          this.length++;\n        }\n\n        return this;\n      };\n\n      BN.prototype.muln = function muln(num) {\n        return this.clone().imuln(num);\n      }; // `this` * `this`\n\n\n      BN.prototype.sqr = function sqr() {\n        return this.mul(this);\n      }; // `this` * `this` in-place\n\n\n      BN.prototype.isqr = function isqr() {\n        return this.imul(this.clone());\n      }; // Math.pow(`this`, `num`)\n\n\n      BN.prototype.pow = function pow(num) {\n        var w = toBitArray(num);\n        if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n        var res = this;\n\n        for (var i = 0; i < w.length; i++, res = res.sqr()) {\n          if (w[i] !== 0) break;\n        }\n\n        if (++i < w.length) {\n          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n            if (w[i] === 0) continue;\n            res = res.mul(q);\n          }\n        }\n\n        return res;\n      }; // Shift-left in-place\n\n\n      BN.prototype.iushln = function iushln(bits) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var r = bits % 26;\n        var s = (bits - r) / 26;\n        var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n        var i;\n\n        if (r !== 0) {\n          var carry = 0;\n\n          for (i = 0; i < this.length; i++) {\n            var newCarry = this.words[i] & carryMask;\n            var c = (this.words[i] | 0) - newCarry << r;\n            this.words[i] = c | carry;\n            carry = newCarry >>> 26 - r;\n          }\n\n          if (carry) {\n            this.words[i] = carry;\n            this.length++;\n          }\n        }\n\n        if (s !== 0) {\n          for (i = this.length - 1; i >= 0; i--) {\n            this.words[i + s] = this.words[i];\n          }\n\n          for (i = 0; i < s; i++) {\n            this.words[i] = 0;\n          }\n\n          this.length += s;\n        }\n\n        return this.strip();\n      };\n\n      BN.prototype.ishln = function ishln(bits) {\n        // TODO(indutny): implement me\n        assert(this.negative === 0);\n        return this.iushln(bits);\n      }; // Shift-right in-place\n      // NOTE: `hint` is a lowest bit before trailing zeroes\n      // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n      BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var h;\n\n        if (hint) {\n          h = (hint - hint % 26) / 26;\n        } else {\n          h = 0;\n        }\n\n        var r = bits % 26;\n        var s = Math.min((bits - r) / 26, this.length);\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        var maskedWords = extended;\n        h -= s;\n        h = Math.max(0, h); // Extended mode, copy masked part\n\n        if (maskedWords) {\n          for (var i = 0; i < s; i++) {\n            maskedWords.words[i] = this.words[i];\n          }\n\n          maskedWords.length = s;\n        }\n\n        if (s === 0) ;else if (this.length > s) {\n          this.length -= s;\n\n          for (i = 0; i < this.length; i++) {\n            this.words[i] = this.words[i + s];\n          }\n        } else {\n          this.words[0] = 0;\n          this.length = 1;\n        }\n        var carry = 0;\n\n        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n          var word = this.words[i] | 0;\n          this.words[i] = carry << 26 - r | word >>> r;\n          carry = word & mask;\n        } // Push carried bits as a mask\n\n\n        if (maskedWords && carry !== 0) {\n          maskedWords.words[maskedWords.length++] = carry;\n        }\n\n        if (this.length === 0) {\n          this.words[0] = 0;\n          this.length = 1;\n        }\n\n        return this.strip();\n      };\n\n      BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n        // TODO(indutny): implement me\n        assert(this.negative === 0);\n        return this.iushrn(bits, hint, extended);\n      }; // Shift-left\n\n\n      BN.prototype.shln = function shln(bits) {\n        return this.clone().ishln(bits);\n      };\n\n      BN.prototype.ushln = function ushln(bits) {\n        return this.clone().iushln(bits);\n      }; // Shift-right\n\n\n      BN.prototype.shrn = function shrn(bits) {\n        return this.clone().ishrn(bits);\n      };\n\n      BN.prototype.ushrn = function ushrn(bits) {\n        return this.clone().iushrn(bits);\n      }; // Test if n bit is set\n\n\n      BN.prototype.testn = function testn(bit) {\n        assert(typeof bit === 'number' && bit >= 0);\n        var r = bit % 26;\n        var s = (bit - r) / 26;\n        var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n        if (this.length <= s) return false; // Check bit and return\n\n        var w = this.words[s];\n        return !!(w & q);\n      }; // Return only lowers bits of number (in-place)\n\n\n      BN.prototype.imaskn = function imaskn(bits) {\n        assert(typeof bits === 'number' && bits >= 0);\n        var r = bits % 26;\n        var s = (bits - r) / 26;\n        assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n        if (this.length <= s) {\n          return this;\n        }\n\n        if (r !== 0) {\n          s++;\n        }\n\n        this.length = Math.min(s, this.length);\n\n        if (r !== 0) {\n          var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n          this.words[this.length - 1] &= mask;\n        }\n\n        return this.strip();\n      }; // Return only lowers bits of number\n\n\n      BN.prototype.maskn = function maskn(bits) {\n        return this.clone().imaskn(bits);\n      }; // Add plain number `num` to `this`\n\n\n      BN.prototype.iaddn = function iaddn(num) {\n        assert(typeof num === 'number');\n        assert(num < 0x4000000);\n        if (num < 0) return this.isubn(-num); // Possible sign change\n\n        if (this.negative !== 0) {\n          if (this.length === 1 && (this.words[0] | 0) < num) {\n            this.words[0] = num - (this.words[0] | 0);\n            this.negative = 0;\n            return this;\n          }\n\n          this.negative = 0;\n          this.isubn(num);\n          this.negative = 1;\n          return this;\n        } // Add without checks\n\n\n        return this._iaddn(num);\n      };\n\n      BN.prototype._iaddn = function _iaddn(num) {\n        this.words[0] += num; // Carry\n\n        for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n          this.words[i] -= 0x4000000;\n\n          if (i === this.length - 1) {\n            this.words[i + 1] = 1;\n          } else {\n            this.words[i + 1]++;\n          }\n        }\n\n        this.length = Math.max(this.length, i + 1);\n        return this;\n      }; // Subtract plain number `num` from `this`\n\n\n      BN.prototype.isubn = function isubn(num) {\n        assert(typeof num === 'number');\n        assert(num < 0x4000000);\n        if (num < 0) return this.iaddn(-num);\n\n        if (this.negative !== 0) {\n          this.negative = 0;\n          this.iaddn(num);\n          this.negative = 1;\n          return this;\n        }\n\n        this.words[0] -= num;\n\n        if (this.length === 1 && this.words[0] < 0) {\n          this.words[0] = -this.words[0];\n          this.negative = 1;\n        } else {\n          // Carry\n          for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n            this.words[i] += 0x4000000;\n            this.words[i + 1] -= 1;\n          }\n        }\n\n        return this.strip();\n      };\n\n      BN.prototype.addn = function addn(num) {\n        return this.clone().iaddn(num);\n      };\n\n      BN.prototype.subn = function subn(num) {\n        return this.clone().isubn(num);\n      };\n\n      BN.prototype.iabs = function iabs() {\n        this.negative = 0;\n        return this;\n      };\n\n      BN.prototype.abs = function abs() {\n        return this.clone().iabs();\n      };\n\n      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n        var len = num.length + shift;\n        var i;\n\n        this._expand(len);\n\n        var w;\n        var carry = 0;\n\n        for (i = 0; i < num.length; i++) {\n          w = (this.words[i + shift] | 0) + carry;\n          var right = (num.words[i] | 0) * mul;\n          w -= right & 0x3ffffff;\n          carry = (w >> 26) - (right / 0x4000000 | 0);\n          this.words[i + shift] = w & 0x3ffffff;\n        }\n\n        for (; i < this.length - shift; i++) {\n          w = (this.words[i + shift] | 0) + carry;\n          carry = w >> 26;\n          this.words[i + shift] = w & 0x3ffffff;\n        }\n\n        if (carry === 0) return this.strip(); // Subtraction overflow\n\n        assert(carry === -1);\n        carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          w = -(this.words[i] | 0) + carry;\n          carry = w >> 26;\n          this.words[i] = w & 0x3ffffff;\n        }\n\n        this.negative = 1;\n        return this.strip();\n      };\n\n      BN.prototype._wordDiv = function _wordDiv(num, mode) {\n        var shift = this.length - num.length;\n        var a = this.clone();\n        var b = num; // Normalize\n\n        var bhi = b.words[b.length - 1] | 0;\n\n        var bhiBits = this._countBits(bhi);\n\n        shift = 26 - bhiBits;\n\n        if (shift !== 0) {\n          b = b.ushln(shift);\n          a.iushln(shift);\n          bhi = b.words[b.length - 1] | 0;\n        } // Initialize quotient\n\n\n        var m = a.length - b.length;\n        var q;\n\n        if (mode !== 'mod') {\n          q = new BN(null);\n          q.length = m + 1;\n          q.words = new Array(q.length);\n\n          for (var i = 0; i < q.length; i++) {\n            q.words[i] = 0;\n          }\n        }\n\n        var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n        if (diff.negative === 0) {\n          a = diff;\n\n          if (q) {\n            q.words[m] = 1;\n          }\n        }\n\n        for (var j = m - 1; j >= 0; j--) {\n          var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n          // (0x7ffffff)\n\n          qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n          a._ishlnsubmul(b, qj, j);\n\n          while (a.negative !== 0) {\n            qj--;\n            a.negative = 0;\n\n            a._ishlnsubmul(b, 1, j);\n\n            if (!a.isZero()) {\n              a.negative ^= 1;\n            }\n          }\n\n          if (q) {\n            q.words[j] = qj;\n          }\n        }\n\n        if (q) {\n          q.strip();\n        }\n\n        a.strip(); // Denormalize\n\n        if (mode !== 'div' && shift !== 0) {\n          a.iushrn(shift);\n        }\n\n        return {\n          div: q || null,\n          mod: a\n        };\n      }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n      //       to `div` to request div only, or be absent to\n      //       request both div & mod\n      //       2) `positive` is true if unsigned mod is requested\n\n\n      BN.prototype.divmod = function divmod(num, mode, positive) {\n        assert(!num.isZero());\n\n        if (this.isZero()) {\n          return {\n            div: new BN(0),\n            mod: new BN(0)\n          };\n        }\n\n        var div, mod, res;\n\n        if (this.negative !== 0 && num.negative === 0) {\n          res = this.neg().divmod(num, mode);\n\n          if (mode !== 'mod') {\n            div = res.div.neg();\n          }\n\n          if (mode !== 'div') {\n            mod = res.mod.neg();\n\n            if (positive && mod.negative !== 0) {\n              mod.iadd(num);\n            }\n          }\n\n          return {\n            div: div,\n            mod: mod\n          };\n        }\n\n        if (this.negative === 0 && num.negative !== 0) {\n          res = this.divmod(num.neg(), mode);\n\n          if (mode !== 'mod') {\n            div = res.div.neg();\n          }\n\n          return {\n            div: div,\n            mod: res.mod\n          };\n        }\n\n        if ((this.negative & num.negative) !== 0) {\n          res = this.neg().divmod(num.neg(), mode);\n\n          if (mode !== 'div') {\n            mod = res.mod.neg();\n\n            if (positive && mod.negative !== 0) {\n              mod.isub(num);\n            }\n          }\n\n          return {\n            div: res.div,\n            mod: mod\n          };\n        } // Both numbers are positive at this point\n        // Strip both numbers to approximate shift value\n\n\n        if (num.length > this.length || this.cmp(num) < 0) {\n          return {\n            div: new BN(0),\n            mod: this\n          };\n        } // Very short reduction\n\n\n        if (num.length === 1) {\n          if (mode === 'div') {\n            return {\n              div: this.divn(num.words[0]),\n              mod: null\n            };\n          }\n\n          if (mode === 'mod') {\n            return {\n              div: null,\n              mod: new BN(this.modn(num.words[0]))\n            };\n          }\n\n          return {\n            div: this.divn(num.words[0]),\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return this._wordDiv(num, mode);\n      }; // Find `this` / `num`\n\n\n      BN.prototype.div = function div(num) {\n        return this.divmod(num, 'div', false).div;\n      }; // Find `this` % `num`\n\n\n      BN.prototype.mod = function mod(num) {\n        return this.divmod(num, 'mod', false).mod;\n      };\n\n      BN.prototype.umod = function umod(num) {\n        return this.divmod(num, 'mod', true).mod;\n      }; // Find Round(`this` / `num`)\n\n\n      BN.prototype.divRound = function divRound(num) {\n        var dm = this.divmod(num); // Fast case - exact division\n\n        if (dm.mod.isZero()) return dm.div;\n        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n        var half = num.ushrn(1);\n        var r2 = num.andln(1);\n        var cmp = mod.cmp(half); // Round down\n\n        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n      };\n\n      BN.prototype.modn = function modn(num) {\n        assert(num <= 0x3ffffff);\n        var p = (1 << 26) % num;\n        var acc = 0;\n\n        for (var i = this.length - 1; i >= 0; i--) {\n          acc = (p * acc + (this.words[i] | 0)) % num;\n        }\n\n        return acc;\n      }; // In-place division by number\n\n\n      BN.prototype.idivn = function idivn(num) {\n        assert(num <= 0x3ffffff);\n        var carry = 0;\n\n        for (var i = this.length - 1; i >= 0; i--) {\n          var w = (this.words[i] | 0) + carry * 0x4000000;\n          this.words[i] = w / num | 0;\n          carry = w % num;\n        }\n\n        return this.strip();\n      };\n\n      BN.prototype.divn = function divn(num) {\n        return this.clone().idivn(num);\n      };\n\n      BN.prototype.egcd = function egcd(p) {\n        assert(p.negative === 0);\n        assert(!p.isZero());\n        var x = this;\n        var y = p.clone();\n\n        if (x.negative !== 0) {\n          x = x.umod(p);\n        } else {\n          x = x.clone();\n        } // A * x + B * y = x\n\n\n        var A = new BN(1);\n        var B = new BN(0); // C * x + D * y = y\n\n        var C = new BN(0);\n        var D = new BN(1);\n        var g = 0;\n\n        while (x.isEven() && y.isEven()) {\n          x.iushrn(1);\n          y.iushrn(1);\n          ++g;\n        }\n\n        var yp = y.clone();\n        var xp = x.clone();\n\n        while (!x.isZero()) {\n          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n          if (i > 0) {\n            x.iushrn(i);\n\n            while (i-- > 0) {\n              if (A.isOdd() || B.isOdd()) {\n                A.iadd(yp);\n                B.isub(xp);\n              }\n\n              A.iushrn(1);\n              B.iushrn(1);\n            }\n          }\n\n          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n          if (j > 0) {\n            y.iushrn(j);\n\n            while (j-- > 0) {\n              if (C.isOdd() || D.isOdd()) {\n                C.iadd(yp);\n                D.isub(xp);\n              }\n\n              C.iushrn(1);\n              D.iushrn(1);\n            }\n          }\n\n          if (x.cmp(y) >= 0) {\n            x.isub(y);\n            A.isub(C);\n            B.isub(D);\n          } else {\n            y.isub(x);\n            C.isub(A);\n            D.isub(B);\n          }\n        }\n\n        return {\n          a: C,\n          b: D,\n          gcd: y.iushln(g)\n        };\n      }; // This is reduced incarnation of the binary EEA\n      // above, designated to invert members of the\n      // _prime_ fields F(p) at a maximal speed\n\n\n      BN.prototype._invmp = function _invmp(p) {\n        assert(p.negative === 0);\n        assert(!p.isZero());\n        var a = this;\n        var b = p.clone();\n\n        if (a.negative !== 0) {\n          a = a.umod(p);\n        } else {\n          a = a.clone();\n        }\n\n        var x1 = new BN(1);\n        var x2 = new BN(0);\n        var delta = b.clone();\n\n        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n          if (i > 0) {\n            a.iushrn(i);\n\n            while (i-- > 0) {\n              if (x1.isOdd()) {\n                x1.iadd(delta);\n              }\n\n              x1.iushrn(1);\n            }\n          }\n\n          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n          if (j > 0) {\n            b.iushrn(j);\n\n            while (j-- > 0) {\n              if (x2.isOdd()) {\n                x2.iadd(delta);\n              }\n\n              x2.iushrn(1);\n            }\n          }\n\n          if (a.cmp(b) >= 0) {\n            a.isub(b);\n            x1.isub(x2);\n          } else {\n            b.isub(a);\n            x2.isub(x1);\n          }\n        }\n\n        var res;\n\n        if (a.cmpn(1) === 0) {\n          res = x1;\n        } else {\n          res = x2;\n        }\n\n        if (res.cmpn(0) < 0) {\n          res.iadd(p);\n        }\n\n        return res;\n      };\n\n      BN.prototype.gcd = function gcd(num) {\n        if (this.isZero()) return num.abs();\n        if (num.isZero()) return this.abs();\n        var a = this.clone();\n        var b = num.clone();\n        a.negative = 0;\n        b.negative = 0; // Remove common factor of two\n\n        for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n          a.iushrn(1);\n          b.iushrn(1);\n        }\n\n        do {\n          while (a.isEven()) {\n            a.iushrn(1);\n          }\n\n          while (b.isEven()) {\n            b.iushrn(1);\n          }\n\n          var r = a.cmp(b);\n\n          if (r < 0) {\n            // Swap `a` and `b` to make `a` always bigger than `b`\n            var t = a;\n            a = b;\n            b = t;\n          } else if (r === 0 || b.cmpn(1) === 0) {\n            break;\n          }\n\n          a.isub(b);\n        } while (true);\n\n        return b.iushln(shift);\n      }; // Invert number in the field F(num)\n\n\n      BN.prototype.invm = function invm(num) {\n        return this.egcd(num).a.umod(num);\n      };\n\n      BN.prototype.isEven = function isEven() {\n        return (this.words[0] & 1) === 0;\n      };\n\n      BN.prototype.isOdd = function isOdd() {\n        return (this.words[0] & 1) === 1;\n      }; // And first word and num\n\n\n      BN.prototype.andln = function andln(num) {\n        return this.words[0] & num;\n      }; // Increment at the bit position in-line\n\n\n      BN.prototype.bincn = function bincn(bit) {\n        assert(typeof bit === 'number');\n        var r = bit % 26;\n        var s = (bit - r) / 26;\n        var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n        if (this.length <= s) {\n          this._expand(s + 1);\n\n          this.words[s] |= q;\n          return this;\n        } // Add bit and propagate, if needed\n\n\n        var carry = q;\n\n        for (var i = s; carry !== 0 && i < this.length; i++) {\n          var w = this.words[i] | 0;\n          w += carry;\n          carry = w >>> 26;\n          w &= 0x3ffffff;\n          this.words[i] = w;\n        }\n\n        if (carry !== 0) {\n          this.words[i] = carry;\n          this.length++;\n        }\n\n        return this;\n      };\n\n      BN.prototype.isZero = function isZero() {\n        return this.length === 1 && this.words[0] === 0;\n      };\n\n      BN.prototype.cmpn = function cmpn(num) {\n        var negative = num < 0;\n        if (this.negative !== 0 && !negative) return -1;\n        if (this.negative === 0 && negative) return 1;\n        this.strip();\n        var res;\n\n        if (this.length > 1) {\n          res = 1;\n        } else {\n          if (negative) {\n            num = -num;\n          }\n\n          assert(num <= 0x3ffffff, 'Number is too big');\n          var w = this.words[0] | 0;\n          res = w === num ? 0 : w < num ? -1 : 1;\n        }\n\n        if (this.negative !== 0) return -res | 0;\n        return res;\n      }; // Compare two numbers and return:\n      // 1 - if `this` > `num`\n      // 0 - if `this` == `num`\n      // -1 - if `this` < `num`\n\n\n      BN.prototype.cmp = function cmp(num) {\n        if (this.negative !== 0 && num.negative === 0) return -1;\n        if (this.negative === 0 && num.negative !== 0) return 1;\n        var res = this.ucmp(num);\n        if (this.negative !== 0) return -res | 0;\n        return res;\n      }; // Unsigned comparison\n\n\n      BN.prototype.ucmp = function ucmp(num) {\n        // At this point both numbers have the same sign\n        if (this.length > num.length) return 1;\n        if (this.length < num.length) return -1;\n        var res = 0;\n\n        for (var i = this.length - 1; i >= 0; i--) {\n          var a = this.words[i] | 0;\n          var b = num.words[i] | 0;\n          if (a === b) continue;\n\n          if (a < b) {\n            res = -1;\n          } else if (a > b) {\n            res = 1;\n          }\n\n          break;\n        }\n\n        return res;\n      };\n\n      BN.prototype.gtn = function gtn(num) {\n        return this.cmpn(num) === 1;\n      };\n\n      BN.prototype.gt = function gt(num) {\n        return this.cmp(num) === 1;\n      };\n\n      BN.prototype.gten = function gten(num) {\n        return this.cmpn(num) >= 0;\n      };\n\n      BN.prototype.gte = function gte(num) {\n        return this.cmp(num) >= 0;\n      };\n\n      BN.prototype.ltn = function ltn(num) {\n        return this.cmpn(num) === -1;\n      };\n\n      BN.prototype.lt = function lt(num) {\n        return this.cmp(num) === -1;\n      };\n\n      BN.prototype.lten = function lten(num) {\n        return this.cmpn(num) <= 0;\n      };\n\n      BN.prototype.lte = function lte(num) {\n        return this.cmp(num) <= 0;\n      };\n\n      BN.prototype.eqn = function eqn(num) {\n        return this.cmpn(num) === 0;\n      };\n\n      BN.prototype.eq = function eq(num) {\n        return this.cmp(num) === 0;\n      }; //\n      // A reduce context, could be using montgomery or something better, depending\n      // on the `m` itself.\n      //\n\n\n      BN.red = function red(num) {\n        return new Red(num);\n      };\n\n      BN.prototype.toRed = function toRed(ctx) {\n        assert(!this.red, 'Already a number in reduction context');\n        assert(this.negative === 0, 'red works only with positives');\n        return ctx.convertTo(this)._forceRed(ctx);\n      };\n\n      BN.prototype.fromRed = function fromRed() {\n        assert(this.red, 'fromRed works only with numbers in reduction context');\n        return this.red.convertFrom(this);\n      };\n\n      BN.prototype._forceRed = function _forceRed(ctx) {\n        this.red = ctx;\n        return this;\n      };\n\n      BN.prototype.forceRed = function forceRed(ctx) {\n        assert(!this.red, 'Already a number in reduction context');\n        return this._forceRed(ctx);\n      };\n\n      BN.prototype.redAdd = function redAdd(num) {\n        assert(this.red, 'redAdd works only with red numbers');\n        return this.red.add(this, num);\n      };\n\n      BN.prototype.redIAdd = function redIAdd(num) {\n        assert(this.red, 'redIAdd works only with red numbers');\n        return this.red.iadd(this, num);\n      };\n\n      BN.prototype.redSub = function redSub(num) {\n        assert(this.red, 'redSub works only with red numbers');\n        return this.red.sub(this, num);\n      };\n\n      BN.prototype.redISub = function redISub(num) {\n        assert(this.red, 'redISub works only with red numbers');\n        return this.red.isub(this, num);\n      };\n\n      BN.prototype.redShl = function redShl(num) {\n        assert(this.red, 'redShl works only with red numbers');\n        return this.red.shl(this, num);\n      };\n\n      BN.prototype.redMul = function redMul(num) {\n        assert(this.red, 'redMul works only with red numbers');\n\n        this.red._verify2(this, num);\n\n        return this.red.mul(this, num);\n      };\n\n      BN.prototype.redIMul = function redIMul(num) {\n        assert(this.red, 'redMul works only with red numbers');\n\n        this.red._verify2(this, num);\n\n        return this.red.imul(this, num);\n      };\n\n      BN.prototype.redSqr = function redSqr() {\n        assert(this.red, 'redSqr works only with red numbers');\n\n        this.red._verify1(this);\n\n        return this.red.sqr(this);\n      };\n\n      BN.prototype.redISqr = function redISqr() {\n        assert(this.red, 'redISqr works only with red numbers');\n\n        this.red._verify1(this);\n\n        return this.red.isqr(this);\n      }; // Square root over p\n\n\n      BN.prototype.redSqrt = function redSqrt() {\n        assert(this.red, 'redSqrt works only with red numbers');\n\n        this.red._verify1(this);\n\n        return this.red.sqrt(this);\n      };\n\n      BN.prototype.redInvm = function redInvm() {\n        assert(this.red, 'redInvm works only with red numbers');\n\n        this.red._verify1(this);\n\n        return this.red.invm(this);\n      }; // Return negative clone of `this` % `red modulo`\n\n\n      BN.prototype.redNeg = function redNeg() {\n        assert(this.red, 'redNeg works only with red numbers');\n\n        this.red._verify1(this);\n\n        return this.red.neg(this);\n      };\n\n      BN.prototype.redPow = function redPow(num) {\n        assert(this.red && !num.red, 'redPow(normalNum)');\n\n        this.red._verify1(this);\n\n        return this.red.pow(this, num);\n      }; // Prime numbers with efficient reduction\n\n\n      var primes = {\n        k256: null,\n        p224: null,\n        p192: null,\n        p25519: null\n      }; // Pseudo-Mersenne prime\n\n      function MPrime(name, p) {\n        // P = 2 ^ N - K\n        this.name = name;\n        this.p = new BN(p, 16);\n        this.n = this.p.bitLength();\n        this.k = new BN(1).iushln(this.n).isub(this.p);\n        this.tmp = this._tmp();\n      }\n\n      MPrime.prototype._tmp = function _tmp() {\n        var tmp = new BN(null);\n        tmp.words = new Array(Math.ceil(this.n / 13));\n        return tmp;\n      };\n\n      MPrime.prototype.ireduce = function ireduce(num) {\n        // Assumes that `num` is less than `P^2`\n        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n        var r = num;\n        var rlen;\n\n        do {\n          this.split(r, this.tmp);\n          r = this.imulK(r);\n          r = r.iadd(this.tmp);\n          rlen = r.bitLength();\n        } while (rlen > this.n);\n\n        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n        if (cmp === 0) {\n          r.words[0] = 0;\n          r.length = 1;\n        } else if (cmp > 0) {\n          r.isub(this.p);\n        } else {\n          r.strip();\n        }\n\n        return r;\n      };\n\n      MPrime.prototype.split = function split(input, out) {\n        input.iushrn(this.n, 0, out);\n      };\n\n      MPrime.prototype.imulK = function imulK(num) {\n        return num.imul(this.k);\n      };\n\n      function K256() {\n        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n      }\n\n      inherits(K256, MPrime);\n\n      K256.prototype.split = function split(input, output) {\n        // 256 = 9 * 26 + 22\n        var mask = 0x3fffff;\n        var outLen = Math.min(input.length, 9);\n\n        for (var i = 0; i < outLen; i++) {\n          output.words[i] = input.words[i];\n        }\n\n        output.length = outLen;\n\n        if (input.length <= 9) {\n          input.words[0] = 0;\n          input.length = 1;\n          return;\n        } // Shift by 9 limbs\n\n\n        var prev = input.words[9];\n        output.words[output.length++] = prev & mask;\n\n        for (i = 10; i < input.length; i++) {\n          var next = input.words[i] | 0;\n          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n          prev = next;\n        }\n\n        prev >>>= 22;\n        input.words[i - 10] = prev;\n\n        if (prev === 0 && input.length > 10) {\n          input.length -= 10;\n        } else {\n          input.length -= 9;\n        }\n      };\n\n      K256.prototype.imulK = function imulK(num) {\n        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n        num.words[num.length] = 0;\n        num.words[num.length + 1] = 0;\n        num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n        var lo = 0;\n\n        for (var i = 0; i < num.length; i++) {\n          var w = num.words[i] | 0;\n          lo += w * 0x3d1;\n          num.words[i] = lo & 0x3ffffff;\n          lo = w * 0x40 + (lo / 0x4000000 | 0);\n        } // Fast length reduction\n\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n\n          if (num.words[num.length - 1] === 0) {\n            num.length--;\n          }\n        }\n\n        return num;\n      };\n\n      function P224() {\n        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n      }\n\n      inherits(P224, MPrime);\n\n      function P192() {\n        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n      }\n\n      inherits(P192, MPrime);\n\n      function P25519() {\n        // 2 ^ 255 - 19\n        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n      }\n\n      inherits(P25519, MPrime);\n\n      P25519.prototype.imulK = function imulK(num) {\n        // K = 0x13\n        var carry = 0;\n\n        for (var i = 0; i < num.length; i++) {\n          var hi = (num.words[i] | 0) * 0x13 + carry;\n          var lo = hi & 0x3ffffff;\n          hi >>>= 26;\n          num.words[i] = lo;\n          carry = hi;\n        }\n\n        if (carry !== 0) {\n          num.words[num.length++] = carry;\n        }\n\n        return num;\n      }; // Exported mostly for testing purposes, use plain name instead\n\n\n      BN._prime = function prime(name) {\n        // Cached version of prime\n        if (primes[name]) return primes[name];\n        var prime;\n\n        if (name === 'k256') {\n          prime = new K256();\n        } else if (name === 'p224') {\n          prime = new P224();\n        } else if (name === 'p192') {\n          prime = new P192();\n        } else if (name === 'p25519') {\n          prime = new P25519();\n        } else {\n          throw new Error('Unknown prime ' + name);\n        }\n\n        primes[name] = prime;\n        return prime;\n      }; //\n      // Base reduction engine\n      //\n\n\n      function Red(m) {\n        if (typeof m === 'string') {\n          var prime = BN._prime(m);\n\n          this.m = prime.p;\n          this.prime = prime;\n        } else {\n          assert(m.gtn(1), 'modulus must be greater than 1');\n          this.m = m;\n          this.prime = null;\n        }\n      }\n\n      Red.prototype._verify1 = function _verify1(a) {\n        assert(a.negative === 0, 'red works only with positives');\n        assert(a.red, 'red works only with red numbers');\n      };\n\n      Red.prototype._verify2 = function _verify2(a, b) {\n        assert((a.negative | b.negative) === 0, 'red works only with positives');\n        assert(a.red && a.red === b.red, 'red works only with red numbers');\n      };\n\n      Red.prototype.imod = function imod(a) {\n        if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n        return a.umod(this.m)._forceRed(this);\n      };\n\n      Red.prototype.neg = function neg(a) {\n        if (a.isZero()) {\n          return a.clone();\n        }\n\n        return this.m.sub(a)._forceRed(this);\n      };\n\n      Red.prototype.add = function add(a, b) {\n        this._verify2(a, b);\n\n        var res = a.add(b);\n\n        if (res.cmp(this.m) >= 0) {\n          res.isub(this.m);\n        }\n\n        return res._forceRed(this);\n      };\n\n      Red.prototype.iadd = function iadd(a, b) {\n        this._verify2(a, b);\n\n        var res = a.iadd(b);\n\n        if (res.cmp(this.m) >= 0) {\n          res.isub(this.m);\n        }\n\n        return res;\n      };\n\n      Red.prototype.sub = function sub(a, b) {\n        this._verify2(a, b);\n\n        var res = a.sub(b);\n\n        if (res.cmpn(0) < 0) {\n          res.iadd(this.m);\n        }\n\n        return res._forceRed(this);\n      };\n\n      Red.prototype.isub = function isub(a, b) {\n        this._verify2(a, b);\n\n        var res = a.isub(b);\n\n        if (res.cmpn(0) < 0) {\n          res.iadd(this.m);\n        }\n\n        return res;\n      };\n\n      Red.prototype.shl = function shl(a, num) {\n        this._verify1(a);\n\n        return this.imod(a.ushln(num));\n      };\n\n      Red.prototype.imul = function imul(a, b) {\n        this._verify2(a, b);\n\n        return this.imod(a.imul(b));\n      };\n\n      Red.prototype.mul = function mul(a, b) {\n        this._verify2(a, b);\n\n        return this.imod(a.mul(b));\n      };\n\n      Red.prototype.isqr = function isqr(a) {\n        return this.imul(a, a.clone());\n      };\n\n      Red.prototype.sqr = function sqr(a) {\n        return this.mul(a, a);\n      };\n\n      Red.prototype.sqrt = function sqrt(a) {\n        if (a.isZero()) return a.clone();\n        var mod3 = this.m.andln(3);\n        assert(mod3 % 2 === 1); // Fast case\n\n        if (mod3 === 3) {\n          var pow = this.m.add(new BN(1)).iushrn(2);\n          return this.pow(a, pow);\n        } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n        //\n        // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n        var q = this.m.subn(1);\n        var s = 0;\n\n        while (!q.isZero() && q.andln(1) === 0) {\n          s++;\n          q.iushrn(1);\n        }\n\n        assert(!q.isZero());\n        var one = new BN(1).toRed(this);\n        var nOne = one.redNeg(); // Find quadratic non-residue\n        // NOTE: Max is such because of generalized Riemann hypothesis.\n\n        var lpow = this.m.subn(1).iushrn(1);\n        var z = this.m.bitLength();\n        z = new BN(2 * z * z).toRed(this);\n\n        while (this.pow(z, lpow).cmp(nOne) !== 0) {\n          z.redIAdd(nOne);\n        }\n\n        var c = this.pow(z, q);\n        var r = this.pow(a, q.addn(1).iushrn(1));\n        var t = this.pow(a, q);\n        var m = s;\n\n        while (t.cmp(one) !== 0) {\n          var tmp = t;\n\n          for (var i = 0; tmp.cmp(one) !== 0; i++) {\n            tmp = tmp.redSqr();\n          }\n\n          assert(i < m);\n          var b = this.pow(c, new BN(1).iushln(m - i - 1));\n          r = r.redMul(b);\n          c = b.redSqr();\n          t = t.redMul(c);\n          m = i;\n        }\n\n        return r;\n      };\n\n      Red.prototype.invm = function invm(a) {\n        var inv = a._invmp(this.m);\n\n        if (inv.negative !== 0) {\n          inv.negative = 0;\n          return this.imod(inv).redNeg();\n        } else {\n          return this.imod(inv);\n        }\n      };\n\n      Red.prototype.pow = function pow(a, num) {\n        if (num.isZero()) return new BN(1).toRed(this);\n        if (num.cmpn(1) === 0) return a.clone();\n        var windowSize = 4;\n        var wnd = new Array(1 << windowSize);\n        wnd[0] = new BN(1).toRed(this);\n        wnd[1] = a;\n\n        for (var i = 2; i < wnd.length; i++) {\n          wnd[i] = this.mul(wnd[i - 1], a);\n        }\n\n        var res = wnd[0];\n        var current = 0;\n        var currentLen = 0;\n        var start = num.bitLength() % 26;\n\n        if (start === 0) {\n          start = 26;\n        }\n\n        for (i = num.length - 1; i >= 0; i--) {\n          var word = num.words[i];\n\n          for (var j = start - 1; j >= 0; j--) {\n            var bit = word >> j & 1;\n\n            if (res !== wnd[0]) {\n              res = this.sqr(res);\n            }\n\n            if (bit === 0 && current === 0) {\n              currentLen = 0;\n              continue;\n            }\n\n            current <<= 1;\n            current |= bit;\n            currentLen++;\n            if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n            res = this.mul(res, wnd[current]);\n            currentLen = 0;\n            current = 0;\n          }\n\n          start = 26;\n        }\n\n        return res;\n      };\n\n      Red.prototype.convertTo = function convertTo(num) {\n        var r = num.umod(this.m);\n        return r === num ? r.clone() : r;\n      };\n\n      Red.prototype.convertFrom = function convertFrom(num) {\n        var res = num.clone();\n        res.red = null;\n        return res;\n      }; //\n      // Montgomery method engine\n      //\n\n\n      BN.mont = function mont(num) {\n        return new Mont(num);\n      };\n\n      function Mont(m) {\n        Red.call(this, m);\n        this.shift = this.m.bitLength();\n\n        if (this.shift % 26 !== 0) {\n          this.shift += 26 - this.shift % 26;\n        }\n\n        this.r = new BN(1).iushln(this.shift);\n        this.r2 = this.imod(this.r.sqr());\n        this.rinv = this.r._invmp(this.m);\n        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n        this.minv = this.minv.umod(this.r);\n        this.minv = this.r.sub(this.minv);\n      }\n\n      inherits(Mont, Red);\n\n      Mont.prototype.convertTo = function convertTo(num) {\n        return this.imod(num.ushln(this.shift));\n      };\n\n      Mont.prototype.convertFrom = function convertFrom(num) {\n        var r = this.imod(num.mul(this.rinv));\n        r.red = null;\n        return r;\n      };\n\n      Mont.prototype.imul = function imul(a, b) {\n        if (a.isZero() || b.isZero()) {\n          a.words[0] = 0;\n          a.length = 1;\n          return a;\n        }\n\n        var t = a.imul(b);\n        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n        var u = t.isub(c).iushrn(this.shift);\n        var res = u;\n\n        if (u.cmp(this.m) >= 0) {\n          res = u.isub(this.m);\n        } else if (u.cmpn(0) < 0) {\n          res = u.iadd(this.m);\n        }\n\n        return res._forceRed(this);\n      };\n\n      Mont.prototype.mul = function mul(a, b) {\n        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n        var t = a.mul(b);\n        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n        var u = t.isub(c).iushrn(this.shift);\n        var res = u;\n\n        if (u.cmp(this.m) >= 0) {\n          res = u.isub(this.m);\n        } else if (u.cmpn(0) < 0) {\n          res = u.iadd(this.m);\n        }\n\n        return res._forceRed(this);\n      };\n\n      Mont.prototype.invm = function invm(a) {\n        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n        var res = this.imod(a._invmp(this.m).mul(this.r2));\n        return res._forceRed(this);\n      };\n    })(module, commonjsGlobal);\n  }); //  This file is part of Zilliqa-Javascript-Library.\n\n  var Wallet = function (_super) {\n    __extends(Wallet, _super);\n    /**\r\n     * constructor\r\n     *\r\n     * Takes an array of Account objects and instantiates a Wallet instance.\r\n     *\r\n     * @param {Account[]} accounts\r\n     */\n\n\n    function Wallet(provider, accounts) {\n      if (accounts === void 0) {\n        accounts = [];\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.accounts = {};\n\n      if (accounts.length) {\n        _this.accounts = accounts.reduce(function (acc, account) {\n          var _a;\n\n          return __assign(__assign({}, acc), (_a = {}, _a[account.address] = account, _a));\n        }, {});\n      }\n\n      _this.provider = provider;\n      _this.defaultAccount = accounts[0];\n      return _this;\n    }\n    /**\r\n     * create\r\n     *\r\n     * Creates a new keypair with a randomly-generated private key. The new\r\n     * account is accessible by address.\r\n     *\r\n     * @returns {string} - address of the new account\r\n     */\n\n\n    Wallet.prototype.create = function () {\n      var _a;\n\n      var privateKey = zcrypto.schnorr.generatePrivateKey();\n      var newAccount = new Account(privateKey);\n      this.accounts = __assign(__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n      if (!this.defaultAccount) {\n        this.defaultAccount = newAccount;\n      }\n\n      return newAccount.address;\n    };\n    /**\r\n     * addByPrivateKey\r\n     *\r\n     * Adds an account to the wallet by private key.\r\n     *\r\n     * @param {string} privateKey - hex-encoded private key\r\n     * @returns {string} - the corresponing address, computer from the private\r\n     * key.\r\n     */\n\n\n    Wallet.prototype.addByPrivateKey = function (privateKey) {\n      var _a;\n\n      var newAccount = new Account(privateKey);\n      this.accounts = __assign(__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n      if (!this.defaultAccount) {\n        this.defaultAccount = newAccount;\n      }\n\n      return newAccount.address;\n    };\n    /**\r\n     * addByKeystore\r\n     *\r\n     * Adds an account by keystore. This method is asynchronous and returns\r\n     * a Promise<string>, in order not to block on the underlying decryption\r\n     * operation.\r\n     *\r\n     * @param {string} keystore\r\n     * @param {string} passphrase\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Wallet.prototype.addByKeystore = function (keystore, passphrase) {\n      return __awaiter(this, void 0, void 0, function () {\n        var newAccount;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Account.fromFile(keystore, passphrase)];\n\n            case 1:\n              newAccount = _b.sent();\n              this.accounts = __assign(__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n              if (!this.defaultAccount) {\n                this.defaultAccount = newAccount;\n              }\n\n              return [2\n              /*return*/\n              , newAccount.address];\n          }\n        });\n      });\n    };\n    /**\r\n     * addByMnemonic\r\n     *\r\n     * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\r\n     *\r\n     * @param {string} phrase - 12-word mnemonic phrase\r\n     * @param {number} index=0 - the number of the child key to add\r\n     * @returns {string} - the corresponding address\r\n     */\n\n\n    Wallet.prototype.addByMnemonic = function (phrase, index) {\n      if (index === void 0) {\n        index = 0;\n      }\n\n      if (!this.isValidMnemonic(phrase)) {\n        throw new Error(\"Invalid mnemonic phrase: \" + phrase);\n      }\n\n      var seed = bip39.mnemonicToSeed(phrase);\n      var hdKey = hdkey.fromMasterSeed(seed);\n      var childKey = hdKey.derive(\"m/44'/313'/0'/0/\" + index);\n      var privateKey = childKey.privateKey.toString('hex');\n      return this.addByPrivateKey(privateKey);\n    };\n    /**\r\n     * export\r\n     *\r\n     * Exports the specified account as a keystore file.\r\n     *\r\n     * @param {string} address\r\n     * @param {string} passphrase\r\n     * @param {KDF} kdf='scrypt'\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Wallet.prototype.export = function (address, passphrase, kdf) {\n      if (kdf === void 0) {\n        kdf = 'scrypt';\n      }\n\n      if (!this.accounts[address]) {\n        throw new Error(\"No account with address \" + address + \" exists\");\n      }\n\n      return this.accounts[address].toFile(passphrase, kdf);\n    };\n    /**\r\n     * remove\r\n     *\r\n     * Removes an account from the wallet and returns boolean to indicate\r\n     * failure or success.\r\n     *\r\n     * @param {string} address\r\n     * @returns {boolean}\r\n     */\n\n\n    Wallet.prototype.remove = function (address) {\n      if (this.accounts[address]) {\n        var _a = this.accounts,\n            _b = address,\n            toRemove = _a[_b],\n            rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n\n        this.accounts = rest;\n        return true;\n      }\n\n      return false;\n    };\n    /**\r\n     * setDefault\r\n     *\r\n     * Sets the default account of the wallet.\r\n     *\r\n     * @param {string} address\r\n     */\n\n\n    Wallet.prototype.setDefault = function (address) {\n      this.defaultAccount = this.accounts[address];\n    };\n    /**\r\n     * sign\r\n     *\r\n     * signs an unsigned transaction with the default account.\r\n     *\r\n     * @param {Transaction} tx\r\n     * @param {string} account\r\n     * @returns {Transaction}\r\n     */\n\n\n    Wallet.prototype.sign = function (tx) {\n      if (tx.txParams && tx.txParams.pubKey) {\n        // attempt to find the address\n        var senderAddress = zcrypto.getAddressFromPublicKey(tx.txParams.pubKey);\n\n        if (!this.accounts[senderAddress]) {\n          throw new Error(\"Could not sign the transaction with \" + senderAddress + \" as it does not exist\");\n        }\n\n        return this.signWith(tx, senderAddress);\n      }\n\n      if (!this.defaultAccount) {\n        throw new Error('This wallet has no default account.');\n      }\n\n      return this.signWith(tx, this.defaultAccount.address);\n    };\n    /**\r\n     * signWith\r\n     *\r\n     * @param {Transaction} tx\r\n     * @param {string} account\r\n     * @returns {Transaction}\r\n     */\n\n\n    Wallet.prototype.signWith = function (tx, account) {\n      return __awaiter(this, void 0, void 0, function () {\n        var signer, balance, gasPrice, gasLimit, debt, bal, withNonce_1, withPublicKey;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.accounts[account]) {\n                throw new Error('The selected account does not exist on this Wallet instance.');\n              }\n\n              signer = this.accounts[account];\n              return [4\n              /*yield*/\n              , this.provider.send('GetBalance', signer.address.replace('0x', '').toLowerCase())];\n\n            case 1:\n              balance = _a.sent();\n\n              if (balance.result === undefined) {\n                throw new Error('Could not get balance');\n              }\n\n              gasPrice = tx.txParams.gasPrice;\n              gasLimit = new bn(tx.txParams.gasLimit.toString());\n              debt = gasPrice.mul(gasLimit).add(tx.txParams.amount);\n              bal = new bn(balance.result.balance);\n\n              if (debt.gt(bal)) {\n                throw new Error('You do not have enough funds, need ' + debt.toString() + ' but only have ' + bal.toString());\n              }\n\n              try {\n                if (!tx.txParams.nonce) {\n                  if (typeof balance.result.nonce !== 'number') {\n                    throw new Error('Could not get nonce');\n                  }\n\n                  withNonce_1 = tx.map(function (txObj) {\n                    return __assign(__assign({}, txObj), {\n                      nonce: txObj.nonce || balance.result.nonce + 1,\n                      pubKey: signer.publicKey\n                    });\n                  });\n                  return [2\n                  /*return*/\n                  , withNonce_1.map(function (txObj) {\n                    // @ts-ignore\n                    return __assign(__assign({}, txObj), {\n                      signature: signer.signTransaction(withNonce_1.bytes)\n                    });\n                  })];\n                }\n\n                withPublicKey = tx.map(function (txObj) {\n                  return __assign(__assign({}, txObj), {\n                    pubKey: signer.publicKey\n                  });\n                });\n                return [2\n                /*return*/\n                , withPublicKey.map(function (txObj) {\n                  return __assign(__assign({}, txObj), {\n                    signature: signer.signTransaction(tx.bytes)\n                  });\n                })];\n              } catch (err) {\n                throw err;\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    Wallet.prototype.isValidMnemonic = function (phrase) {\n      if (phrase.trim().split(/\\s+/g).length < 12) {\n        return false;\n      }\n\n      return bip39.validateMnemonic(phrase);\n    };\n\n    return Wallet;\n  }(core.Signer); //  This file is part of Zilliqa-Javascript-Library.\n\n  /**\r\n   * Transaction\r\n   *\r\n   * Transaction is a functor. Its purpose is to encode the possible states a\r\n   * Transaction can be in:  Confirmed, Rejected, Pending, or Initialised (i.e., not broadcasted).\r\n   */\n\n\n  var Transaction = function () {\n    function Transaction(params, provider, status, toDS) {\n      if (status === void 0) {\n        status = 0\n        /* Initialised */\n        ;\n      }\n\n      if (toDS === void 0) {\n        toDS = false;\n      }\n\n      this.code = '';\n      this.data = ''; // private members\n\n      this.version = params.version;\n      this.toAddr = zcrypto.normaliseAddress(params.toAddr);\n      this.nonce = params.nonce;\n      this.pubKey = params.pubKey;\n      this.amount = params.amount;\n      this.code = params.code || '';\n      this.data = params.data || '';\n      this.signature = params.signature;\n      this.gasPrice = params.gasPrice;\n      this.gasLimit = params.gasLimit;\n      this.receipt = params.receipt; // public members\n\n      this.provider = provider;\n      this.status = status;\n      this.toDS = toDS;\n      this.blockConfirmation = 0;\n      this.eventEmitter = new core.EventEmitter();\n    }\n    /**\r\n     * confirm\r\n     *\r\n     * constructs an already-confirmed transaction.\r\n     *\r\n     * @static\r\n     * @param {BaseTx} params\r\n     */\n\n\n    Transaction.confirm = function (params, provider) {\n      return new Transaction(params, provider, 2\n      /* Confirmed */\n      );\n    };\n    /**\r\n     * reject\r\n     *\r\n     * constructs an already-rejected transaction.\r\n     *\r\n     * @static\r\n     * @param {BaseTx} params\r\n     */\n\n\n    Transaction.reject = function (params, provider) {\n      return new Transaction(params, provider, 3\n      /* Rejected */\n      );\n    };\n\n    Object.defineProperty(Transaction.prototype, \"bytes\", {\n      get: function () {\n        return encodeTransactionProto(this.txParams);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"senderAddress\", {\n      get: function () {\n        if (!this.pubKey) {\n          return '0'.repeat(40);\n        }\n\n        return zcrypto.getAddressFromPublicKey(this.pubKey);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"txParams\", {\n      get: function () {\n        return {\n          version: this.version,\n          toAddr: zcrypto.normaliseAddress(this.toAddr),\n          nonce: this.nonce,\n          pubKey: this.pubKey,\n          amount: this.amount,\n          gasPrice: this.gasPrice,\n          gasLimit: this.gasLimit,\n          code: this.code,\n          data: this.data,\n          signature: this.signature,\n          receipt: this.receipt\n        };\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"payload\", {\n      get: function () {\n        return {\n          version: 0,\n          toAddr: this.toAddr,\n          nonce: this.nonce,\n          pubKey: this.pubKey,\n          amount: this.amount.toString(),\n          gasPrice: this.gasPrice.toString(),\n          gasLimit: this.gasLimit.toString(),\n          code: this.code,\n          data: this.data,\n          signature: this.signature,\n          receipt: this.receipt\n        };\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\r\n     * isPending\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n    Transaction.prototype.isPending = function () {\n      return this.status === 1\n      /* Pending */\n      ;\n    };\n    /**\r\n     * isInitialised\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isInitialised = function () {\n      return this.status === 0\n      /* Initialised */\n      ;\n    };\n\n    Transaction.prototype.getReceipt = function () {\n      return this.receipt;\n    };\n    /**\r\n     * isConfirmed\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isConfirmed = function () {\n      return this.status === 2\n      /* Confirmed */\n      ;\n    };\n    /**\r\n     * isRejected\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isRejected = function () {\n      return this.status === 3\n      /* Rejected */\n      ;\n    };\n    /**\r\n     * setProvider\r\n     *\r\n     * Sets the provider on this instance.\r\n     *\r\n     * @param {Provider} provider\r\n     */\n\n\n    Transaction.prototype.setProvider = function (provider) {\n      this.provider = provider;\n    };\n    /**\r\n     * setStatus\r\n     *\r\n     * Escape hatch to imperatively set the state of the transaction.\r\n     *\r\n     * @param {TxStatus} status\r\n     * @returns {undefined}\r\n     */\n\n\n    Transaction.prototype.setStatus = function (status) {\n      this.status = status;\n      return this;\n    };\n\n    Transaction.prototype.observed = function () {\n      return this.eventEmitter;\n    };\n    /**\r\n     * blockConfirm\r\n     *\r\n     * Use `RPCMethod.GetLatestBlock` to get latest blockNumber\r\n     * Use interval to get the latestBlockNumber\r\n     * After BlockNumber change, then we use `RPCMethod.GetTransaction` to get the receipt\r\n     *\r\n     * @param {string} txHash\r\n     * @param {number} maxblockCount\r\n     * @param {number} interval interval in milliseconds\r\n     * @returns {Promise<Transaction>}\r\n     */\n\n\n    Transaction.prototype.blockConfirm = function (txHash, maxblockCount, interval) {\n      if (maxblockCount === void 0) {\n        maxblockCount = 4;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var blockStart, blockChecked, attempt, blockLatest, blockNext, err_1, blockFailed, errorMessage;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.status = 1\n              /* Pending */\n              ;\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 1:\n              blockStart = _a.sent();\n              blockChecked = blockStart;\n              attempt = 0;\n              _a.label = 2;\n\n            case 2:\n              if (!(attempt < maxblockCount)) return [3\n              /*break*/\n              , 12];\n              _a.label = 3;\n\n            case 3:\n              _a.trys.push([3, 8,, 9]);\n\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 4:\n              blockLatest = _a.sent();\n              blockNext = blockChecked.add(new util.BN(attempt === 0 ? attempt : 1));\n              if (!blockLatest.gte(blockNext)) return [3\n              /*break*/\n              , 6];\n              blockChecked = blockLatest;\n              this.emit(\"track\"\n              /* Track */\n              , {\n                txHash: txHash,\n                attempt: attempt,\n                currentBlock: blockChecked.toString()\n              });\n              return [4\n              /*yield*/\n              , this.trackTx(txHash)];\n\n            case 5:\n              if (_a.sent()) {\n                this.blockConfirmation = blockLatest.sub(blockStart).toNumber();\n                return [2\n                /*return*/\n                , this];\n              }\n\n              return [3\n              /*break*/\n              , 7];\n\n            case 6:\n              attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n              _a.label = 7;\n\n            case 7:\n              return [3\n              /*break*/\n              , 9];\n\n            case 8:\n              err_1 = _a.sent();\n              this.status = 3\n              /* Rejected */\n              ;\n              throw err_1;\n\n            case 9:\n              if (!(attempt + 1 < maxblockCount)) return [3\n              /*break*/\n              , 11];\n              return [4\n              /*yield*/\n              , sleep(interval)];\n\n            case 10:\n              _a.sent();\n\n              _a.label = 11;\n\n            case 11:\n              attempt += 1;\n              return [3\n              /*break*/\n              , 2];\n\n            case 12:\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 13:\n              blockFailed = _a.sent();\n              this.blockConfirmation = blockFailed.sub(blockStart).toNumber();\n              this.status = 3\n              /* Rejected */\n              ;\n              errorMessage = \"The transaction is still not confirmed after \" + maxblockCount + \" blocks.\";\n              throw new Error(errorMessage);\n          }\n        });\n      });\n    };\n    /**\r\n     * confirmReceipt\r\n     *\r\n     * Similar to the Promise API. This sets the Transaction instance to a state\r\n     * of pending. Calling this function kicks off a passive loop that polls the\r\n     * lookup node for confirmation on the txHash.\r\n     *\r\n     * The polls are performed with a linear backoff:\r\n     *\r\n     * `const delay = interval * attempt`\r\n     *\r\n     * This is a low-level method that you should generally not have to use\r\n     * directly.\r\n     *\r\n     * @param {string} txHash\r\n     * @param {number} maxAttempts\r\n     * @param {number} initial interval in milliseconds\r\n     * @returns {Promise<Transaction>}\r\n     */\n\n\n    Transaction.prototype.confirm = function (txHash, maxAttempts, interval) {\n      if (maxAttempts === void 0) {\n        maxAttempts = core.GET_TX_ATTEMPTS;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var attempt, err_2, errorMessage;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.status = 1\n              /* Pending */\n              ;\n              attempt = 0;\n              _a.label = 1;\n\n            case 1:\n              if (!(attempt < maxAttempts)) return [3\n              /*break*/\n              , 8];\n              this.emit(\"track\"\n              /* Track */\n              , {\n                txHash: txHash,\n                attempt: attempt\n              });\n              _a.label = 2;\n\n            case 2:\n              _a.trys.push([2, 4,, 5]);\n\n              return [4\n              /*yield*/\n              , this.trackTx(txHash)];\n\n            case 3:\n              if (_a.sent()) {\n                return [2\n                /*return*/\n                , this];\n              }\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              err_2 = _a.sent();\n              this.status = 3\n              /* Rejected */\n              ;\n              throw err_2;\n\n            case 5:\n              if (!(attempt + 1 < maxAttempts)) return [3\n              /*break*/\n              , 7];\n              return [4\n              /*yield*/\n              , sleep(interval * attempt)];\n\n            case 6:\n              _a.sent();\n\n              _a.label = 7;\n\n            case 7:\n              attempt++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 8:\n              this.status = 3\n              /* Rejected */\n              ;\n              errorMessage = \"The transaction is still not confirmed after \" + maxAttempts + \" attempts.\";\n              throw new Error(errorMessage);\n          }\n        });\n      });\n    };\n    /**\r\n     * map\r\n     *\r\n     * maps over the transaction, allowing for manipulation.\r\n     *\r\n     * @param {(prev: TxParams) => TxParams} fn - mapper\r\n     * @returns {Transaction}\r\n     */\n\n\n    Transaction.prototype.map = function (fn) {\n      var newParams = fn(this.txParams);\n      this.setParams(newParams);\n      return this;\n    };\n\n    Transaction.prototype.setParams = function (params) {\n      this.version = params.version;\n      this.toAddr = zcrypto.normaliseAddress(params.toAddr);\n      this.nonce = params.nonce;\n      this.pubKey = params.pubKey;\n      this.amount = params.amount;\n      this.code = params.code || '';\n      this.data = params.data || '';\n      this.signature = params.signature;\n      this.gasPrice = params.gasPrice;\n      this.gasLimit = params.gasLimit;\n      this.receipt = params.receipt;\n    };\n\n    Transaction.prototype.trackTx = function (txHash) {\n      return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetTransaction\"\n              /* GetTransaction */\n              , txHash)];\n\n            case 1:\n              res = _a.sent();\n\n              if (res.error) {\n                this.emit(\"error\"\n                /* Error */\n                , res.error);\n                return [2\n                /*return*/\n                , false];\n              }\n\n              this.id = res.result.ID;\n              this.receipt = __assign(__assign({}, res.result.receipt), {\n                cumulative_gas: parseInt(res.result.receipt.cumulative_gas, 10)\n              });\n              this.emit(\"receipt\"\n              /* Receipt */\n              , this.receipt);\n              this.status = this.receipt && this.receipt.success ? 2\n              /* Confirmed */\n              : 3\n              /* Rejected */\n              ;\n              return [2\n              /*return*/\n              , true];\n          }\n        });\n      });\n    };\n\n    Transaction.prototype.getBlockNumber = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        var res, error_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetLatestTxBlock\"\n              /* GetLatestTxBlock */\n              )];\n\n            case 1:\n              res = _a.sent();\n\n              if (res.error === undefined && res.result.header.BlockNum) {\n                // if blockNumber is too high, we use BN to be safer\n                return [2\n                /*return*/\n                , new util.BN(res.result.header.BlockNum)];\n              } else {\n                throw new Error('Can not get latest BlockNumber');\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              error_1 = _a.sent();\n              throw error_1;\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    Transaction.prototype.emit = function (event, txEvent) {\n      this.eventEmitter.emit(event, __assign(__assign({}, txEvent), {\n        event: event\n      }));\n    };\n\n    return Transaction;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var TransactionFactory = function () {\n    function TransactionFactory(provider, signer) {\n      this.provider = provider;\n      this.provider.middleware.request.use(formatOutgoingTx, \"CreateTransaction\"\n      /* CreateTransaction */\n      );\n      this.signer = signer;\n    }\n\n    TransactionFactory.prototype.new = function (txParams, toDs) {\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      return new Transaction(txParams, this.provider, 0\n      /* Initialised */\n      , toDs);\n    };\n    /**\r\n     * This constructor could help you to check if there is a default account to be used, and further more, if it has\r\n     * sufficient fund to do the transfer.\r\n     * @param txParams\r\n     */\n\n\n    TransactionFactory.prototype.payment = function (txParams) {\n      return __awaiter(this, void 0, void 0, function () {\n        var defaultAccount, addr, response, fund;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              defaultAccount = this.signer.defaultAccount;\n              if (!(defaultAccount != null)) return [3\n              /*break*/\n              , 2];\n              addr = defaultAccount.address;\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetBalance\"\n              /* GetBalance */\n              , addr.replace('0x', '').toLowerCase())];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.error) {\n                throw response.error;\n              }\n\n              fund = new bn(response.result.balance);\n\n              if (txParams.amount.cmp(fund) === 1) {\n                throw new Error('No sufficient fund');\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              throw new Error('No default wallet');\n\n            case 3:\n              return [2\n              /*return*/\n              , this.new(txParams, true)];\n          }\n        });\n      });\n    };\n\n    return TransactionFactory;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  (function (TxStatus) {\n    TxStatus[TxStatus[\"Initialised\"] = 0] = \"Initialised\";\n    TxStatus[TxStatus[\"Pending\"] = 1] = \"Pending\";\n    TxStatus[TxStatus[\"Confirmed\"] = 2] = \"Confirmed\";\n    TxStatus[TxStatus[\"Rejected\"] = 3] = \"Rejected\";\n  })(exports.TxStatus || (exports.TxStatus = {}));\n\n  (function (TxEventName) {\n    TxEventName[\"Error\"] = \"error\";\n    TxEventName[\"Receipt\"] = \"receipt\";\n    TxEventName[\"Track\"] = \"track\";\n  })(exports.TxEventName || (exports.TxEventName = {})); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  exports.util = util$1;\n  exports.Account = Account;\n  exports.Wallet = Wallet;\n  exports.Transaction = Transaction;\n  exports.TransactionFactory = TransactionFactory;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../src/util.ts","../src/account.ts","../../../node_modules/rollup-plugin-node-resolve/src/empty.js","../../../node_modules/bn.js/lib/bn.js","../src/wallet.ts","../src/transaction.ts","../src/transactionFactory.ts","../src/types.ts","../src/index.ts"],"names":["bytes","ZilliqaMessage","validation","zcrypto.decryptPrivateKey","zcrypto.getPubKeyFromPrivateKey","zcrypto.getAddressFromPublicKey","zcrypto.toBech32Address","zcrypto.encryptPrivateKey","zcrypto.sign","zcrypto.normalizePrivateKey","this","Signer","zcrypto.schnorr","BN","getAddressFromPublicKey","normaliseAddress","EventEmitter","TxStatus","TxEventName"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ReqMiddlewareFn, RPCMethod } from '@zilliqa-js/core';\nimport { bytes, validation } from '@zilliqa-js/util';\nimport { ZilliqaMessage } from '@zilliqa-js/proto';\nimport { TxReceipt, TxParams } from './types';\n\nexport const encodeTransactionProto = (tx: TxParams): Buffer => {\n  const msg = {\n    version: tx.version,\n    nonce: tx.nonce || 0,\n    // core protocol Schnorr expects lowercase, non-prefixed address.\n    toaddr: bytes.hexToByteArray(tx.toAddr.replace('0x', '').toLowerCase()),\n    senderpubkey: ZilliqaMessage.ByteArray.create({\n      data: bytes.hexToByteArray(tx.pubKey || '00'),\n    }),\n    amount: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.amount.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gasprice: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.gasPrice.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gaslimit: tx.gasLimit,\n    code:\n      tx.code && tx.code.length\n        ? Uint8Array.from([...tx.code].map((c) => <number>c.charCodeAt(0)))\n        : null,\n    data:\n      tx.data && tx.data.length\n        ? Uint8Array.from([...tx.data].map((c) => <number>c.charCodeAt(0)))\n        : null,\n  };\n\n  const serialised = ZilliqaMessage.ProtoTransactionCoreInfo.create(msg);\n\n  return Buffer.from(\n    ZilliqaMessage.ProtoTransactionCoreInfo.encode(serialised).finish(),\n  );\n};\n\nexport const isTxReceipt = (x: unknown): x is TxReceipt => {\n  return validation.isPlainObject(x) && validation.matchesObject(x, {});\n};\n\nexport const isTxParams = (obj: unknown): obj is TxParams => {\n  const validator = {\n    version: [validation.required(validation.isNumber)],\n    toAddr: [validation.required(validation.isAddress)],\n    amount: [validation.required(validation.isBN)],\n    gasPrice: [validation.required(validation.isBN)],\n    gasLimit: [validation.required(validation.isLong)],\n    code: [validation.isString],\n    data: [validation.isString],\n    receipt: [isTxReceipt],\n    nonce: [validation.required(validation.isNumber)],\n    signature: [validation.required(validation.isSignature)],\n  };\n\n  return validation.matchesObject(obj, validator);\n};\n\nexport const formatOutgoingTx: ReqMiddlewareFn<[TxParams]> = (req) => {\n  if (\n    req.payload.method === RPCMethod.CreateTransaction &&\n    isTxParams(req.payload.params[0])\n  ) {\n    const txConfig = req.payload.params[0];\n\n    const ret = {\n      ...req,\n      payload: {\n        ...req.payload,\n        params: [\n          {\n            ...txConfig,\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString(),\n          },\n        ],\n      },\n    };\n\n    return ret;\n  }\n\n  return req;\n};\n\nexport async function sleep(ms: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), ms);\n  });\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nexport class Account {\n  /**\n   * fromFile\n   *\n   * Takes a JSON-encoded keystore and passphrase, returning a fully\n   * instantiated Account instance.\n   *\n   * @param {string} file\n   * @param {string} passphrase\n   * @returns {Promise<Account>}\n   */\n  static async fromFile(file: string, passphrase: string): Promise<Account> {\n    try {\n      const keystore = JSON.parse(file);\n      const privateKey = await zcrypto.decryptPrivateKey(passphrase, keystore);\n\n      return new Account(privateKey);\n    } catch (err) {\n      throw new Error(`Could not decrypt keystore file.`);\n    }\n  }\n\n  privateKey: string;\n  publicKey: string;\n  address: string;\n  bech32Address: string;\n\n  constructor(privateKey: string) {\n    this.privateKey = this.normalizePrivateKey(privateKey);\n    this.publicKey = zcrypto.getPubKeyFromPrivateKey(this.privateKey);\n    this.address = zcrypto.getAddressFromPublicKey(this.publicKey);\n    this.bech32Address = zcrypto.toBech32Address(this.address);\n  }\n\n  /**\n   * toFile\n   *\n   * @param {string} passphrase\n   * @param {kdf} 'pbkdf2' | 'scrypt'\n   * @returns {Promise<string>}\n   */\n  async toFile(\n    passphrase: string,\n    kdf: 'pbkdf2' | 'scrypt' = 'scrypt',\n  ): Promise<string> {\n    if (!passphrase || !passphrase.length) {\n      throw new Error('Passphrase cannot have a length of 0');\n    }\n\n    const keystore = await zcrypto.encryptPrivateKey(\n      kdf,\n      this.privateKey,\n      passphrase,\n    );\n\n    return keystore;\n  }\n\n  /**\n   * signTransaction\n   *\n   * @param {Buffer} bytes - the data to be signed\n   *\n   * @returns {string} - the hex encoded signature. it is a concatenation of\n   * the r and s values in hex, each padded to a length of 64.\n   */\n  signTransaction(bytes: Buffer) {\n    return zcrypto.sign(bytes, this.privateKey, this.publicKey);\n  }\n\n  private normalizePrivateKey(privateKey: string) {\n    return zcrypto.normalizePrivateKey(privateKey);\n  }\n}\n","export default {};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport bip39 from 'bip39';\nimport hdkey from 'hdkey';\nimport { Signer, Provider } from '@zilliqa-js/core';\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nimport { Account } from './account';\nimport { Transaction } from './transaction';\nimport BN from 'bn.js';\n\nexport class Wallet extends Signer {\n  accounts: { [address: string]: Account } = {};\n  defaultAccount?: Account;\n  provider: Provider;\n\n  /**\n   * constructor\n   *\n   * Takes an array of Account objects and instantiates a Wallet instance.\n   *\n   * @param {Account[]} accounts\n   */\n  constructor(provider: Provider, accounts: Account[] = []) {\n    super();\n    if (accounts.length) {\n      this.accounts = accounts.reduce(\n        (acc, account) => {\n          return { ...acc, [account.address]: account };\n        },\n        {} as any,\n      );\n    }\n\n    this.provider = provider;\n    this.defaultAccount = accounts[0];\n  }\n\n  /**\n   * create\n   *\n   * Creates a new keypair with a randomly-generated private key. The new\n   * account is accessible by address.\n   *\n   * @returns {string} - address of the new account\n   */\n  create(): string {\n    const privateKey = zcrypto.schnorr.generatePrivateKey();\n    const newAccount = new Account(privateKey);\n\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByPrivateKey\n   *\n   * Adds an account to the wallet by private key.\n   *\n   * @param {string} privateKey - hex-encoded private key\n   * @returns {string} - the corresponing address, computer from the private\n   * key.\n   */\n  addByPrivateKey(privateKey: string): string {\n    const newAccount = new Account(privateKey);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByKeystore\n   *\n   * Adds an account by keystore. This method is asynchronous and returns\n   * a Promise<string>, in order not to block on the underlying decryption\n   * operation.\n   *\n   * @param {string} keystore\n   * @param {string} passphrase\n   * @returns {Promise<string>}\n   */\n  async addByKeystore(keystore: string, passphrase: string): Promise<string> {\n    const newAccount = await Account.fromFile(keystore, passphrase);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByMnemonic\n   *\n   * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\n   *\n   * @param {string} phrase - 12-word mnemonic phrase\n   * @param {number} index=0 - the number of the child key to add\n   * @returns {string} - the corresponding address\n   */\n  addByMnemonic(phrase: string, index: number = 0): string {\n    if (!this.isValidMnemonic(phrase)) {\n      throw new Error(`Invalid mnemonic phrase: ${phrase}`);\n    }\n    const seed = bip39.mnemonicToSeed(phrase);\n    const hdKey = hdkey.fromMasterSeed(seed);\n    const childKey = hdKey.derive(`m/44'/313'/0'/0/${index}`);\n    const privateKey = childKey.privateKey.toString('hex');\n    return this.addByPrivateKey(privateKey);\n  }\n\n  /**\n   * export\n   *\n   * Exports the specified account as a keystore file.\n   *\n   * @param {string} address\n   * @param {string} passphrase\n   * @param {KDF} kdf='scrypt'\n   * @returns {Promise<string>}\n   */\n  export(\n    address: string,\n    passphrase: string,\n    kdf: zcrypto.KDF = 'scrypt',\n  ): Promise<string> {\n    if (!this.accounts[address]) {\n      throw new Error(`No account with address ${address} exists`);\n    }\n\n    return this.accounts[address].toFile(passphrase, kdf);\n  }\n\n  /**\n   * remove\n   *\n   * Removes an account from the wallet and returns boolean to indicate\n   * failure or success.\n   *\n   * @param {string} address\n   * @returns {boolean}\n   */\n  remove(address: string): boolean {\n    if (this.accounts[address]) {\n      const { [address]: toRemove, ...rest } = this.accounts;\n\n      this.accounts = rest;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * setDefault\n   *\n   * Sets the default account of the wallet.\n   *\n   * @param {string} address\n   */\n  setDefault(address: string) {\n    this.defaultAccount = this.accounts[address];\n  }\n\n  /**\n   * sign\n   *\n   * signs an unsigned transaction with the default account.\n   *\n   * @param {Transaction} tx\n   * @param {string} account\n   * @returns {Transaction}\n   */\n  sign(tx: Transaction): Promise<Transaction> {\n    if (tx.txParams && tx.txParams.pubKey) {\n      // attempt to find the address\n      const senderAddress = zcrypto.getAddressFromPublicKey(tx.txParams.pubKey);\n\n      if (!this.accounts[senderAddress]) {\n        throw new Error(\n          `Could not sign the transaction with ${senderAddress} as it does not exist`,\n        );\n      }\n\n      return this.signWith(tx, senderAddress);\n    }\n\n    if (!this.defaultAccount) {\n      throw new Error('This wallet has no default account.');\n    }\n\n    return this.signWith(tx, this.defaultAccount.address);\n  }\n\n  /**\n   * signWith\n   *\n   * @param {Transaction} tx\n   * @param {string} account\n   * @returns {Transaction}\n   */\n  async signWith(tx: Transaction, account: string): Promise<Transaction> {\n    if (!this.accounts[account]) {\n      throw new Error(\n        'The selected account does not exist on this Wallet instance.',\n      );\n    }\n\n    const signer = this.accounts[account];\n\n    const balance = await this.provider.send(\n      'GetBalance',\n      signer.address.replace('0x', '').toLowerCase(),\n    );\n\n    if (balance.result === undefined) {\n      throw new Error('Could not get balance');\n    }\n\n    const gasPrice = tx.txParams.gasPrice;\n    const gasLimit = new BN(tx.txParams.gasLimit.toString());\n    const debt = gasPrice.mul(gasLimit).add(tx.txParams.amount);\n    const bal = new BN(balance.result.balance);\n    if (debt.gt(bal)) {\n      throw new Error(\n        'You do not have enough funds, need ' +\n          debt.toString() +\n          ' but only have ' +\n          bal.toString(),\n      );\n    }\n\n    try {\n      if (!tx.txParams.nonce) {\n        if (typeof balance.result.nonce !== 'number') {\n          throw new Error('Could not get nonce');\n        }\n\n        const withNonce = tx.map((txObj) => {\n          return {\n            ...txObj,\n            nonce: txObj.nonce || balance.result.nonce + 1,\n            pubKey: signer.publicKey,\n          };\n        });\n\n        return withNonce.map((txObj) => {\n          // @ts-ignore\n          return {\n            ...txObj,\n            signature: signer.signTransaction(withNonce.bytes),\n          };\n        });\n      }\n\n      const withPublicKey = tx.map((txObj) => {\n        return {\n          ...txObj,\n          pubKey: signer.publicKey,\n        };\n      });\n\n      return withPublicKey.map((txObj) => {\n        return {\n          ...txObj,\n          signature: signer.signTransaction(tx.bytes),\n        };\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  private isValidMnemonic(phrase: string): boolean {\n    if (phrase.trim().split(/\\s+/g).length < 12) {\n      return false;\n    }\n    return bip39.validateMnemonic(phrase);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EventEmitter,\n  GET_TX_ATTEMPTS,\n  Provider,\n  RPCMethod,\n  RPCResponse,\n  Signable,\n  TxBlockObj,\n} from '@zilliqa-js/core';\nimport { getAddressFromPublicKey, normaliseAddress } from '@zilliqa-js/crypto';\nimport { BN, Long } from '@zilliqa-js/util';\n\nimport {\n  TxEventName,\n  TxIncluded,\n  TxParams,\n  TxReceipt,\n  TxStatus,\n} from './types';\nimport { encodeTransactionProto, sleep } from './util';\n\n/**\n * Transaction\n *\n * Transaction is a functor. Its purpose is to encode the possible states a\n * Transaction can be in:  Confirmed, Rejected, Pending, or Initialised (i.e., not broadcasted).\n */\nexport class Transaction implements Signable {\n  /**\n   * confirm\n   *\n   * constructs an already-confirmed transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static confirm(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Confirmed);\n  }\n\n  /**\n   * reject\n   *\n   * constructs an already-rejected transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static reject(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Rejected);\n  }\n\n  provider: Provider;\n  eventEmitter: EventEmitter<Transaction>;\n  id?: string;\n  status: TxStatus;\n  toDS: boolean;\n  blockConfirmation?: number;\n\n  // parameters\n  private version: number;\n  private nonce?: number;\n  private toAddr: string;\n  private pubKey?: string;\n  private amount: BN;\n  private gasPrice: BN;\n  private gasLimit: Long;\n  private code: string = '';\n  private data: string = '';\n  private receipt?: TxReceipt;\n  private signature?: string;\n\n  get bytes(): Buffer {\n    return encodeTransactionProto(this.txParams);\n  }\n\n  get senderAddress(): string {\n    if (!this.pubKey) {\n      return '0'.repeat(40);\n    }\n\n    return getAddressFromPublicKey(this.pubKey);\n  }\n\n  get txParams(): TxParams {\n    return {\n      version: this.version,\n      toAddr: normaliseAddress(this.toAddr),\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  get payload() {\n    return {\n      version: 0,\n      toAddr: this.toAddr,\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount.toString(),\n      gasPrice: this.gasPrice.toString(),\n      gasLimit: this.gasLimit.toString(),\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  constructor(\n    params: TxParams,\n    provider: Provider,\n    status: TxStatus = TxStatus.Initialised,\n    toDS: boolean = false,\n  ) {\n    // private members\n    this.version = params.version;\n    this.toAddr = normaliseAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n    // public members\n    this.provider = provider;\n    this.status = status;\n    this.toDS = toDS;\n    this.blockConfirmation = 0;\n    this.eventEmitter = new EventEmitter();\n  }\n\n  /**\n   * isPending\n   *\n   * @returns {boolean}\n   */\n  isPending(): boolean {\n    return this.status === TxStatus.Pending;\n  }\n\n  /**\n   * isInitialised\n   *\n   * @returns {boolean}\n   */\n  isInitialised(): boolean {\n    return this.status === TxStatus.Initialised;\n  }\n\n  getReceipt(): TxReceipt | undefined {\n    return this.receipt;\n  }\n\n  /**\n   * isConfirmed\n   *\n   * @returns {boolean}\n   */\n  isConfirmed(): boolean {\n    return this.status === TxStatus.Confirmed;\n  }\n\n  /**\n   * isRejected\n   *\n   * @returns {boolean}\n   */\n  isRejected(): boolean {\n    return this.status === TxStatus.Rejected;\n  }\n\n  /**\n   * setProvider\n   *\n   * Sets the provider on this instance.\n   *\n   * @param {Provider} provider\n   */\n  setProvider(provider: Provider) {\n    this.provider = provider;\n  }\n\n  /**\n   * setStatus\n   *\n   * Escape hatch to imperatively set the state of the transaction.\n   *\n   * @param {TxStatus} status\n   * @returns {undefined}\n   */\n  setStatus(status: TxStatus) {\n    this.status = status;\n    return this;\n  }\n\n  observed(): EventEmitter<Transaction> {\n    return this.eventEmitter;\n  }\n\n  /**\n   * blockConfirm\n   *\n   * Use `RPCMethod.GetLatestBlock` to get latest blockNumber\n   * Use interval to get the latestBlockNumber\n   * After BlockNumber change, then we use `RPCMethod.GetTransaction` to get the receipt\n   *\n   * @param {string} txHash\n   * @param {number} maxblockCount\n   * @param {number} interval interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async blockConfirm(\n    txHash: string,\n    maxblockCount: number = 4,\n    interval: number = 1000,\n  ) {\n    this.status = TxStatus.Pending;\n    const blockStart: BN = await this.getBlockNumber();\n    let blockChecked = blockStart;\n    for (let attempt = 0; attempt < maxblockCount; attempt += 1) {\n      try {\n        const blockLatest: BN = await this.getBlockNumber();\n        const blockNext: BN = blockChecked.add(\n          new BN(attempt === 0 ? attempt : 1),\n        );\n        if (blockLatest.gte(blockNext)) {\n          blockChecked = blockLatest;\n          this.emit(TxEventName.Track, {\n            txHash,\n            attempt,\n            currentBlock: blockChecked.toString(),\n          });\n          if (await this.trackTx(txHash)) {\n            this.blockConfirmation = blockLatest.sub(blockStart).toNumber();\n            return this;\n          }\n        } else {\n          attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n\n      if (attempt + 1 < maxblockCount) {\n        await sleep(interval);\n      }\n    }\n\n    // if failed\n    const blockFailed: BN = await this.getBlockNumber();\n    this.blockConfirmation = blockFailed.sub(blockStart).toNumber();\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxblockCount} blocks.`;\n\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * confirmReceipt\n   *\n   * Similar to the Promise API. This sets the Transaction instance to a state\n   * of pending. Calling this function kicks off a passive loop that polls the\n   * lookup node for confirmation on the txHash.\n   *\n   * The polls are performed with a linear backoff:\n   *\n   * `const delay = interval * attempt`\n   *\n   * This is a low-level method that you should generally not have to use\n   * directly.\n   *\n   * @param {string} txHash\n   * @param {number} maxAttempts\n   * @param {number} initial interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async confirm(\n    txHash: string,\n    maxAttempts = GET_TX_ATTEMPTS,\n    interval = 1000,\n  ): Promise<Transaction> {\n    this.status = TxStatus.Pending;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      this.emit(TxEventName.Track, {\n        txHash,\n        attempt,\n      });\n      try {\n        if (await this.trackTx(txHash)) {\n          return this;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n      if (attempt + 1 < maxAttempts) {\n        await sleep(interval * attempt);\n      }\n    }\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxAttempts} attempts.`;\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * map\n   *\n   * maps over the transaction, allowing for manipulation.\n   *\n   * @param {(prev: TxParams) => TxParams} fn - mapper\n   * @returns {Transaction}\n   */\n  map(fn: (prev: TxParams) => TxParams): Transaction {\n    const newParams = fn(this.txParams);\n    this.setParams(newParams);\n\n    return this;\n  }\n\n  private setParams(params: TxParams) {\n    this.version = params.version;\n    this.toAddr = normaliseAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n  }\n\n  private async trackTx(txHash: string): Promise<boolean> {\n    const res: RPCResponse<TxIncluded, string> = await this.provider.send(\n      RPCMethod.GetTransaction,\n      txHash,\n    );\n\n    if (res.error) {\n      this.emit(TxEventName.Error, res.error);\n      return false;\n    }\n\n    this.id = res.result.ID;\n    this.receipt = {\n      ...res.result.receipt,\n      cumulative_gas: parseInt(res.result.receipt.cumulative_gas, 10),\n    };\n    this.emit(TxEventName.Receipt, this.receipt);\n    this.status =\n      this.receipt && this.receipt.success\n        ? TxStatus.Confirmed\n        : TxStatus.Rejected;\n    return true;\n  }\n\n  private async getBlockNumber(): Promise<BN> {\n    try {\n      const res: RPCResponse<TxBlockObj, string> = await this.provider.send(\n        RPCMethod.GetLatestTxBlock,\n      );\n      if (res.error === undefined && res.result.header.BlockNum) {\n        // if blockNumber is too high, we use BN to be safer\n        return new BN(res.result.header.BlockNum);\n      } else {\n        throw new Error('Can not get latest BlockNumber');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private emit(event: TxEventName | string, txEvent: any) {\n    this.eventEmitter.emit(event, { ...txEvent, event });\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Provider, RPCMethod, ZilliqaModule } from '@zilliqa-js/core';\nimport { Transaction } from './transaction';\nimport { TxParams, TxStatus } from './types';\nimport { formatOutgoingTx } from './util';\nimport { Wallet } from './wallet';\nimport BN from 'bn.js';\n\nexport class TransactionFactory implements ZilliqaModule {\n  provider: Provider;\n  signer: Wallet;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.provider.middleware.request.use(\n      formatOutgoingTx,\n      RPCMethod.CreateTransaction,\n    );\n    this.signer = signer;\n  }\n\n  new(txParams: TxParams, toDs: boolean = false) {\n    return new Transaction(txParams, this.provider, TxStatus.Initialised, toDs);\n  }\n\n  /**\n   * This constructor could help you to check if there is a default account to be used, and further more, if it has\n   * sufficient fund to do the transfer.\n   * @param txParams\n   */\n  async payment(txParams: TxParams) {\n    const defaultAccount = this.signer.defaultAccount;\n    if (defaultAccount != null) {\n      const addr = defaultAccount.address;\n      const response = await this.provider.send(\n        RPCMethod.GetBalance,\n        addr.replace('0x', '').toLowerCase(),\n      );\n      if (response.error) {\n        throw response.error;\n      }\n      const fund = new BN(response.result.balance);\n      if (txParams.amount.cmp(fund) === 1) {\n        throw new Error('No sufficient fund');\n      }\n    } else {\n      throw new Error('No default wallet');\n    }\n    return this.new(txParams, true);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BN, Long } from '@zilliqa-js/util';\nimport { TransactionReceiptObj } from '@zilliqa-js/core';\n\nexport const enum TxStatus {\n  Initialised,\n  Pending,\n  Confirmed,\n  Rejected,\n}\n\nexport interface TxCreated {\n  Info: string;\n  TranID: string;\n  ContractAddress?: string;\n}\n\nexport interface TxRejected {\n  Error: string;\n}\n\nexport type TxReceipt = TransactionReceiptObj<number>;\n\nexport interface TxIncluded {\n  ID: string;\n  receipt: TransactionReceiptObj;\n}\n\nexport interface TxParams {\n  version: number;\n  toAddr: string;\n  amount: BN;\n  gasPrice: BN;\n  gasLimit: Long;\n\n  code?: string;\n  data?: string;\n  receipt?: TxReceipt;\n  nonce?: number;\n  pubKey?: string;\n  signature?: string;\n}\n\nexport const enum TxEventName {\n  Error = 'error',\n  Receipt = 'receipt',\n  Track = 'track',\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as util from './util';\n\nexport * from './account';\nexport * from './wallet';\nexport * from './transaction';\nexport * from './transactionFactory';\nexport * from './types';\n\nexport { util };\n"]},"metadata":{},"sourceType":"script"}