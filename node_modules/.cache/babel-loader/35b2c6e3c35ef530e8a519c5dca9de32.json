{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@zilliqa-js/account'), require('@zilliqa-js/core'), require('@zilliqa-js/crypto'), require('@zilliqa-js/util'), require('hash.js')) : typeof define === 'function' && define.amd ? define(['exports', '@zilliqa-js/account', '@zilliqa-js/core', '@zilliqa-js/crypto', '@zilliqa-js/util', 'hash.js'], factory) : factory(global.zjsContract = {}, global['@zilliqa-js/account'], global['@zilliqa-js/core'], global['@zilliqa-js/crypto'], global['@zilliqa-js/util'], global.hash.js);\n})(this, function (exports, account, core, crypto, util, hash) {\n  'use strict';\n\n  hash = hash && hash.hasOwnProperty('default') ? hash['default'] : hash;\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  function __decorate(decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n\n  function __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      function step(result) {\n        result.done ? resolve(result.value) : new P(function (resolve) {\n          resolve(result.value);\n        }).then(fulfilled, rejected);\n      }\n\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n        f,\n        y,\n        t,\n        g;\n    return g = {\n      next: verb(0),\n      \"throw\": verb(1),\n      \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n      return this;\n    }), g;\n\n    function verb(n) {\n      return function (v) {\n        return step([n, v]);\n      };\n    }\n\n    function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n\n      while (_) try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n\n      if (op[0] & 5) throw op[1];\n      return {\n        value: op[0] ? op[1] : void 0,\n        done: true\n      };\n    }\n  } //  This file is part of Zilliqa-Javascript-Library.\n\n\n  var NIL_ADDRESS = '0x0000000000000000000000000000000000000000';\n\n  var Contract = function () {\n    function Contract(factory, code, abi, address, init, state) {\n      this.factory = factory;\n      this.provider = factory.provider;\n      this.signer = factory.signer; // assume that we are accessing an existing contract\n\n      if (address) {\n        this.abi = abi;\n        this.address = crypto.normaliseAddress(address);\n        this.init = init;\n        this.state = state;\n        this.status = 0\n        /* Deployed */\n        ;\n      } else {\n        // assume we're deploying\n        this.abi = abi;\n        this.code = code;\n        this.init = init;\n        this.status = 2\n        /* Initialised */\n        ;\n      }\n    }\n    /**\r\n     * isInitialised\r\n     *\r\n     * Returns true if the contract has not been deployed\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Contract.prototype.isInitialised = function () {\n      return this.status === 2\n      /* Initialised */\n      ;\n    };\n    /**\r\n     * isDeployed\r\n     *\r\n     * Returns true if the contract is deployed\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Contract.prototype.isDeployed = function () {\n      return this.status === 0\n      /* Deployed */\n      ;\n    };\n    /**\r\n     * isRejected\r\n     *\r\n     * Returns true if an attempt to deploy the contract was made, but the\r\n     * underlying transaction was unsuccessful.\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Contract.prototype.isRejected = function () {\n      return this.status === 1\n      /* Rejected */\n      ;\n    };\n\n    Contract.prototype.prepareTx = function (tx, attempts, interval, isDeploy) {\n      if (attempts === void 0) {\n        attempts = core.GET_TX_ATTEMPTS;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.provider.send(\"CreateTransaction\"\n              /* CreateTransaction */\n              , __assign(__assign({}, tx.txParams), {\n                priority: tx.toDS\n              }))];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.error) {\n                this.address = undefined;\n                this.error = response.error;\n                return [2\n                /*return*/\n                , tx.setStatus(3\n                /* Rejected */\n                )];\n              }\n\n              if (isDeploy) {\n                this.address = response.result.ContractAddress ? crypto.toChecksumAddress(response.result.ContractAddress) : undefined;\n              }\n\n              return [2\n              /*return*/\n              , tx.confirm(response.result.TranID, attempts, interval)];\n          }\n        });\n      });\n    };\n\n    Contract.prototype.prepare = function (tx) {\n      return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.provider.send(\"CreateTransaction\"\n              /* CreateTransaction */\n              , __assign(__assign({}, tx.txParams), {\n                priority: tx.toDS\n              }))];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.error || !response.result) {\n                this.address = undefined;\n                this.error = response.error;\n                tx.setStatus(3\n                /* Rejected */\n                );\n              } else {\n                tx.id = response.result.TranID;\n                tx.setStatus(1\n                /* Pending */\n                );\n                return [2\n                /*return*/\n                , response.result.ContractAddress];\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n    /**\r\n     * deploy smart contract with no confirm\r\n     * @param params\r\n     * @param toDs\r\n     */\n\n\n    Contract.prototype.deployWithoutConfirm = function (params, toDs) {\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var tx, _a, err_1;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!this.code || !this.init) {\n                throw new Error('Cannot deploy without code or initialisation parameters.');\n              }\n\n              tx = new account.Transaction(__assign(__assign({}, params), {\n                toAddr: NIL_ADDRESS,\n                amount: new util.BN(0),\n                code: this.code,\n                data: JSON.stringify(this.init).replace(/\\\\\"/g, '\"')\n              }), this.provider, 0\n              /* Initialised */\n              , toDs);\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 3,, 4]);\n\n              _a = this;\n              return [4\n              /*yield*/\n              , this.prepare(tx)];\n\n            case 2:\n              _a.address = _b.sent();\n              this.status = this.address === undefined ? 1\n              /* Rejected */\n              : 2\n              /* Initialised */\n              ;\n              return [2\n              /*return*/\n              , [tx, this]];\n\n            case 3:\n              err_1 = _b.sent();\n              throw err_1;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n    /**\r\n     * deploy\r\n     *\r\n     * @param {DeployParams} params\r\n     * @returns {Promise<Contract>}\r\n     */\n\n\n    Contract.prototype.deploy = function (params, attempts, interval, toDs) {\n      if (attempts === void 0) {\n        attempts = 33;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var tx, err_2;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.code || !this.init) {\n                throw new Error('Cannot deploy without code or initialisation parameters.');\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.prepareTx(new account.Transaction(__assign(__assign({}, params), {\n                toAddr: NIL_ADDRESS,\n                amount: new util.BN(0),\n                code: this.code,\n                data: JSON.stringify(this.init).replace(/\\\\\"/g, '\"')\n              }), this.provider, 0\n              /* Initialised */\n              , toDs), attempts, interval, true)];\n\n            case 2:\n              tx = _a.sent();\n\n              if (tx.isRejected()) {\n                this.status = 1\n                /* Rejected */\n                ;\n                this.address = undefined;\n                return [2\n                /*return*/\n                , [tx, this]];\n              }\n\n              this.status = 0\n              /* Deployed */\n              ;\n              this.address = this.address && crypto.isValidChecksumAddress(this.address) ? this.address : Contracts.getAddressForContract(tx);\n              return [2\n              /*return*/\n              , [tx, this]];\n\n            case 3:\n              err_2 = _a.sent();\n              throw err_2;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    Contract.prototype.callWithoutConfirm = function (transition, args, params, toDs) {\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var data, tx, err_3;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              data = {\n                _tag: transition,\n                params: args\n              };\n\n              if (this.error) {\n                return [2\n                /*return*/\n                , Promise.reject(this.error)];\n              }\n\n              if (!this.address) {\n                return [2\n                /*return*/\n                , Promise.reject('Contract has not been deployed!')];\n              }\n\n              tx = new account.Transaction(__assign(__assign({}, params), {\n                toAddr: this.address,\n                data: JSON.stringify(data)\n              }), this.provider, 0\n              /* Initialised */\n              , toDs);\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.prepare(tx)];\n\n            case 2:\n              _a.sent();\n\n              return [2\n              /*return*/\n              , tx];\n\n            case 3:\n              err_3 = _a.sent();\n              throw err_3;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n    /**\r\n     * call\r\n     *\r\n     * @param {string} transition\r\n     * @param {any} params\r\n     * @returns {Promise<Transaction>}\r\n     */\n\n\n    Contract.prototype.call = function (transition, args, params, attempts, interval, toDs) {\n      if (attempts === void 0) {\n        attempts = 33;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var data, err_4;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              data = {\n                _tag: transition,\n                params: args\n              };\n\n              if (this.error) {\n                return [2\n                /*return*/\n                , Promise.reject(this.error)];\n              }\n\n              if (!this.address) {\n                return [2\n                /*return*/\n                , Promise.reject('Contract has not been deployed!')];\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.prepareTx(new account.Transaction(__assign(__assign({}, params), {\n                toAddr: this.address,\n                data: JSON.stringify(data)\n              }), this.provider, 0\n              /* Initialised */\n              , toDs), attempts, interval, false)];\n\n            case 2:\n              return [2\n              /*return*/\n              , _a.sent()];\n\n            case 3:\n              err_4 = _a.sent();\n              throw err_4;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }; // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n\n    Contract.prototype.getState = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.status !== 0\n              /* Deployed */\n              ) {\n                return [2\n                /*return*/\n                , Promise.resolve([])];\n              }\n\n              if (!this.address) {\n                throw new Error('Cannot get state of uninitialised contract');\n              }\n\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetSmartContractState\"\n              /* GetSmartContractState */\n              , this.address.replace('0x', '').toLowerCase())];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , response.result];\n          }\n        });\n      });\n    }; // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n    /**\r\n     * getSubState\r\n     *\r\n     * @param { string } variableName - variable name within the state\r\n     * @param { string[] } indices -  (optional) If the variable is of map type, you can specify an index (or indices)\r\n     * @returns {Promise<RPCResponse<any, string>>}\r\n     */\n\n\n    Contract.prototype.getSubState = function (variableName, indices) {\n      return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.status !== 0\n              /* Deployed */\n              ) {\n                return [2\n                /*return*/\n                , Promise.resolve([])];\n              }\n\n              if (!this.address) {\n                throw new Error('Cannot get state of uninitialised contract');\n              }\n\n              if (!variableName) {\n                throw new Error('Variable name required');\n              }\n\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetSmartContractSubState\"\n              /* GetSmartContractSubState */\n              , this.address.replace('0x', '').toLowerCase(), variableName, indices === undefined ? [] : indices)];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , response.result];\n          }\n        });\n      });\n    }; // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n\n    Contract.prototype.getInit = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.status !== 0\n              /* Deployed */\n              ) {\n                return [2\n                /*return*/\n                , Promise.resolve([])];\n              }\n\n              if (!this.address) {\n                throw new Error('Cannot get state of uninitialised contract');\n              }\n\n              return [4\n              /*yield*/\n              , this.provider.send(\"GetSmartContractInit\"\n              /* GetSmartContractInit */\n              , this.address.replace('0x', '').toLowerCase())];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , response.result];\n          }\n        });\n      });\n    };\n\n    __decorate([core.sign, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [account.Transaction, Number, Number, Boolean]), __metadata(\"design:returntype\", Promise)], Contract.prototype, \"prepareTx\", null);\n\n    __decorate([core.sign, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [account.Transaction]), __metadata(\"design:returntype\", Promise)], Contract.prototype, \"prepare\", null);\n\n    return Contract;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n  /**\r\n   * Contracts\r\n   *\r\n   * Unlike most zilliqa-js modules, `Contracts` is a factory class.\r\n   * As a result, individual `Contract` instances are instead obtained by\r\n   * calling `Contracts.at` (for an already-deployed contract) and\r\n   * `Contracts.new` (to deploy a new contract).\r\n   */\n\n\n  var Contracts = function () {\n    function Contracts(provider, signer) {\n      this.provider = provider;\n      this.provider.middleware.request.use(account.util.formatOutgoingTx, \"CreateTransaction\"\n      /* CreateTransaction */\n      );\n      this.signer = signer;\n    }\n    /**\r\n     * getAddressForContract\r\n     *\r\n     * @static\r\n     * @param {Transaction} tx - transaction used to create the contract\r\n     * @returns {string} - the contract address\r\n     */\n\n\n    Contracts.getAddressForContract = function (tx) {\n      // always subtract 1 from the tx nonce, as contract addresses are computed\n      // based on the nonce in the global state.\n      var nonce = tx.txParams.nonce ? tx.txParams.nonce - 1 : 0;\n      return crypto.toChecksumAddress(hash.sha256().update(tx.senderAddress.replace('0x', '').toLowerCase(), 'hex').update(util.bytes.intToHexArray(nonce, 16).join(''), 'hex').digest('hex').slice(24));\n    };\n\n    Contracts.prototype.at = function (address, abi, code, init, state) {\n      return new Contract(this, code, abi, address, init, state);\n    };\n\n    Contracts.prototype.new = function (code, init, abi) {\n      return new Contract(this, code, abi, undefined, init);\n    };\n\n    return Contracts;\n  }(); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  (function (ContractStatus) {\n    ContractStatus[ContractStatus[\"Deployed\"] = 0] = \"Deployed\";\n    ContractStatus[ContractStatus[\"Rejected\"] = 1] = \"Rejected\";\n    ContractStatus[ContractStatus[\"Initialised\"] = 2] = \"Initialised\";\n  })(exports.ContractStatus || (exports.ContractStatus = {})); //  This file is part of Zilliqa-Javascript-Library.\n\n\n  exports.Contracts = Contracts;\n  exports.Contract = Contract;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../src/contract.ts","../src/factory.ts","../src/types.ts","../src/index.ts"],"names":["normaliseAddress","sign","Transaction","toChecksumAddress","BN","isValidChecksumAddress","bytes","util","ContractStatus"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Transaction, TxStatus, Wallet } from '@zilliqa-js/account';\nimport { GET_TX_ATTEMPTS, Provider, RPCMethod, sign } from '@zilliqa-js/core';\nimport {\n  isValidChecksumAddress,\n  normaliseAddress,\n  toChecksumAddress,\n} from '@zilliqa-js/crypto';\nimport { BN } from '@zilliqa-js/util';\n\nimport { Contracts } from './factory';\nimport {\n  ABI,\n  CallParams,\n  ContractStatus,\n  DeployError,\n  DeployParams,\n  DeploySuccess,\n  Init,\n  State,\n  Value,\n} from './types';\n\nconst NIL_ADDRESS = '0x0000000000000000000000000000000000000000';\n\nexport class Contract {\n  factory: Contracts;\n  provider: Provider;\n  signer: Wallet;\n\n  init: Init;\n  abi?: ABI;\n  state?: State;\n  address?: string;\n  code?: string;\n  status: ContractStatus;\n  error?: any;\n\n  constructor(\n    factory: Contracts,\n    code?: string,\n    abi?: ABI,\n    address?: string,\n    init?: any,\n    state?: any,\n  ) {\n    this.factory = factory;\n    this.provider = factory.provider;\n    this.signer = factory.signer;\n    // assume that we are accessing an existing contract\n    if (address) {\n      this.abi = abi;\n      this.address = normaliseAddress(address);\n      this.init = init;\n      this.state = state;\n      this.status = ContractStatus.Deployed;\n    } else {\n      // assume we're deploying\n      this.abi = abi;\n      this.code = code;\n      this.init = init;\n      this.status = ContractStatus.Initialised;\n    }\n  }\n\n  /**\n   * isInitialised\n   *\n   * Returns true if the contract has not been deployed\n   *\n   * @returns {boolean}\n   */\n  isInitialised(): boolean {\n    return this.status === ContractStatus.Initialised;\n  }\n\n  /**\n   * isDeployed\n   *\n   * Returns true if the contract is deployed\n   *\n   * @returns {boolean}\n   */\n  isDeployed(): boolean {\n    return this.status === ContractStatus.Deployed;\n  }\n\n  /**\n   * isRejected\n   *\n   * Returns true if an attempt to deploy the contract was made, but the\n   * underlying transaction was unsuccessful.\n   *\n   * @returns {boolean}\n   */\n  isRejected(): boolean {\n    return this.status === ContractStatus.Rejected;\n  }\n\n  @sign\n  async prepareTx(\n    tx: Transaction,\n    attempts: number = GET_TX_ATTEMPTS,\n    interval: number = 1000,\n    isDeploy: boolean,\n  ): Promise<Transaction> {\n    const response = await this.provider.send<DeploySuccess, DeployError>(\n      RPCMethod.CreateTransaction,\n      { ...tx.txParams, priority: tx.toDS },\n    );\n\n    if (response.error) {\n      this.address = undefined;\n      this.error = response.error;\n      return tx.setStatus(TxStatus.Rejected);\n    }\n\n    if (isDeploy) {\n      this.address = response.result.ContractAddress\n        ? toChecksumAddress(response.result.ContractAddress)\n        : undefined;\n    }\n\n    return tx.confirm(response.result.TranID, attempts, interval);\n  }\n\n  @sign\n  async prepare(tx: Transaction): Promise<string | undefined> {\n    const response = await this.provider.send<DeploySuccess, DeployError>(\n      RPCMethod.CreateTransaction,\n      { ...tx.txParams, priority: tx.toDS },\n    );\n\n    if (response.error || !response.result) {\n      this.address = undefined;\n      this.error = response.error;\n      tx.setStatus(TxStatus.Rejected);\n    } else {\n      tx.id = response.result.TranID;\n      tx.setStatus(TxStatus.Pending);\n      return response.result.ContractAddress;\n    }\n  }\n\n  /**\n   * deploy smart contract with no confirm\n   * @param params\n   * @param toDs\n   */\n  async deployWithoutConfirm(\n    params: DeployParams,\n    toDs: boolean = false,\n  ): Promise<[Transaction, Contract]> {\n    if (!this.code || !this.init) {\n      throw new Error(\n        'Cannot deploy without code or initialisation parameters.',\n      );\n    }\n    const tx = new Transaction(\n      {\n        ...params,\n        toAddr: NIL_ADDRESS,\n        amount: new BN(0),\n        code: this.code,\n        data: JSON.stringify(this.init).replace(/\\\\\"/g, '\"'),\n      },\n      this.provider,\n      TxStatus.Initialised,\n      toDs,\n    );\n\n    try {\n      this.address = await this.prepare(tx);\n      this.status =\n        this.address === undefined\n          ? ContractStatus.Rejected\n          : ContractStatus.Initialised;\n      return [tx, this];\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * deploy\n   *\n   * @param {DeployParams} params\n   * @returns {Promise<Contract>}\n   */\n  async deploy(\n    params: DeployParams,\n    attempts: number = 33,\n    interval: number = 1000,\n    toDs: boolean = false,\n  ): Promise<[Transaction, Contract]> {\n    if (!this.code || !this.init) {\n      throw new Error(\n        'Cannot deploy without code or initialisation parameters.',\n      );\n    }\n\n    try {\n      const tx = await this.prepareTx(\n        new Transaction(\n          {\n            ...params,\n            toAddr: NIL_ADDRESS,\n            amount: new BN(0),\n            code: this.code,\n            data: JSON.stringify(this.init).replace(/\\\\\"/g, '\"'),\n          },\n          this.provider,\n          TxStatus.Initialised,\n          toDs,\n        ),\n        attempts,\n        interval,\n        true,\n      );\n\n      if (tx.isRejected()) {\n        this.status = ContractStatus.Rejected;\n        this.address = undefined;\n        return [tx, this];\n      }\n\n      this.status = ContractStatus.Deployed;\n      this.address =\n        this.address && isValidChecksumAddress(this.address)\n          ? this.address\n          : Contracts.getAddressForContract(tx);\n\n      return [tx, this];\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async callWithoutConfirm(\n    transition: string,\n    args: Value[],\n    params: CallParams,\n    toDs: boolean = false,\n  ): Promise<Transaction> {\n    const data = {\n      _tag: transition,\n      params: args,\n    };\n\n    if (this.error) {\n      return Promise.reject(this.error);\n    }\n\n    if (!this.address) {\n      return Promise.reject('Contract has not been deployed!');\n    }\n\n    const tx = new Transaction(\n      {\n        ...params,\n        toAddr: this.address,\n        data: JSON.stringify(data),\n      },\n      this.provider,\n      TxStatus.Initialised,\n      toDs,\n    );\n\n    try {\n      await this.prepare(tx);\n      return tx;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * call\n   *\n   * @param {string} transition\n   * @param {any} params\n   * @returns {Promise<Transaction>}\n   */\n  async call(\n    transition: string,\n    args: Value[],\n    params: CallParams,\n    attempts: number = 33,\n    interval: number = 1000,\n    toDs: boolean = false,\n  ): Promise<Transaction> {\n    const data = {\n      _tag: transition,\n      params: args,\n    };\n\n    if (this.error) {\n      return Promise.reject(this.error);\n    }\n\n    if (!this.address) {\n      return Promise.reject('Contract has not been deployed!');\n    }\n\n    try {\n      return await this.prepareTx(\n        new Transaction(\n          {\n            ...params,\n            toAddr: this.address,\n            data: JSON.stringify(data),\n          },\n          this.provider,\n          TxStatus.Initialised,\n          toDs,\n        ),\n        attempts,\n        interval,\n        false,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n  async getState(): Promise<State> {\n    if (this.status !== ContractStatus.Deployed) {\n      return Promise.resolve([]);\n    }\n\n    if (!this.address) {\n      throw new Error('Cannot get state of uninitialised contract');\n    }\n\n    const response = await this.provider.send(\n      RPCMethod.GetSmartContractState,\n      this.address.replace('0x', '').toLowerCase(),\n    );\n\n    return response.result;\n  }\n\n  // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n  /**\n   * getSubState\n   *\n   * @param { string } variableName - variable name within the state\n   * @param { string[] } indices -  (optional) If the variable is of map type, you can specify an index (or indices)\n   * @returns {Promise<RPCResponse<any, string>>}\n   */\n\n  async getSubState(variableName: string, indices?: string[]): Promise<State> {\n    if (this.status !== ContractStatus.Deployed) {\n      return Promise.resolve([]);\n    }\n\n    if (!this.address) {\n      throw new Error('Cannot get state of uninitialised contract');\n    }\n\n    if (!variableName) {\n      throw new Error('Variable name required');\n    }\n\n    const response = await this.provider.send(\n      RPCMethod.GetSmartContractSubState,\n      this.address.replace('0x', '').toLowerCase(),\n      variableName,\n      indices === undefined ? [] : indices,\n    );\n\n    return response.result;\n  }\n\n  // FIXME: Link to @zilliqa-js/blockchain package (reuse code)\n\n  async getInit(): Promise<State> {\n    if (this.status !== ContractStatus.Deployed) {\n      return Promise.resolve([]);\n    }\n\n    if (!this.address) {\n      throw new Error('Cannot get state of uninitialised contract');\n    }\n\n    const response = await this.provider.send(\n      RPCMethod.GetSmartContractInit,\n      this.address.replace('0x', '').toLowerCase(),\n    );\n\n    return response.result;\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport hash from 'hash.js';\n\nimport { Wallet, Transaction, util } from '@zilliqa-js/account';\nimport { toChecksumAddress } from '@zilliqa-js/crypto';\nimport { Provider, RPCMethod, ZilliqaModule } from '@zilliqa-js/core';\nimport { bytes } from '@zilliqa-js/util';\n\nimport { Contract } from './contract';\nimport { ABI, Init, State } from './types';\n\n/**\n * Contracts\n *\n * Unlike most zilliqa-js modules, `Contracts` is a factory class.\n * As a result, individual `Contract` instances are instead obtained by\n * calling `Contracts.at` (for an already-deployed contract) and\n * `Contracts.new` (to deploy a new contract).\n */\nexport class Contracts implements ZilliqaModule {\n  /**\n   * getAddressForContract\n   *\n   * @static\n   * @param {Transaction} tx - transaction used to create the contract\n   * @returns {string} - the contract address\n   */\n  static getAddressForContract(tx: Transaction): string {\n    // always subtract 1 from the tx nonce, as contract addresses are computed\n    // based on the nonce in the global state.\n    const nonce = tx.txParams.nonce ? tx.txParams.nonce - 1 : 0;\n\n    return toChecksumAddress(\n      hash\n        .sha256()\n        .update(tx.senderAddress.replace('0x', '').toLowerCase(), 'hex')\n        .update(bytes.intToHexArray(nonce, 16).join(''), 'hex')\n        .digest('hex')\n        .slice(24),\n    );\n  }\n\n  provider: Provider;\n  signer: Wallet;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.provider.middleware.request.use(\n      util.formatOutgoingTx,\n      RPCMethod.CreateTransaction,\n    );\n    this.signer = signer;\n  }\n\n  at(\n    address: string,\n    abi?: ABI,\n    code?: string,\n    init?: Init,\n    state?: State,\n  ): Contract {\n    return new Contract(this, code, abi, address, init, state);\n  }\n\n  new(code: string, init: Init, abi?: ABI): Contract {\n    return new Contract(this, code, abi, undefined, init);\n  }\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Omit } from 'utility-types';\nimport { TxParams } from '@zilliqa-js/account';\n\nexport const enum ContractStatus {\n  Deployed,\n  Rejected,\n  Initialised,\n}\n\nexport type DeployParams = Omit<\n  TxParams,\n  'toAddr' | 'amount' | 'code' | 'data' | 'receipt' | 'signature'\n>;\n\nexport type CallParams = Omit<\n  TxParams,\n  'toAddr' | 'data' | 'code' | 'receipt' | 'signature'\n>;\n\nexport interface ContractObj {\n  address: string;\n  abi: ABI;\n  init: any;\n  state: any;\n}\n\nexport interface Transition {\n  vname: string;\n  params: Field[];\n}\n\n/**\n * Interface for ABI returned by scilla-checker\n */\nexport interface ABI {\n  scilla_major_version: number;\n  vname: string;\n  fields: Field[];\n  params: Field[];\n  transitions: Transition[];\n}\n\nexport interface Field {\n  vname: string;\n  type: string;\n  depth?: number;\n}\n\nexport interface Value {\n  vname: string;\n  type: string;\n  value: string | ADTValue;\n}\n\ninterface ADTValue {\n  constructor: string;\n  argtypes: string[];\n  arguments: Value[];\n}\n\nexport type Param = Value;\nexport type TransitionParam = Value;\n\nexport type Init = Value[];\n\n// Post v5.0.0 upgrade\nexport type State = any;\n\nexport interface TransitionPayload {\n  // the name of the transtion to be called\n  _tag: string;\n  // amount to send to the contract, if any\n  _amount: string;\n  params: Value[];\n}\n\n// RPC Error Responses\nexport type DeployError =\n  | 'Code is empty and To addr is null'\n  | 'To Addr is null'\n  | 'Non - contract address called'\n  | 'Could not create Transaction'\n  | 'Unable to process';\n\nexport interface DeploySuccess {\n  TranID: string;\n  Info: string;\n  ContractAddress?: string;\n}\n","//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//   This program is distributed in the hope that it will be useful,\n//   but WITHOUT ANY WARRANTY; without even the implied warranty of\n//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//   GNU General Public License for more details.\n//\n//   You should have received a copy of the GNU General Public License\n//   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './factory';\nexport * from './contract';\nexport * from './types';\n"]},"metadata":{},"sourceType":"script"}