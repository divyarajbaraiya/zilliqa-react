{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.ZilliqaMessage = function () {\n  /**\n   * Namespace ZilliqaMessage.\n   * @exports ZilliqaMessage\n   * @namespace\n   */\n  var ZilliqaMessage = {};\n\n  ZilliqaMessage.ByteArray = function () {\n    /**\n     * Properties of a ByteArray.\n     * @memberof ZilliqaMessage\n     * @interface IByteArray\n     * @property {Uint8Array} data ByteArray data\n     */\n\n    /**\n     * Constructs a new ByteArray.\n     * @memberof ZilliqaMessage\n     * @classdesc Represents a ByteArray.\n     * @implements IByteArray\n     * @constructor\n     * @param {ZilliqaMessage.IByteArray=} [properties] Properties to set\n     */\n    function ByteArray(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\n     * ByteArray data.\n     * @member {Uint8Array} data\n     * @memberof ZilliqaMessage.ByteArray\n     * @instance\n     */\n\n\n    ByteArray.prototype.data = $util.newBuffer([]);\n    /**\n     * Creates a new ByteArray instance using the specified properties.\n     * @function create\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {ZilliqaMessage.IByteArray=} [properties] Properties to set\n     * @returns {ZilliqaMessage.ByteArray} ByteArray instance\n     */\n\n    ByteArray.create = function create(properties) {\n      return new ByteArray(properties);\n    };\n    /**\n     * Encodes the specified ByteArray message. Does not implicitly {@link ZilliqaMessage.ByteArray.verify|verify} messages.\n     * @function encode\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {ZilliqaMessage.IByteArray} message ByteArray message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ByteArray.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      writer.uint32(\n      /* id 1, wireType 2 =*/\n      10).bytes(message.data);\n      return writer;\n    };\n    /**\n     * Encodes the specified ByteArray message, length delimited. Does not implicitly {@link ZilliqaMessage.ByteArray.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {ZilliqaMessage.IByteArray} message ByteArray message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ByteArray.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a ByteArray message from the specified reader or buffer.\n     * @function decode\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ZilliqaMessage.ByteArray} ByteArray\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ByteArray.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ZilliqaMessage.ByteArray();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.data = reader.bytes();\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      if (!message.hasOwnProperty(\"data\")) throw $util.ProtocolError(\"missing required 'data'\", {\n        instance: message\n      });\n      return message;\n    };\n    /**\n     * Decodes a ByteArray message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ZilliqaMessage.ByteArray} ByteArray\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ByteArray.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a ByteArray message.\n     * @function verify\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n\n\n    ByteArray.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data))) return \"data: buffer expected\";\n      return null;\n    };\n    /**\n     * Creates a ByteArray message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ZilliqaMessage.ByteArray} ByteArray\n     */\n\n\n    ByteArray.fromObject = function fromObject(object) {\n      if (object instanceof $root.ZilliqaMessage.ByteArray) return object;\n      var message = new $root.ZilliqaMessage.ByteArray();\n      if (object.data != null) if (typeof object.data === \"string\") $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);else if (object.data.length) message.data = object.data;\n      return message;\n    };\n    /**\n     * Creates a plain object from a ByteArray message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ZilliqaMessage.ByteArray\n     * @static\n     * @param {ZilliqaMessage.ByteArray} message ByteArray\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    ByteArray.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n      if (options.defaults) if (options.bytes === String) object.data = \"\";else {\n        object.data = [];\n        if (options.bytes !== Array) object.data = $util.newBuffer(object.data);\n      }\n      if (message.data != null && message.hasOwnProperty(\"data\")) object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n      return object;\n    };\n    /**\n     * Converts this ByteArray to JSON.\n     * @function toJSON\n     * @memberof ZilliqaMessage.ByteArray\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    ByteArray.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ByteArray;\n  }();\n\n  ZilliqaMessage.ProtoTransactionCoreInfo = function () {\n    /**\n     * Properties of a ProtoTransactionCoreInfo.\n     * @memberof ZilliqaMessage\n     * @interface IProtoTransactionCoreInfo\n     * @property {number|null} [version] ProtoTransactionCoreInfo version\n     * @property {number|Long|null} [nonce] ProtoTransactionCoreInfo nonce\n     * @property {Uint8Array|null} [toaddr] ProtoTransactionCoreInfo toaddr\n     * @property {ZilliqaMessage.IByteArray|null} [senderpubkey] ProtoTransactionCoreInfo senderpubkey\n     * @property {ZilliqaMessage.IByteArray|null} [amount] ProtoTransactionCoreInfo amount\n     * @property {ZilliqaMessage.IByteArray|null} [gasprice] ProtoTransactionCoreInfo gasprice\n     * @property {number|Long|null} [gaslimit] ProtoTransactionCoreInfo gaslimit\n     * @property {Uint8Array|null} [code] ProtoTransactionCoreInfo code\n     * @property {Uint8Array|null} [data] ProtoTransactionCoreInfo data\n     */\n\n    /**\n     * Constructs a new ProtoTransactionCoreInfo.\n     * @memberof ZilliqaMessage\n     * @classdesc Represents a ProtoTransactionCoreInfo.\n     * @implements IProtoTransactionCoreInfo\n     * @constructor\n     * @param {ZilliqaMessage.IProtoTransactionCoreInfo=} [properties] Properties to set\n     */\n    function ProtoTransactionCoreInfo(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\n     * ProtoTransactionCoreInfo version.\n     * @member {number} version\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n\n    ProtoTransactionCoreInfo.prototype.version = 0;\n    /**\n     * ProtoTransactionCoreInfo nonce.\n     * @member {number|Long} nonce\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * ProtoTransactionCoreInfo toaddr.\n     * @member {Uint8Array} toaddr\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.toaddr = $util.newBuffer([]);\n    /**\n     * ProtoTransactionCoreInfo senderpubkey.\n     * @member {ZilliqaMessage.IByteArray|null|undefined} senderpubkey\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.senderpubkey = null;\n    /**\n     * ProtoTransactionCoreInfo amount.\n     * @member {ZilliqaMessage.IByteArray|null|undefined} amount\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.amount = null;\n    /**\n     * ProtoTransactionCoreInfo gasprice.\n     * @member {ZilliqaMessage.IByteArray|null|undefined} gasprice\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.gasprice = null;\n    /**\n     * ProtoTransactionCoreInfo gaslimit.\n     * @member {number|Long} gaslimit\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.gaslimit = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * ProtoTransactionCoreInfo code.\n     * @member {Uint8Array} code\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.code = $util.newBuffer([]);\n    /**\n     * ProtoTransactionCoreInfo data.\n     * @member {Uint8Array} data\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     */\n\n    ProtoTransactionCoreInfo.prototype.data = $util.newBuffer([]);\n    /**\n     * Creates a new ProtoTransactionCoreInfo instance using the specified properties.\n     * @function create\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionCoreInfo=} [properties] Properties to set\n     * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo instance\n     */\n\n    ProtoTransactionCoreInfo.create = function create(properties) {\n      return new ProtoTransactionCoreInfo(properties);\n    };\n    /**\n     * Encodes the specified ProtoTransactionCoreInfo message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionCoreInfo.verify|verify} messages.\n     * @function encode\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionCoreInfo} message ProtoTransactionCoreInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionCoreInfo.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.version != null && message.hasOwnProperty(\"version\")) writer.uint32(\n      /* id 1, wireType 0 =*/\n      8).uint32(message.version);\n      if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n      /* id 2, wireType 0 =*/\n      16).uint64(message.nonce);\n      if (message.toaddr != null && message.hasOwnProperty(\"toaddr\")) writer.uint32(\n      /* id 3, wireType 2 =*/\n      26).bytes(message.toaddr);\n      if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\")) $root.ZilliqaMessage.ByteArray.encode(message.senderpubkey, writer.uint32(\n      /* id 4, wireType 2 =*/\n      34).fork()).ldelim();\n      if (message.amount != null && message.hasOwnProperty(\"amount\")) $root.ZilliqaMessage.ByteArray.encode(message.amount, writer.uint32(\n      /* id 5, wireType 2 =*/\n      42).fork()).ldelim();\n      if (message.gasprice != null && message.hasOwnProperty(\"gasprice\")) $root.ZilliqaMessage.ByteArray.encode(message.gasprice, writer.uint32(\n      /* id 6, wireType 2 =*/\n      50).fork()).ldelim();\n      if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\")) writer.uint32(\n      /* id 7, wireType 0 =*/\n      56).uint64(message.gaslimit);\n      if (message.code != null && message.hasOwnProperty(\"code\")) writer.uint32(\n      /* id 8, wireType 2 =*/\n      66).bytes(message.code);\n      if (message.data != null && message.hasOwnProperty(\"data\")) writer.uint32(\n      /* id 9, wireType 2 =*/\n      74).bytes(message.data);\n      return writer;\n    };\n    /**\n     * Encodes the specified ProtoTransactionCoreInfo message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionCoreInfo.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionCoreInfo} message ProtoTransactionCoreInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionCoreInfo.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a ProtoTransactionCoreInfo message from the specified reader or buffer.\n     * @function decode\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionCoreInfo.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ZilliqaMessage.ProtoTransactionCoreInfo();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.version = reader.uint32();\n            break;\n\n          case 2:\n            message.nonce = reader.uint64();\n            break;\n\n          case 3:\n            message.toaddr = reader.bytes();\n            break;\n\n          case 4:\n            message.senderpubkey = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n            break;\n\n          case 5:\n            message.amount = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n            break;\n\n          case 6:\n            message.gasprice = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n            break;\n\n          case 7:\n            message.gaslimit = reader.uint64();\n            break;\n\n          case 8:\n            message.code = reader.bytes();\n            break;\n\n          case 9:\n            message.data = reader.bytes();\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      return message;\n    };\n    /**\n     * Decodes a ProtoTransactionCoreInfo message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionCoreInfo.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a ProtoTransactionCoreInfo message.\n     * @function verify\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n\n\n    ProtoTransactionCoreInfo.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (message.version != null && message.hasOwnProperty(\"version\")) if (!$util.isInteger(message.version)) return \"version: integer expected\";\n      if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n      if (message.toaddr != null && message.hasOwnProperty(\"toaddr\")) if (!(message.toaddr && typeof message.toaddr.length === \"number\" || $util.isString(message.toaddr))) return \"toaddr: buffer expected\";\n\n      if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\")) {\n        var error = $root.ZilliqaMessage.ByteArray.verify(message.senderpubkey);\n        if (error) return \"senderpubkey.\" + error;\n      }\n\n      if (message.amount != null && message.hasOwnProperty(\"amount\")) {\n        var error = $root.ZilliqaMessage.ByteArray.verify(message.amount);\n        if (error) return \"amount.\" + error;\n      }\n\n      if (message.gasprice != null && message.hasOwnProperty(\"gasprice\")) {\n        var error = $root.ZilliqaMessage.ByteArray.verify(message.gasprice);\n        if (error) return \"gasprice.\" + error;\n      }\n\n      if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\")) if (!$util.isInteger(message.gaslimit) && !(message.gaslimit && $util.isInteger(message.gaslimit.low) && $util.isInteger(message.gaslimit.high))) return \"gaslimit: integer|Long expected\";\n      if (message.code != null && message.hasOwnProperty(\"code\")) if (!(message.code && typeof message.code.length === \"number\" || $util.isString(message.code))) return \"code: buffer expected\";\n      if (message.data != null && message.hasOwnProperty(\"data\")) if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data))) return \"data: buffer expected\";\n      return null;\n    };\n    /**\n     * Creates a ProtoTransactionCoreInfo message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n     */\n\n\n    ProtoTransactionCoreInfo.fromObject = function fromObject(object) {\n      if (object instanceof $root.ZilliqaMessage.ProtoTransactionCoreInfo) return object;\n      var message = new $root.ZilliqaMessage.ProtoTransactionCoreInfo();\n      if (object.version != null) message.version = object.version >>> 0;\n      if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n      if (object.toaddr != null) if (typeof object.toaddr === \"string\") $util.base64.decode(object.toaddr, message.toaddr = $util.newBuffer($util.base64.length(object.toaddr)), 0);else if (object.toaddr.length) message.toaddr = object.toaddr;\n\n      if (object.senderpubkey != null) {\n        if (typeof object.senderpubkey !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.senderpubkey: object expected\");\n        message.senderpubkey = $root.ZilliqaMessage.ByteArray.fromObject(object.senderpubkey);\n      }\n\n      if (object.amount != null) {\n        if (typeof object.amount !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.amount: object expected\");\n        message.amount = $root.ZilliqaMessage.ByteArray.fromObject(object.amount);\n      }\n\n      if (object.gasprice != null) {\n        if (typeof object.gasprice !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.gasprice: object expected\");\n        message.gasprice = $root.ZilliqaMessage.ByteArray.fromObject(object.gasprice);\n      }\n\n      if (object.gaslimit != null) if ($util.Long) (message.gaslimit = $util.Long.fromValue(object.gaslimit)).unsigned = true;else if (typeof object.gaslimit === \"string\") message.gaslimit = parseInt(object.gaslimit, 10);else if (typeof object.gaslimit === \"number\") message.gaslimit = object.gaslimit;else if (typeof object.gaslimit === \"object\") message.gaslimit = new $util.LongBits(object.gaslimit.low >>> 0, object.gaslimit.high >>> 0).toNumber(true);\n      if (object.code != null) if (typeof object.code === \"string\") $util.base64.decode(object.code, message.code = $util.newBuffer($util.base64.length(object.code)), 0);else if (object.code.length) message.code = object.code;\n      if (object.data != null) if (typeof object.data === \"string\") $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);else if (object.data.length) message.data = object.data;\n      return message;\n    };\n    /**\n     * Creates a plain object from a ProtoTransactionCoreInfo message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @static\n     * @param {ZilliqaMessage.ProtoTransactionCoreInfo} message ProtoTransactionCoreInfo\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    ProtoTransactionCoreInfo.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n\n      if (options.defaults) {\n        object.version = 0;\n\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.nonce = options.longs === String ? \"0\" : 0;\n\n        if (options.bytes === String) object.toaddr = \"\";else {\n          object.toaddr = [];\n          if (options.bytes !== Array) object.toaddr = $util.newBuffer(object.toaddr);\n        }\n        object.senderpubkey = null;\n        object.amount = null;\n        object.gasprice = null;\n\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.gaslimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.gaslimit = options.longs === String ? \"0\" : 0;\n\n        if (options.bytes === String) object.code = \"\";else {\n          object.code = [];\n          if (options.bytes !== Array) object.code = $util.newBuffer(object.code);\n        }\n        if (options.bytes === String) object.data = \"\";else {\n          object.data = [];\n          if (options.bytes !== Array) object.data = $util.newBuffer(object.data);\n        }\n      }\n\n      if (message.version != null && message.hasOwnProperty(\"version\")) object.version = message.version;\n      if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n      if (message.toaddr != null && message.hasOwnProperty(\"toaddr\")) object.toaddr = options.bytes === String ? $util.base64.encode(message.toaddr, 0, message.toaddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.toaddr) : message.toaddr;\n      if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\")) object.senderpubkey = $root.ZilliqaMessage.ByteArray.toObject(message.senderpubkey, options);\n      if (message.amount != null && message.hasOwnProperty(\"amount\")) object.amount = $root.ZilliqaMessage.ByteArray.toObject(message.amount, options);\n      if (message.gasprice != null && message.hasOwnProperty(\"gasprice\")) object.gasprice = $root.ZilliqaMessage.ByteArray.toObject(message.gasprice, options);\n      if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\")) if (typeof message.gaslimit === \"number\") object.gaslimit = options.longs === String ? String(message.gaslimit) : message.gaslimit;else object.gaslimit = options.longs === String ? $util.Long.prototype.toString.call(message.gaslimit) : options.longs === Number ? new $util.LongBits(message.gaslimit.low >>> 0, message.gaslimit.high >>> 0).toNumber(true) : message.gaslimit;\n      if (message.code != null && message.hasOwnProperty(\"code\")) object.code = options.bytes === String ? $util.base64.encode(message.code, 0, message.code.length) : options.bytes === Array ? Array.prototype.slice.call(message.code) : message.code;\n      if (message.data != null && message.hasOwnProperty(\"data\")) object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n      return object;\n    };\n    /**\n     * Converts this ProtoTransactionCoreInfo to JSON.\n     * @function toJSON\n     * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    ProtoTransactionCoreInfo.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ProtoTransactionCoreInfo;\n  }();\n\n  ZilliqaMessage.ProtoTransaction = function () {\n    /**\n     * Properties of a ProtoTransaction.\n     * @memberof ZilliqaMessage\n     * @interface IProtoTransaction\n     * @property {Uint8Array|null} [tranid] ProtoTransaction tranid\n     * @property {ZilliqaMessage.IProtoTransactionCoreInfo|null} [info] ProtoTransaction info\n     * @property {ZilliqaMessage.IByteArray|null} [signature] ProtoTransaction signature\n     */\n\n    /**\n     * Constructs a new ProtoTransaction.\n     * @memberof ZilliqaMessage\n     * @classdesc Represents a ProtoTransaction.\n     * @implements IProtoTransaction\n     * @constructor\n     * @param {ZilliqaMessage.IProtoTransaction=} [properties] Properties to set\n     */\n    function ProtoTransaction(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\n     * ProtoTransaction tranid.\n     * @member {Uint8Array} tranid\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @instance\n     */\n\n\n    ProtoTransaction.prototype.tranid = $util.newBuffer([]);\n    /**\n     * ProtoTransaction info.\n     * @member {ZilliqaMessage.IProtoTransactionCoreInfo|null|undefined} info\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @instance\n     */\n\n    ProtoTransaction.prototype.info = null;\n    /**\n     * ProtoTransaction signature.\n     * @member {ZilliqaMessage.IByteArray|null|undefined} signature\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @instance\n     */\n\n    ProtoTransaction.prototype.signature = null;\n    /**\n     * Creates a new ProtoTransaction instance using the specified properties.\n     * @function create\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {ZilliqaMessage.IProtoTransaction=} [properties] Properties to set\n     * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction instance\n     */\n\n    ProtoTransaction.create = function create(properties) {\n      return new ProtoTransaction(properties);\n    };\n    /**\n     * Encodes the specified ProtoTransaction message. Does not implicitly {@link ZilliqaMessage.ProtoTransaction.verify|verify} messages.\n     * @function encode\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {ZilliqaMessage.IProtoTransaction} message ProtoTransaction message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransaction.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.tranid != null && message.hasOwnProperty(\"tranid\")) writer.uint32(\n      /* id 1, wireType 2 =*/\n      10).bytes(message.tranid);\n      if (message.info != null && message.hasOwnProperty(\"info\")) $root.ZilliqaMessage.ProtoTransactionCoreInfo.encode(message.info, writer.uint32(\n      /* id 2, wireType 2 =*/\n      18).fork()).ldelim();\n      if (message.signature != null && message.hasOwnProperty(\"signature\")) $root.ZilliqaMessage.ByteArray.encode(message.signature, writer.uint32(\n      /* id 3, wireType 2 =*/\n      26).fork()).ldelim();\n      return writer;\n    };\n    /**\n     * Encodes the specified ProtoTransaction message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransaction.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {ZilliqaMessage.IProtoTransaction} message ProtoTransaction message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a ProtoTransaction message from the specified reader or buffer.\n     * @function decode\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransaction.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ZilliqaMessage.ProtoTransaction();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.tranid = reader.bytes();\n            break;\n\n          case 2:\n            message.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.decode(reader, reader.uint32());\n            break;\n\n          case 3:\n            message.signature = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      return message;\n    };\n    /**\n     * Decodes a ProtoTransaction message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransaction.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a ProtoTransaction message.\n     * @function verify\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n\n\n    ProtoTransaction.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (message.tranid != null && message.hasOwnProperty(\"tranid\")) if (!(message.tranid && typeof message.tranid.length === \"number\" || $util.isString(message.tranid))) return \"tranid: buffer expected\";\n\n      if (message.info != null && message.hasOwnProperty(\"info\")) {\n        var error = $root.ZilliqaMessage.ProtoTransactionCoreInfo.verify(message.info);\n        if (error) return \"info.\" + error;\n      }\n\n      if (message.signature != null && message.hasOwnProperty(\"signature\")) {\n        var error = $root.ZilliqaMessage.ByteArray.verify(message.signature);\n        if (error) return \"signature.\" + error;\n      }\n\n      return null;\n    };\n    /**\n     * Creates a ProtoTransaction message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n     */\n\n\n    ProtoTransaction.fromObject = function fromObject(object) {\n      if (object instanceof $root.ZilliqaMessage.ProtoTransaction) return object;\n      var message = new $root.ZilliqaMessage.ProtoTransaction();\n      if (object.tranid != null) if (typeof object.tranid === \"string\") $util.base64.decode(object.tranid, message.tranid = $util.newBuffer($util.base64.length(object.tranid)), 0);else if (object.tranid.length) message.tranid = object.tranid;\n\n      if (object.info != null) {\n        if (typeof object.info !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransaction.info: object expected\");\n        message.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.fromObject(object.info);\n      }\n\n      if (object.signature != null) {\n        if (typeof object.signature !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransaction.signature: object expected\");\n        message.signature = $root.ZilliqaMessage.ByteArray.fromObject(object.signature);\n      }\n\n      return message;\n    };\n    /**\n     * Creates a plain object from a ProtoTransaction message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @static\n     * @param {ZilliqaMessage.ProtoTransaction} message ProtoTransaction\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    ProtoTransaction.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n\n      if (options.defaults) {\n        if (options.bytes === String) object.tranid = \"\";else {\n          object.tranid = [];\n          if (options.bytes !== Array) object.tranid = $util.newBuffer(object.tranid);\n        }\n        object.info = null;\n        object.signature = null;\n      }\n\n      if (message.tranid != null && message.hasOwnProperty(\"tranid\")) object.tranid = options.bytes === String ? $util.base64.encode(message.tranid, 0, message.tranid.length) : options.bytes === Array ? Array.prototype.slice.call(message.tranid) : message.tranid;\n      if (message.info != null && message.hasOwnProperty(\"info\")) object.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.toObject(message.info, options);\n      if (message.signature != null && message.hasOwnProperty(\"signature\")) object.signature = $root.ZilliqaMessage.ByteArray.toObject(message.signature, options);\n      return object;\n    };\n    /**\n     * Converts this ProtoTransaction to JSON.\n     * @function toJSON\n     * @memberof ZilliqaMessage.ProtoTransaction\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    ProtoTransaction.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ProtoTransaction;\n  }();\n\n  ZilliqaMessage.ProtoTransactionReceipt = function () {\n    /**\n     * Properties of a ProtoTransactionReceipt.\n     * @memberof ZilliqaMessage\n     * @interface IProtoTransactionReceipt\n     * @property {Uint8Array|null} [receipt] ProtoTransactionReceipt receipt\n     * @property {number|Long|null} [cumgas] ProtoTransactionReceipt cumgas\n     */\n\n    /**\n     * Constructs a new ProtoTransactionReceipt.\n     * @memberof ZilliqaMessage\n     * @classdesc Represents a ProtoTransactionReceipt.\n     * @implements IProtoTransactionReceipt\n     * @constructor\n     * @param {ZilliqaMessage.IProtoTransactionReceipt=} [properties] Properties to set\n     */\n    function ProtoTransactionReceipt(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\n     * ProtoTransactionReceipt receipt.\n     * @member {Uint8Array} receipt\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @instance\n     */\n\n\n    ProtoTransactionReceipt.prototype.receipt = $util.newBuffer([]);\n    /**\n     * ProtoTransactionReceipt cumgas.\n     * @member {number|Long} cumgas\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @instance\n     */\n\n    ProtoTransactionReceipt.prototype.cumgas = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * Creates a new ProtoTransactionReceipt instance using the specified properties.\n     * @function create\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionReceipt=} [properties] Properties to set\n     * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt instance\n     */\n\n    ProtoTransactionReceipt.create = function create(properties) {\n      return new ProtoTransactionReceipt(properties);\n    };\n    /**\n     * Encodes the specified ProtoTransactionReceipt message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionReceipt.verify|verify} messages.\n     * @function encode\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionReceipt} message ProtoTransactionReceipt message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionReceipt.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) writer.uint32(\n      /* id 1, wireType 2 =*/\n      10).bytes(message.receipt);\n      if (message.cumgas != null && message.hasOwnProperty(\"cumgas\")) writer.uint32(\n      /* id 2, wireType 0 =*/\n      16).uint64(message.cumgas);\n      return writer;\n    };\n    /**\n     * Encodes the specified ProtoTransactionReceipt message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionReceipt.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionReceipt} message ProtoTransactionReceipt message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionReceipt.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a ProtoTransactionReceipt message from the specified reader or buffer.\n     * @function decode\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionReceipt.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ZilliqaMessage.ProtoTransactionReceipt();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.receipt = reader.bytes();\n            break;\n\n          case 2:\n            message.cumgas = reader.uint64();\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      return message;\n    };\n    /**\n     * Decodes a ProtoTransactionReceipt message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionReceipt.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a ProtoTransactionReceipt message.\n     * @function verify\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n\n\n    ProtoTransactionReceipt.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) if (!(message.receipt && typeof message.receipt.length === \"number\" || $util.isString(message.receipt))) return \"receipt: buffer expected\";\n      if (message.cumgas != null && message.hasOwnProperty(\"cumgas\")) if (!$util.isInteger(message.cumgas) && !(message.cumgas && $util.isInteger(message.cumgas.low) && $util.isInteger(message.cumgas.high))) return \"cumgas: integer|Long expected\";\n      return null;\n    };\n    /**\n     * Creates a ProtoTransactionReceipt message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n     */\n\n\n    ProtoTransactionReceipt.fromObject = function fromObject(object) {\n      if (object instanceof $root.ZilliqaMessage.ProtoTransactionReceipt) return object;\n      var message = new $root.ZilliqaMessage.ProtoTransactionReceipt();\n      if (object.receipt != null) if (typeof object.receipt === \"string\") $util.base64.decode(object.receipt, message.receipt = $util.newBuffer($util.base64.length(object.receipt)), 0);else if (object.receipt.length) message.receipt = object.receipt;\n      if (object.cumgas != null) if ($util.Long) (message.cumgas = $util.Long.fromValue(object.cumgas)).unsigned = true;else if (typeof object.cumgas === \"string\") message.cumgas = parseInt(object.cumgas, 10);else if (typeof object.cumgas === \"number\") message.cumgas = object.cumgas;else if (typeof object.cumgas === \"object\") message.cumgas = new $util.LongBits(object.cumgas.low >>> 0, object.cumgas.high >>> 0).toNumber(true);\n      return message;\n    };\n    /**\n     * Creates a plain object from a ProtoTransactionReceipt message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @static\n     * @param {ZilliqaMessage.ProtoTransactionReceipt} message ProtoTransactionReceipt\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    ProtoTransactionReceipt.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n\n      if (options.defaults) {\n        if (options.bytes === String) object.receipt = \"\";else {\n          object.receipt = [];\n          if (options.bytes !== Array) object.receipt = $util.newBuffer(object.receipt);\n        }\n\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.cumgas = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.cumgas = options.longs === String ? \"0\" : 0;\n      }\n\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) object.receipt = options.bytes === String ? $util.base64.encode(message.receipt, 0, message.receipt.length) : options.bytes === Array ? Array.prototype.slice.call(message.receipt) : message.receipt;\n      if (message.cumgas != null && message.hasOwnProperty(\"cumgas\")) if (typeof message.cumgas === \"number\") object.cumgas = options.longs === String ? String(message.cumgas) : message.cumgas;else object.cumgas = options.longs === String ? $util.Long.prototype.toString.call(message.cumgas) : options.longs === Number ? new $util.LongBits(message.cumgas.low >>> 0, message.cumgas.high >>> 0).toNumber(true) : message.cumgas;\n      return object;\n    };\n    /**\n     * Converts this ProtoTransactionReceipt to JSON.\n     * @function toJSON\n     * @memberof ZilliqaMessage.ProtoTransactionReceipt\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    ProtoTransactionReceipt.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ProtoTransactionReceipt;\n  }();\n\n  ZilliqaMessage.ProtoTransactionWithReceipt = function () {\n    /**\n     * Properties of a ProtoTransactionWithReceipt.\n     * @memberof ZilliqaMessage\n     * @interface IProtoTransactionWithReceipt\n     * @property {ZilliqaMessage.IProtoTransaction|null} [transaction] ProtoTransactionWithReceipt transaction\n     * @property {ZilliqaMessage.IProtoTransactionReceipt|null} [receipt] ProtoTransactionWithReceipt receipt\n     */\n\n    /**\n     * Constructs a new ProtoTransactionWithReceipt.\n     * @memberof ZilliqaMessage\n     * @classdesc Represents a ProtoTransactionWithReceipt.\n     * @implements IProtoTransactionWithReceipt\n     * @constructor\n     * @param {ZilliqaMessage.IProtoTransactionWithReceipt=} [properties] Properties to set\n     */\n    function ProtoTransactionWithReceipt(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\n     * ProtoTransactionWithReceipt transaction.\n     * @member {ZilliqaMessage.IProtoTransaction|null|undefined} transaction\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @instance\n     */\n\n\n    ProtoTransactionWithReceipt.prototype.transaction = null;\n    /**\n     * ProtoTransactionWithReceipt receipt.\n     * @member {ZilliqaMessage.IProtoTransactionReceipt|null|undefined} receipt\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @instance\n     */\n\n    ProtoTransactionWithReceipt.prototype.receipt = null;\n    /**\n     * Creates a new ProtoTransactionWithReceipt instance using the specified properties.\n     * @function create\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionWithReceipt=} [properties] Properties to set\n     * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt instance\n     */\n\n    ProtoTransactionWithReceipt.create = function create(properties) {\n      return new ProtoTransactionWithReceipt(properties);\n    };\n    /**\n     * Encodes the specified ProtoTransactionWithReceipt message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionWithReceipt.verify|verify} messages.\n     * @function encode\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionWithReceipt} message ProtoTransactionWithReceipt message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionWithReceipt.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.transaction != null && message.hasOwnProperty(\"transaction\")) $root.ZilliqaMessage.ProtoTransaction.encode(message.transaction, writer.uint32(\n      /* id 1, wireType 2 =*/\n      10).fork()).ldelim();\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) $root.ZilliqaMessage.ProtoTransactionReceipt.encode(message.receipt, writer.uint32(\n      /* id 2, wireType 2 =*/\n      18).fork()).ldelim();\n      return writer;\n    };\n    /**\n     * Encodes the specified ProtoTransactionWithReceipt message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionWithReceipt.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {ZilliqaMessage.IProtoTransactionWithReceipt} message ProtoTransactionWithReceipt message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n\n\n    ProtoTransactionWithReceipt.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a ProtoTransactionWithReceipt message from the specified reader or buffer.\n     * @function decode\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionWithReceipt.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ZilliqaMessage.ProtoTransactionWithReceipt();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.transaction = $root.ZilliqaMessage.ProtoTransaction.decode(reader, reader.uint32());\n            break;\n\n          case 2:\n            message.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.decode(reader, reader.uint32());\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      return message;\n    };\n    /**\n     * Decodes a ProtoTransactionWithReceipt message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n\n\n    ProtoTransactionWithReceipt.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a ProtoTransactionWithReceipt message.\n     * @function verify\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n\n\n    ProtoTransactionWithReceipt.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n      if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n        var error = $root.ZilliqaMessage.ProtoTransaction.verify(message.transaction);\n        if (error) return \"transaction.\" + error;\n      }\n\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) {\n        var error = $root.ZilliqaMessage.ProtoTransactionReceipt.verify(message.receipt);\n        if (error) return \"receipt.\" + error;\n      }\n\n      return null;\n    };\n    /**\n     * Creates a ProtoTransactionWithReceipt message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n     */\n\n\n    ProtoTransactionWithReceipt.fromObject = function fromObject(object) {\n      if (object instanceof $root.ZilliqaMessage.ProtoTransactionWithReceipt) return object;\n      var message = new $root.ZilliqaMessage.ProtoTransactionWithReceipt();\n\n      if (object.transaction != null) {\n        if (typeof object.transaction !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransactionWithReceipt.transaction: object expected\");\n        message.transaction = $root.ZilliqaMessage.ProtoTransaction.fromObject(object.transaction);\n      }\n\n      if (object.receipt != null) {\n        if (typeof object.receipt !== \"object\") throw TypeError(\".ZilliqaMessage.ProtoTransactionWithReceipt.receipt: object expected\");\n        message.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.fromObject(object.receipt);\n      }\n\n      return message;\n    };\n    /**\n     * Creates a plain object from a ProtoTransactionWithReceipt message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @static\n     * @param {ZilliqaMessage.ProtoTransactionWithReceipt} message ProtoTransactionWithReceipt\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n\n\n    ProtoTransactionWithReceipt.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n\n      if (options.defaults) {\n        object.transaction = null;\n        object.receipt = null;\n      }\n\n      if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = $root.ZilliqaMessage.ProtoTransaction.toObject(message.transaction, options);\n      if (message.receipt != null && message.hasOwnProperty(\"receipt\")) object.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.toObject(message.receipt, options);\n      return object;\n    };\n    /**\n     * Converts this ProtoTransactionWithReceipt to JSON.\n     * @function toJSON\n     * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n\n\n    ProtoTransactionWithReceipt.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ProtoTransactionWithReceipt;\n  }();\n\n  return ZilliqaMessage;\n}();\n\nmodule.exports = $root;","map":{"version":3,"sources":["/home/webelight1/Documents/Zilliqa/dev-portal-examples/hello-world/node_modules/@zilliqa-js/proto/dist/index.js"],"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","ZilliqaMessage","ByteArray","properties","keys","Object","i","length","prototype","data","newBuffer","create","encode","message","writer","uint32","bytes","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","hasOwnProperty","ProtocolError","instance","decodeDelimited","verify","isString","fromObject","object","base64","toObject","options","defaults","String","Array","slice","call","toJSON","constructor","toJSONOptions","ProtoTransactionCoreInfo","version","nonce","Long","fromBits","toaddr","senderpubkey","amount","gasprice","gaslimit","code","uint64","fork","isInteger","low","high","error","fromValue","unsigned","parseInt","LongBits","toNumber","TypeError","long","longs","toString","Number","ProtoTransaction","tranid","info","signature","ProtoTransactionReceipt","receipt","cumgas","ProtoTransactionWithReceipt","transaction","module","exports"],"mappings":"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","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.ZilliqaMessage = (function() {\n\n    /**\n     * Namespace ZilliqaMessage.\n     * @exports ZilliqaMessage\n     * @namespace\n     */\n    var ZilliqaMessage = {};\n\n    ZilliqaMessage.ByteArray = (function() {\n\n        /**\n         * Properties of a ByteArray.\n         * @memberof ZilliqaMessage\n         * @interface IByteArray\n         * @property {Uint8Array} data ByteArray data\n         */\n\n        /**\n         * Constructs a new ByteArray.\n         * @memberof ZilliqaMessage\n         * @classdesc Represents a ByteArray.\n         * @implements IByteArray\n         * @constructor\n         * @param {ZilliqaMessage.IByteArray=} [properties] Properties to set\n         */\n        function ByteArray(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ByteArray data.\n         * @member {Uint8Array} data\n         * @memberof ZilliqaMessage.ByteArray\n         * @instance\n         */\n        ByteArray.prototype.data = $util.newBuffer([]);\n\n        /**\n         * Creates a new ByteArray instance using the specified properties.\n         * @function create\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {ZilliqaMessage.IByteArray=} [properties] Properties to set\n         * @returns {ZilliqaMessage.ByteArray} ByteArray instance\n         */\n        ByteArray.create = function create(properties) {\n            return new ByteArray(properties);\n        };\n\n        /**\n         * Encodes the specified ByteArray message. Does not implicitly {@link ZilliqaMessage.ByteArray.verify|verify} messages.\n         * @function encode\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {ZilliqaMessage.IByteArray} message ByteArray message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ByteArray.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ByteArray message, length delimited. Does not implicitly {@link ZilliqaMessage.ByteArray.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {ZilliqaMessage.IByteArray} message ByteArray message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ByteArray.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ByteArray message from the specified reader or buffer.\n         * @function decode\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ZilliqaMessage.ByteArray} ByteArray\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ByteArray.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ZilliqaMessage.ByteArray();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            if (!message.hasOwnProperty(\"data\"))\n                throw $util.ProtocolError(\"missing required 'data'\", { instance: message });\n            return message;\n        };\n\n        /**\n         * Decodes a ByteArray message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ZilliqaMessage.ByteArray} ByteArray\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ByteArray.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ByteArray message.\n         * @function verify\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ByteArray.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                return \"data: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ByteArray message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ZilliqaMessage.ByteArray} ByteArray\n         */\n        ByteArray.fromObject = function fromObject(object) {\n            if (object instanceof $root.ZilliqaMessage.ByteArray)\n                return object;\n            var message = new $root.ZilliqaMessage.ByteArray();\n            if (object.data != null)\n                if (typeof object.data === \"string\")\n                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n                else if (object.data.length)\n                    message.data = object.data;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ByteArray message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ZilliqaMessage.ByteArray\n         * @static\n         * @param {ZilliqaMessage.ByteArray} message ByteArray\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ByteArray.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.data = \"\";\n                else {\n                    object.data = [];\n                    if (options.bytes !== Array)\n                        object.data = $util.newBuffer(object.data);\n                }\n            if (message.data != null && message.hasOwnProperty(\"data\"))\n                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n            return object;\n        };\n\n        /**\n         * Converts this ByteArray to JSON.\n         * @function toJSON\n         * @memberof ZilliqaMessage.ByteArray\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ByteArray.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ByteArray;\n    })();\n\n    ZilliqaMessage.ProtoTransactionCoreInfo = (function() {\n\n        /**\n         * Properties of a ProtoTransactionCoreInfo.\n         * @memberof ZilliqaMessage\n         * @interface IProtoTransactionCoreInfo\n         * @property {number|null} [version] ProtoTransactionCoreInfo version\n         * @property {number|Long|null} [nonce] ProtoTransactionCoreInfo nonce\n         * @property {Uint8Array|null} [toaddr] ProtoTransactionCoreInfo toaddr\n         * @property {ZilliqaMessage.IByteArray|null} [senderpubkey] ProtoTransactionCoreInfo senderpubkey\n         * @property {ZilliqaMessage.IByteArray|null} [amount] ProtoTransactionCoreInfo amount\n         * @property {ZilliqaMessage.IByteArray|null} [gasprice] ProtoTransactionCoreInfo gasprice\n         * @property {number|Long|null} [gaslimit] ProtoTransactionCoreInfo gaslimit\n         * @property {Uint8Array|null} [code] ProtoTransactionCoreInfo code\n         * @property {Uint8Array|null} [data] ProtoTransactionCoreInfo data\n         */\n\n        /**\n         * Constructs a new ProtoTransactionCoreInfo.\n         * @memberof ZilliqaMessage\n         * @classdesc Represents a ProtoTransactionCoreInfo.\n         * @implements IProtoTransactionCoreInfo\n         * @constructor\n         * @param {ZilliqaMessage.IProtoTransactionCoreInfo=} [properties] Properties to set\n         */\n        function ProtoTransactionCoreInfo(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ProtoTransactionCoreInfo version.\n         * @member {number} version\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.version = 0;\n\n        /**\n         * ProtoTransactionCoreInfo nonce.\n         * @member {number|Long} nonce\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.nonce = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * ProtoTransactionCoreInfo toaddr.\n         * @member {Uint8Array} toaddr\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.toaddr = $util.newBuffer([]);\n\n        /**\n         * ProtoTransactionCoreInfo senderpubkey.\n         * @member {ZilliqaMessage.IByteArray|null|undefined} senderpubkey\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.senderpubkey = null;\n\n        /**\n         * ProtoTransactionCoreInfo amount.\n         * @member {ZilliqaMessage.IByteArray|null|undefined} amount\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.amount = null;\n\n        /**\n         * ProtoTransactionCoreInfo gasprice.\n         * @member {ZilliqaMessage.IByteArray|null|undefined} gasprice\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.gasprice = null;\n\n        /**\n         * ProtoTransactionCoreInfo gaslimit.\n         * @member {number|Long} gaslimit\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.gaslimit = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * ProtoTransactionCoreInfo code.\n         * @member {Uint8Array} code\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.code = $util.newBuffer([]);\n\n        /**\n         * ProtoTransactionCoreInfo data.\n         * @member {Uint8Array} data\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         */\n        ProtoTransactionCoreInfo.prototype.data = $util.newBuffer([]);\n\n        /**\n         * Creates a new ProtoTransactionCoreInfo instance using the specified properties.\n         * @function create\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionCoreInfo=} [properties] Properties to set\n         * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo instance\n         */\n        ProtoTransactionCoreInfo.create = function create(properties) {\n            return new ProtoTransactionCoreInfo(properties);\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionCoreInfo message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionCoreInfo.verify|verify} messages.\n         * @function encode\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionCoreInfo} message ProtoTransactionCoreInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionCoreInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);\n            if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.nonce);\n            if (message.toaddr != null && message.hasOwnProperty(\"toaddr\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.toaddr);\n            if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\"))\n                $root.ZilliqaMessage.ByteArray.encode(message.senderpubkey, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.amount != null && message.hasOwnProperty(\"amount\"))\n                $root.ZilliqaMessage.ByteArray.encode(message.amount, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.gasprice != null && message.hasOwnProperty(\"gasprice\"))\n                $root.ZilliqaMessage.ByteArray.encode(message.gasprice, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\"))\n                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.gaslimit);\n            if (message.code != null && message.hasOwnProperty(\"code\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.code);\n            if (message.data != null && message.hasOwnProperty(\"data\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.data);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionCoreInfo message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionCoreInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionCoreInfo} message ProtoTransactionCoreInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionCoreInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ProtoTransactionCoreInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionCoreInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ZilliqaMessage.ProtoTransactionCoreInfo();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.uint32();\n                    break;\n                case 2:\n                    message.nonce = reader.uint64();\n                    break;\n                case 3:\n                    message.toaddr = reader.bytes();\n                    break;\n                case 4:\n                    message.senderpubkey = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.amount = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.gasprice = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.gaslimit = reader.uint64();\n                    break;\n                case 8:\n                    message.code = reader.bytes();\n                    break;\n                case 9:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ProtoTransactionCoreInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionCoreInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ProtoTransactionCoreInfo message.\n         * @function verify\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ProtoTransactionCoreInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version))\n                    return \"version: integer expected\";\n            if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\n                if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high)))\n                    return \"nonce: integer|Long expected\";\n            if (message.toaddr != null && message.hasOwnProperty(\"toaddr\"))\n                if (!(message.toaddr && typeof message.toaddr.length === \"number\" || $util.isString(message.toaddr)))\n                    return \"toaddr: buffer expected\";\n            if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\")) {\n                var error = $root.ZilliqaMessage.ByteArray.verify(message.senderpubkey);\n                if (error)\n                    return \"senderpubkey.\" + error;\n            }\n            if (message.amount != null && message.hasOwnProperty(\"amount\")) {\n                var error = $root.ZilliqaMessage.ByteArray.verify(message.amount);\n                if (error)\n                    return \"amount.\" + error;\n            }\n            if (message.gasprice != null && message.hasOwnProperty(\"gasprice\")) {\n                var error = $root.ZilliqaMessage.ByteArray.verify(message.gasprice);\n                if (error)\n                    return \"gasprice.\" + error;\n            }\n            if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\"))\n                if (!$util.isInteger(message.gaslimit) && !(message.gaslimit && $util.isInteger(message.gaslimit.low) && $util.isInteger(message.gaslimit.high)))\n                    return \"gaslimit: integer|Long expected\";\n            if (message.code != null && message.hasOwnProperty(\"code\"))\n                if (!(message.code && typeof message.code.length === \"number\" || $util.isString(message.code)))\n                    return \"code: buffer expected\";\n            if (message.data != null && message.hasOwnProperty(\"data\"))\n                if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                    return \"data: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ProtoTransactionCoreInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ZilliqaMessage.ProtoTransactionCoreInfo} ProtoTransactionCoreInfo\n         */\n        ProtoTransactionCoreInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.ZilliqaMessage.ProtoTransactionCoreInfo)\n                return object;\n            var message = new $root.ZilliqaMessage.ProtoTransactionCoreInfo();\n            if (object.version != null)\n                message.version = object.version >>> 0;\n            if (object.nonce != null)\n                if ($util.Long)\n                    (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;\n                else if (typeof object.nonce === \"string\")\n                    message.nonce = parseInt(object.nonce, 10);\n                else if (typeof object.nonce === \"number\")\n                    message.nonce = object.nonce;\n                else if (typeof object.nonce === \"object\")\n                    message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n            if (object.toaddr != null)\n                if (typeof object.toaddr === \"string\")\n                    $util.base64.decode(object.toaddr, message.toaddr = $util.newBuffer($util.base64.length(object.toaddr)), 0);\n                else if (object.toaddr.length)\n                    message.toaddr = object.toaddr;\n            if (object.senderpubkey != null) {\n                if (typeof object.senderpubkey !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.senderpubkey: object expected\");\n                message.senderpubkey = $root.ZilliqaMessage.ByteArray.fromObject(object.senderpubkey);\n            }\n            if (object.amount != null) {\n                if (typeof object.amount !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.amount: object expected\");\n                message.amount = $root.ZilliqaMessage.ByteArray.fromObject(object.amount);\n            }\n            if (object.gasprice != null) {\n                if (typeof object.gasprice !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransactionCoreInfo.gasprice: object expected\");\n                message.gasprice = $root.ZilliqaMessage.ByteArray.fromObject(object.gasprice);\n            }\n            if (object.gaslimit != null)\n                if ($util.Long)\n                    (message.gaslimit = $util.Long.fromValue(object.gaslimit)).unsigned = true;\n                else if (typeof object.gaslimit === \"string\")\n                    message.gaslimit = parseInt(object.gaslimit, 10);\n                else if (typeof object.gaslimit === \"number\")\n                    message.gaslimit = object.gaslimit;\n                else if (typeof object.gaslimit === \"object\")\n                    message.gaslimit = new $util.LongBits(object.gaslimit.low >>> 0, object.gaslimit.high >>> 0).toNumber(true);\n            if (object.code != null)\n                if (typeof object.code === \"string\")\n                    $util.base64.decode(object.code, message.code = $util.newBuffer($util.base64.length(object.code)), 0);\n                else if (object.code.length)\n                    message.code = object.code;\n            if (object.data != null)\n                if (typeof object.data === \"string\")\n                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n                else if (object.data.length)\n                    message.data = object.data;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ProtoTransactionCoreInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @static\n         * @param {ZilliqaMessage.ProtoTransactionCoreInfo} message ProtoTransactionCoreInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ProtoTransactionCoreInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.version = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.nonce = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.toaddr = \"\";\n                else {\n                    object.toaddr = [];\n                    if (options.bytes !== Array)\n                        object.toaddr = $util.newBuffer(object.toaddr);\n                }\n                object.senderpubkey = null;\n                object.amount = null;\n                object.gasprice = null;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.gaslimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.gaslimit = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.code = \"\";\n                else {\n                    object.code = [];\n                    if (options.bytes !== Array)\n                        object.code = $util.newBuffer(object.code);\n                }\n                if (options.bytes === String)\n                    object.data = \"\";\n                else {\n                    object.data = [];\n                    if (options.bytes !== Array)\n                        object.data = $util.newBuffer(object.data);\n                }\n            }\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                object.version = message.version;\n            if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\n                if (typeof message.nonce === \"number\")\n                    object.nonce = options.longs === String ? String(message.nonce) : message.nonce;\n                else\n                    object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n            if (message.toaddr != null && message.hasOwnProperty(\"toaddr\"))\n                object.toaddr = options.bytes === String ? $util.base64.encode(message.toaddr, 0, message.toaddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.toaddr) : message.toaddr;\n            if (message.senderpubkey != null && message.hasOwnProperty(\"senderpubkey\"))\n                object.senderpubkey = $root.ZilliqaMessage.ByteArray.toObject(message.senderpubkey, options);\n            if (message.amount != null && message.hasOwnProperty(\"amount\"))\n                object.amount = $root.ZilliqaMessage.ByteArray.toObject(message.amount, options);\n            if (message.gasprice != null && message.hasOwnProperty(\"gasprice\"))\n                object.gasprice = $root.ZilliqaMessage.ByteArray.toObject(message.gasprice, options);\n            if (message.gaslimit != null && message.hasOwnProperty(\"gaslimit\"))\n                if (typeof message.gaslimit === \"number\")\n                    object.gaslimit = options.longs === String ? String(message.gaslimit) : message.gaslimit;\n                else\n                    object.gaslimit = options.longs === String ? $util.Long.prototype.toString.call(message.gaslimit) : options.longs === Number ? new $util.LongBits(message.gaslimit.low >>> 0, message.gaslimit.high >>> 0).toNumber(true) : message.gaslimit;\n            if (message.code != null && message.hasOwnProperty(\"code\"))\n                object.code = options.bytes === String ? $util.base64.encode(message.code, 0, message.code.length) : options.bytes === Array ? Array.prototype.slice.call(message.code) : message.code;\n            if (message.data != null && message.hasOwnProperty(\"data\"))\n                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n            return object;\n        };\n\n        /**\n         * Converts this ProtoTransactionCoreInfo to JSON.\n         * @function toJSON\n         * @memberof ZilliqaMessage.ProtoTransactionCoreInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ProtoTransactionCoreInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ProtoTransactionCoreInfo;\n    })();\n\n    ZilliqaMessage.ProtoTransaction = (function() {\n\n        /**\n         * Properties of a ProtoTransaction.\n         * @memberof ZilliqaMessage\n         * @interface IProtoTransaction\n         * @property {Uint8Array|null} [tranid] ProtoTransaction tranid\n         * @property {ZilliqaMessage.IProtoTransactionCoreInfo|null} [info] ProtoTransaction info\n         * @property {ZilliqaMessage.IByteArray|null} [signature] ProtoTransaction signature\n         */\n\n        /**\n         * Constructs a new ProtoTransaction.\n         * @memberof ZilliqaMessage\n         * @classdesc Represents a ProtoTransaction.\n         * @implements IProtoTransaction\n         * @constructor\n         * @param {ZilliqaMessage.IProtoTransaction=} [properties] Properties to set\n         */\n        function ProtoTransaction(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ProtoTransaction tranid.\n         * @member {Uint8Array} tranid\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @instance\n         */\n        ProtoTransaction.prototype.tranid = $util.newBuffer([]);\n\n        /**\n         * ProtoTransaction info.\n         * @member {ZilliqaMessage.IProtoTransactionCoreInfo|null|undefined} info\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @instance\n         */\n        ProtoTransaction.prototype.info = null;\n\n        /**\n         * ProtoTransaction signature.\n         * @member {ZilliqaMessage.IByteArray|null|undefined} signature\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @instance\n         */\n        ProtoTransaction.prototype.signature = null;\n\n        /**\n         * Creates a new ProtoTransaction instance using the specified properties.\n         * @function create\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {ZilliqaMessage.IProtoTransaction=} [properties] Properties to set\n         * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction instance\n         */\n        ProtoTransaction.create = function create(properties) {\n            return new ProtoTransaction(properties);\n        };\n\n        /**\n         * Encodes the specified ProtoTransaction message. Does not implicitly {@link ZilliqaMessage.ProtoTransaction.verify|verify} messages.\n         * @function encode\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {ZilliqaMessage.IProtoTransaction} message ProtoTransaction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransaction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tranid != null && message.hasOwnProperty(\"tranid\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.tranid);\n            if (message.info != null && message.hasOwnProperty(\"info\"))\n                $root.ZilliqaMessage.ProtoTransactionCoreInfo.encode(message.info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.signature != null && message.hasOwnProperty(\"signature\"))\n                $root.ZilliqaMessage.ByteArray.encode(message.signature, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ProtoTransaction message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransaction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {ZilliqaMessage.IProtoTransaction} message ProtoTransaction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ProtoTransaction message from the specified reader or buffer.\n         * @function decode\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransaction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ZilliqaMessage.ProtoTransaction();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tranid = reader.bytes();\n                    break;\n                case 2:\n                    message.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signature = $root.ZilliqaMessage.ByteArray.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ProtoTransaction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransaction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ProtoTransaction message.\n         * @function verify\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ProtoTransaction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tranid != null && message.hasOwnProperty(\"tranid\"))\n                if (!(message.tranid && typeof message.tranid.length === \"number\" || $util.isString(message.tranid)))\n                    return \"tranid: buffer expected\";\n            if (message.info != null && message.hasOwnProperty(\"info\")) {\n                var error = $root.ZilliqaMessage.ProtoTransactionCoreInfo.verify(message.info);\n                if (error)\n                    return \"info.\" + error;\n            }\n            if (message.signature != null && message.hasOwnProperty(\"signature\")) {\n                var error = $root.ZilliqaMessage.ByteArray.verify(message.signature);\n                if (error)\n                    return \"signature.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ProtoTransaction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ZilliqaMessage.ProtoTransaction} ProtoTransaction\n         */\n        ProtoTransaction.fromObject = function fromObject(object) {\n            if (object instanceof $root.ZilliqaMessage.ProtoTransaction)\n                return object;\n            var message = new $root.ZilliqaMessage.ProtoTransaction();\n            if (object.tranid != null)\n                if (typeof object.tranid === \"string\")\n                    $util.base64.decode(object.tranid, message.tranid = $util.newBuffer($util.base64.length(object.tranid)), 0);\n                else if (object.tranid.length)\n                    message.tranid = object.tranid;\n            if (object.info != null) {\n                if (typeof object.info !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransaction.info: object expected\");\n                message.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.fromObject(object.info);\n            }\n            if (object.signature != null) {\n                if (typeof object.signature !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransaction.signature: object expected\");\n                message.signature = $root.ZilliqaMessage.ByteArray.fromObject(object.signature);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ProtoTransaction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @static\n         * @param {ZilliqaMessage.ProtoTransaction} message ProtoTransaction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ProtoTransaction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.tranid = \"\";\n                else {\n                    object.tranid = [];\n                    if (options.bytes !== Array)\n                        object.tranid = $util.newBuffer(object.tranid);\n                }\n                object.info = null;\n                object.signature = null;\n            }\n            if (message.tranid != null && message.hasOwnProperty(\"tranid\"))\n                object.tranid = options.bytes === String ? $util.base64.encode(message.tranid, 0, message.tranid.length) : options.bytes === Array ? Array.prototype.slice.call(message.tranid) : message.tranid;\n            if (message.info != null && message.hasOwnProperty(\"info\"))\n                object.info = $root.ZilliqaMessage.ProtoTransactionCoreInfo.toObject(message.info, options);\n            if (message.signature != null && message.hasOwnProperty(\"signature\"))\n                object.signature = $root.ZilliqaMessage.ByteArray.toObject(message.signature, options);\n            return object;\n        };\n\n        /**\n         * Converts this ProtoTransaction to JSON.\n         * @function toJSON\n         * @memberof ZilliqaMessage.ProtoTransaction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ProtoTransaction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ProtoTransaction;\n    })();\n\n    ZilliqaMessage.ProtoTransactionReceipt = (function() {\n\n        /**\n         * Properties of a ProtoTransactionReceipt.\n         * @memberof ZilliqaMessage\n         * @interface IProtoTransactionReceipt\n         * @property {Uint8Array|null} [receipt] ProtoTransactionReceipt receipt\n         * @property {number|Long|null} [cumgas] ProtoTransactionReceipt cumgas\n         */\n\n        /**\n         * Constructs a new ProtoTransactionReceipt.\n         * @memberof ZilliqaMessage\n         * @classdesc Represents a ProtoTransactionReceipt.\n         * @implements IProtoTransactionReceipt\n         * @constructor\n         * @param {ZilliqaMessage.IProtoTransactionReceipt=} [properties] Properties to set\n         */\n        function ProtoTransactionReceipt(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ProtoTransactionReceipt receipt.\n         * @member {Uint8Array} receipt\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @instance\n         */\n        ProtoTransactionReceipt.prototype.receipt = $util.newBuffer([]);\n\n        /**\n         * ProtoTransactionReceipt cumgas.\n         * @member {number|Long} cumgas\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @instance\n         */\n        ProtoTransactionReceipt.prototype.cumgas = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * Creates a new ProtoTransactionReceipt instance using the specified properties.\n         * @function create\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionReceipt=} [properties] Properties to set\n         * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt instance\n         */\n        ProtoTransactionReceipt.create = function create(properties) {\n            return new ProtoTransactionReceipt(properties);\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionReceipt message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionReceipt.verify|verify} messages.\n         * @function encode\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionReceipt} message ProtoTransactionReceipt message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionReceipt.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.receipt);\n            if (message.cumgas != null && message.hasOwnProperty(\"cumgas\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.cumgas);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionReceipt message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionReceipt.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionReceipt} message ProtoTransactionReceipt message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionReceipt.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ProtoTransactionReceipt message from the specified reader or buffer.\n         * @function decode\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionReceipt.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ZilliqaMessage.ProtoTransactionReceipt();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.receipt = reader.bytes();\n                    break;\n                case 2:\n                    message.cumgas = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ProtoTransactionReceipt message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionReceipt.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ProtoTransactionReceipt message.\n         * @function verify\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ProtoTransactionReceipt.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\"))\n                if (!(message.receipt && typeof message.receipt.length === \"number\" || $util.isString(message.receipt)))\n                    return \"receipt: buffer expected\";\n            if (message.cumgas != null && message.hasOwnProperty(\"cumgas\"))\n                if (!$util.isInteger(message.cumgas) && !(message.cumgas && $util.isInteger(message.cumgas.low) && $util.isInteger(message.cumgas.high)))\n                    return \"cumgas: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ProtoTransactionReceipt message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ZilliqaMessage.ProtoTransactionReceipt} ProtoTransactionReceipt\n         */\n        ProtoTransactionReceipt.fromObject = function fromObject(object) {\n            if (object instanceof $root.ZilliqaMessage.ProtoTransactionReceipt)\n                return object;\n            var message = new $root.ZilliqaMessage.ProtoTransactionReceipt();\n            if (object.receipt != null)\n                if (typeof object.receipt === \"string\")\n                    $util.base64.decode(object.receipt, message.receipt = $util.newBuffer($util.base64.length(object.receipt)), 0);\n                else if (object.receipt.length)\n                    message.receipt = object.receipt;\n            if (object.cumgas != null)\n                if ($util.Long)\n                    (message.cumgas = $util.Long.fromValue(object.cumgas)).unsigned = true;\n                else if (typeof object.cumgas === \"string\")\n                    message.cumgas = parseInt(object.cumgas, 10);\n                else if (typeof object.cumgas === \"number\")\n                    message.cumgas = object.cumgas;\n                else if (typeof object.cumgas === \"object\")\n                    message.cumgas = new $util.LongBits(object.cumgas.low >>> 0, object.cumgas.high >>> 0).toNumber(true);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ProtoTransactionReceipt message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @static\n         * @param {ZilliqaMessage.ProtoTransactionReceipt} message ProtoTransactionReceipt\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ProtoTransactionReceipt.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if (options.bytes === String)\n                    object.receipt = \"\";\n                else {\n                    object.receipt = [];\n                    if (options.bytes !== Array)\n                        object.receipt = $util.newBuffer(object.receipt);\n                }\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.cumgas = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.cumgas = options.longs === String ? \"0\" : 0;\n            }\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\"))\n                object.receipt = options.bytes === String ? $util.base64.encode(message.receipt, 0, message.receipt.length) : options.bytes === Array ? Array.prototype.slice.call(message.receipt) : message.receipt;\n            if (message.cumgas != null && message.hasOwnProperty(\"cumgas\"))\n                if (typeof message.cumgas === \"number\")\n                    object.cumgas = options.longs === String ? String(message.cumgas) : message.cumgas;\n                else\n                    object.cumgas = options.longs === String ? $util.Long.prototype.toString.call(message.cumgas) : options.longs === Number ? new $util.LongBits(message.cumgas.low >>> 0, message.cumgas.high >>> 0).toNumber(true) : message.cumgas;\n            return object;\n        };\n\n        /**\n         * Converts this ProtoTransactionReceipt to JSON.\n         * @function toJSON\n         * @memberof ZilliqaMessage.ProtoTransactionReceipt\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ProtoTransactionReceipt.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ProtoTransactionReceipt;\n    })();\n\n    ZilliqaMessage.ProtoTransactionWithReceipt = (function() {\n\n        /**\n         * Properties of a ProtoTransactionWithReceipt.\n         * @memberof ZilliqaMessage\n         * @interface IProtoTransactionWithReceipt\n         * @property {ZilliqaMessage.IProtoTransaction|null} [transaction] ProtoTransactionWithReceipt transaction\n         * @property {ZilliqaMessage.IProtoTransactionReceipt|null} [receipt] ProtoTransactionWithReceipt receipt\n         */\n\n        /**\n         * Constructs a new ProtoTransactionWithReceipt.\n         * @memberof ZilliqaMessage\n         * @classdesc Represents a ProtoTransactionWithReceipt.\n         * @implements IProtoTransactionWithReceipt\n         * @constructor\n         * @param {ZilliqaMessage.IProtoTransactionWithReceipt=} [properties] Properties to set\n         */\n        function ProtoTransactionWithReceipt(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ProtoTransactionWithReceipt transaction.\n         * @member {ZilliqaMessage.IProtoTransaction|null|undefined} transaction\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @instance\n         */\n        ProtoTransactionWithReceipt.prototype.transaction = null;\n\n        /**\n         * ProtoTransactionWithReceipt receipt.\n         * @member {ZilliqaMessage.IProtoTransactionReceipt|null|undefined} receipt\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @instance\n         */\n        ProtoTransactionWithReceipt.prototype.receipt = null;\n\n        /**\n         * Creates a new ProtoTransactionWithReceipt instance using the specified properties.\n         * @function create\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionWithReceipt=} [properties] Properties to set\n         * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt instance\n         */\n        ProtoTransactionWithReceipt.create = function create(properties) {\n            return new ProtoTransactionWithReceipt(properties);\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionWithReceipt message. Does not implicitly {@link ZilliqaMessage.ProtoTransactionWithReceipt.verify|verify} messages.\n         * @function encode\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionWithReceipt} message ProtoTransactionWithReceipt message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionWithReceipt.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\"))\n                $root.ZilliqaMessage.ProtoTransaction.encode(message.transaction, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\"))\n                $root.ZilliqaMessage.ProtoTransactionReceipt.encode(message.receipt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ProtoTransactionWithReceipt message, length delimited. Does not implicitly {@link ZilliqaMessage.ProtoTransactionWithReceipt.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {ZilliqaMessage.IProtoTransactionWithReceipt} message ProtoTransactionWithReceipt message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ProtoTransactionWithReceipt.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ProtoTransactionWithReceipt message from the specified reader or buffer.\n         * @function decode\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionWithReceipt.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ZilliqaMessage.ProtoTransactionWithReceipt();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.transaction = $root.ZilliqaMessage.ProtoTransaction.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ProtoTransactionWithReceipt message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ProtoTransactionWithReceipt.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ProtoTransactionWithReceipt message.\n         * @function verify\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ProtoTransactionWithReceipt.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n                var error = $root.ZilliqaMessage.ProtoTransaction.verify(message.transaction);\n                if (error)\n                    return \"transaction.\" + error;\n            }\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\")) {\n                var error = $root.ZilliqaMessage.ProtoTransactionReceipt.verify(message.receipt);\n                if (error)\n                    return \"receipt.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ProtoTransactionWithReceipt message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {ZilliqaMessage.ProtoTransactionWithReceipt} ProtoTransactionWithReceipt\n         */\n        ProtoTransactionWithReceipt.fromObject = function fromObject(object) {\n            if (object instanceof $root.ZilliqaMessage.ProtoTransactionWithReceipt)\n                return object;\n            var message = new $root.ZilliqaMessage.ProtoTransactionWithReceipt();\n            if (object.transaction != null) {\n                if (typeof object.transaction !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransactionWithReceipt.transaction: object expected\");\n                message.transaction = $root.ZilliqaMessage.ProtoTransaction.fromObject(object.transaction);\n            }\n            if (object.receipt != null) {\n                if (typeof object.receipt !== \"object\")\n                    throw TypeError(\".ZilliqaMessage.ProtoTransactionWithReceipt.receipt: object expected\");\n                message.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.fromObject(object.receipt);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ProtoTransactionWithReceipt message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @static\n         * @param {ZilliqaMessage.ProtoTransactionWithReceipt} message ProtoTransactionWithReceipt\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ProtoTransactionWithReceipt.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.transaction = null;\n                object.receipt = null;\n            }\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\"))\n                object.transaction = $root.ZilliqaMessage.ProtoTransaction.toObject(message.transaction, options);\n            if (message.receipt != null && message.hasOwnProperty(\"receipt\"))\n                object.receipt = $root.ZilliqaMessage.ProtoTransactionReceipt.toObject(message.receipt, options);\n            return object;\n        };\n\n        /**\n         * Converts this ProtoTransactionWithReceipt to JSON.\n         * @function toJSON\n         * @memberof ZilliqaMessage.ProtoTransactionWithReceipt\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ProtoTransactionWithReceipt.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ProtoTransactionWithReceipt;\n    })();\n\n    return ZilliqaMessage;\n})();\n\nmodule.exports = $root;\n"]},"metadata":{},"sourceType":"script"}